syntax = "proto3";
import "ProtoAdapter_MusicAnchorStruct.proto"
import "ProtoAdapter_MusicImageBeatsStruct.proto"

message ProtobufMusicStructV2Adapter {
	int64 m7669id = 1;
	string id_str = 2;
	string title = 3;
	string author = 4;
	string album = 5;
	//UrlModel.ADAPTER.encodeWithTag(protoWriter, 6, cover_hd(music));
	//UrlModel.ADAPTER.encodeWithTag(protoWriter, 7, cover_large(music));
	//UrlModel.ADAPTER.encodeWithTag(protoWriter, 8, cover_medium(music));
	//UrlModel.ADAPTER.encodeWithTag(protoWriter, 9, cover_thumb(music));
	//UrlModel.ADAPTER.encodeWithTag(protoWriter, 10, play_url(music));
	string schema_url = 11;
	int32 source_platform = 12;
	int32 start_time = 13;
	int32 end_time = 14;
	int32 duration = 15;
	string extra = 16;
	int32 user_count = 17;
	//Position.ADAPTER.asRepeated().encodeWithTag(protoWriter, 18, position(music));
	//ShareInfo.ADAPTER.encodeWithTag(protoWriter, 19, share_info(music));
	int32 collect_stat = 20;
	int32 status = 21;
	string offline_desc = 22;
	//UrlModel.ADAPTER.encodeWithTag(protoWriter, 23, effects_data(music));
	string owner_id = 24;
	string owner_nickname = 25;
	string use_count_desc = 26;
	//UrlModel.ADAPTER.encodeWithTag(protoWriter, 27, audio_track(music));
	//UrlModel.ADAPTER.encodeWithTag(protoWriter, 28, bodydance_url(music));
	//Challenge.ADAPTER.encodeWithTag(protoWriter, 29, bodydance_challenge(music));
	bool is_original = 30;
	//Challenge.ADAPTER.encodeWithTag(protoWriter, 31, challenge(music));
	int32 billboard_rank = 32;
	string mid = 33;
	//UrlModel.ADAPTER.encodeWithTag(protoWriter, 34, bodydance_challenge_id(music));
	int64 binded_challenge_id = 35;
	bool redirect = 36;
	bool is_restricted = 37;
	bool author_deleted = 38;
	bool is_del_video = 39;
	bool is_video_self_see = 40;
	string owner_handle = 41;
	//Position.ADAPTER.asRepeated().encodeWithTag(protoWriter, 42, author_position(music));
	bool prevent_download = 43;
	int32 music_billboard_type = 44;
	//BillboardWeeklyInfo.ADAPTER.encodeWithTag(protoWriter, 45, music_billboard_weekly_info(music));
	//CategoryCoverStruct.ADAPTER.encodeWithTag(protoWriter, 46, category_cover_info(music));
	bool is_only_owner_use = 47;
	bool is_video_not_recommend = 48;
	//UrlModel.ADAPTER.encodeWithTag(protoWriter, 49, strong_beat_url(music));
	repeated string  unshelve_countries = 50;
	int32 prevent_item_download_status = 51;
	//ExternalMusicInfo.ADAPTER.asRepeated().encodeWithTag(protoWriter, 52, external_song_info(music));
	string sec_uid = 53;
	int32 lyric_type = 54;
	string lyric_url = 55;
	//UrlModel.ADAPTER.encodeWithTag(protoWriter, 56, avatar_thumb(music));
	//UrlModel.ADAPTER.encodeWithTag(protoWriter, 57, avatar_medium(music));
	//UrlModel.ADAPTER.encodeWithTag(protoWriter, 58, avatar_large(music));
	double preview_start_time = 59;
	double preview_end_time = 60;
	int64 cluster_id = 61;
	bool mute_share = 62;
	bool is_author_artist = 63;
	bool is_pgc = 64;
	//MatchedPGCSoundInfo.ADAPTER.encodeWithTag(protoWriter, 65, matched_pgc_sound(music));
	//MatchedSongStruct.ADAPTER.encodeWithTag(protoWriter, 66, matched_song(music));
	MusicAnchorStruct.ProtoAdapter_MusicAnchorStruct  music_anchor = 67;
	int32 audition_duration = 68;
	int32 shoot_duration = 69;
	int32 video_duration = 70;
	//SongStruct.ADAPTER.encodeWithTag(protoWriter, 99, song(music));
	//User.ADAPTER.asRepeated().encodeWithTag(protoWriter, 100, artist_user_infos(music));
	//ProtoAdapter.STRING.encodeWithTag(protoWriter, BdpDebugHttpRequest.HTTP_SWITCHING_PROTOCOLS, music_title(music));
	MusicImageBeatsStruct.ProtoAdapter_MusicImageBeatsStruct music_image_beats = 102;
}