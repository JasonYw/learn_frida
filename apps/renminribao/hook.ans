[35;01mr0tracer begin ... ![39;49;00m
[31;01mstart[39;49;00m
[32;11mBegin enumerateClassLoaders ...[39;49;00m
[31;01m continuing :Error: java.lang.ClassNotFoundException: Didn't find class "com.peopledailychina.activity.application.NewsApplication" on path: DexPathList[[directory "."],nativeLibraryDirectories=[/system/lib64, /system/lib64]][39;49;00m
[31;01m continuing :Error: java.lang.ClassNotFoundException: com.peopledailychina.activity.application.NewsApplication[39;49;00m
[31;01mEnumerateClassloader END[39;49;00m
[31;01mBegin Search Class...[39;49;00m
[30;01mFound Class => org.apache.http.ProtocolVersion[39;49;00m
[31;01mTracing Method : org.apache.http.ProtocolVersion.clone [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.ProtocolVersion.compareToVersion [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.ProtocolVersion.equals [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.ProtocolVersion.forVersion [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.ProtocolVersion.getMajor [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.ProtocolVersion.getMinor [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.ProtocolVersion.getProtocol [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.ProtocolVersion.greaterEquals [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.ProtocolVersion.hashCode [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.ProtocolVersion.isComparable [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.ProtocolVersion.lessEquals [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.ProtocolVersion.toString [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.ProtocolVersion.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public java.lang.Object org.apache.http.ProtocolVersion.clone() throws java.lang.CloneNotSupportedException
public int org.apache.http.ProtocolVersion.compareToVersion(org.apache.http.ProtocolVersion)
public final boolean org.apache.http.ProtocolVersion.equals(java.lang.Object)
public org.apache.http.ProtocolVersion org.apache.http.ProtocolVersion.forVersion(int,int)
public final int org.apache.http.ProtocolVersion.getMajor()
public final int org.apache.http.ProtocolVersion.getMinor()
public final java.lang.String org.apache.http.ProtocolVersion.getProtocol()
public final boolean org.apache.http.ProtocolVersion.greaterEquals(org.apache.http.ProtocolVersion)
public final int org.apache.http.ProtocolVersion.hashCode()
public boolean org.apache.http.ProtocolVersion.isComparable(org.apache.http.ProtocolVersion)
public final boolean org.apache.http.ProtocolVersion.lessEquals(org.apache.http.ProtocolVersion)
public java.lang.String org.apache.http.ProtocolVersion.toString()
Tracing public org.apache.http.ProtocolVersion(java.lang.String,int,int)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.HttpResponse[39;49;00m
[31;01mTracing Method : org.apache.http.HttpResponse.getEntity [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpResponse.getLocale [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpResponse.getStatusLine [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpResponse.setEntity [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpResponse.setLocale [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpResponse.setReasonPhrase [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpResponse.setStatusCode [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpResponse.setStatusLine [3 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract org.apache.http.HttpEntity org.apache.http.HttpResponse.getEntity()
public abstract java.util.Locale org.apache.http.HttpResponse.getLocale()
public abstract org.apache.http.StatusLine org.apache.http.HttpResponse.getStatusLine()
public abstract void org.apache.http.HttpResponse.setEntity(org.apache.http.HttpEntity)
public abstract void org.apache.http.HttpResponse.setLocale(java.util.Locale)
public abstract void org.apache.http.HttpResponse.setReasonPhrase(java.lang.String) throws java.lang.IllegalStateException
public abstract void org.apache.http.HttpResponse.setStatusCode(int) throws java.lang.IllegalStateException
public abstract void org.apache.http.HttpResponse.setStatusLine(org.apache.http.ProtocolVersion,int)
public abstract void org.apache.http.HttpResponse.setStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String)
public abstract void org.apache.http.HttpResponse.setStatusLine(org.apache.http.StatusLine)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.ConnectionReuseStrategy[39;49;00m
[31;01mTracing Method : org.apache.http.ConnectionReuseStrategy.keepAlive [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract boolean org.apache.http.ConnectionReuseStrategy.keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.impl.cookie.DateParseException[39;49;00m
[31;01mTracing Method : org.apache.http.impl.cookie.DateParseException.$init [2 overload(s)][39;49;00m
[32;01m	Spec: => 
Tracing public org.apache.http.impl.cookie.DateParseException()
Tracing public org.apache.http.impl.cookie.DateParseException(java.lang.String)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.message.AbstractHttpMessage[39;49;00m
[31;01mTracing Method : org.apache.http.message.AbstractHttpMessage.addHeader [2 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.AbstractHttpMessage.containsHeader [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.AbstractHttpMessage.getAllHeaders [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.AbstractHttpMessage.getFirstHeader [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.AbstractHttpMessage.getHeaders [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.AbstractHttpMessage.getLastHeader [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.AbstractHttpMessage.getParams [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.AbstractHttpMessage.headerIterator [2 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.AbstractHttpMessage.removeHeader [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.AbstractHttpMessage.removeHeaders [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.AbstractHttpMessage.setHeader [2 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.AbstractHttpMessage.setHeaders [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.AbstractHttpMessage.setParams [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.AbstractHttpMessage.$init [2 overload(s)][39;49;00m
[32;01m	Spec: => 
public void org.apache.http.message.AbstractHttpMessage.addHeader(java.lang.String,java.lang.String)
public void org.apache.http.message.AbstractHttpMessage.addHeader(org.apache.http.Header)
public boolean org.apache.http.message.AbstractHttpMessage.containsHeader(java.lang.String)
public org.apache.http.Header[] org.apache.http.message.AbstractHttpMessage.getAllHeaders()
public org.apache.http.Header org.apache.http.message.AbstractHttpMessage.getFirstHeader(java.lang.String)
public org.apache.http.Header[] org.apache.http.message.AbstractHttpMessage.getHeaders(java.lang.String)
public org.apache.http.Header org.apache.http.message.AbstractHttpMessage.getLastHeader(java.lang.String)
public org.apache.http.params.HttpParams org.apache.http.message.AbstractHttpMessage.getParams()
public org.apache.http.HeaderIterator org.apache.http.message.AbstractHttpMessage.headerIterator()
public org.apache.http.HeaderIterator org.apache.http.message.AbstractHttpMessage.headerIterator(java.lang.String)
public void org.apache.http.message.AbstractHttpMessage.removeHeader(org.apache.http.Header)
public void org.apache.http.message.AbstractHttpMessage.removeHeaders(java.lang.String)
public void org.apache.http.message.AbstractHttpMessage.setHeader(java.lang.String,java.lang.String)
public void org.apache.http.message.AbstractHttpMessage.setHeader(org.apache.http.Header)
public void org.apache.http.message.AbstractHttpMessage.setHeaders(org.apache.http.Header[])
public void org.apache.http.message.AbstractHttpMessage.setParams(org.apache.http.params.HttpParams)
Tracing protected org.apache.http.message.AbstractHttpMessage()
Tracing protected org.apache.http.message.AbstractHttpMessage(org.apache.http.params.HttpParams)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.HttpHost[39;49;00m
[31;01mTracing Method : org.apache.http.HttpHost.clone [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpHost.equals [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpHost.getHostName [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpHost.getPort [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpHost.getSchemeName [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpHost.hashCode [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpHost.toHostString [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpHost.toString [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpHost.toURI [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpHost.$init [4 overload(s)][39;49;00m
[32;01m	Spec: => 
public java.lang.Object org.apache.http.HttpHost.clone() throws java.lang.CloneNotSupportedException
public boolean org.apache.http.HttpHost.equals(java.lang.Object)
public java.lang.String org.apache.http.HttpHost.getHostName()
public int org.apache.http.HttpHost.getPort()
public java.lang.String org.apache.http.HttpHost.getSchemeName()
public int org.apache.http.HttpHost.hashCode()
public java.lang.String org.apache.http.HttpHost.toHostString()
public java.lang.String org.apache.http.HttpHost.toString()
public java.lang.String org.apache.http.HttpHost.toURI()
Tracing public org.apache.http.HttpHost(java.lang.String)
Tracing public org.apache.http.HttpHost(java.lang.String,int)
Tracing public org.apache.http.HttpHost(java.lang.String,int,java.lang.String)
Tracing public org.apache.http.HttpHost(org.apache.http.HttpHost)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.conn.params.ConnPerRoute[39;49;00m
[31;01mTracing Method : org.apache.http.conn.params.ConnPerRoute.getMaxForRoute [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract int org.apache.http.conn.params.ConnPerRoute.getMaxForRoute(org.apache.http.conn.routing.HttpRoute)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.impl.conn.tsccm.RefQueueWorker[39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.RefQueueWorker.run [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.RefQueueWorker.shutdown [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.RefQueueWorker.toString [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.RefQueueWorker.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public void org.apache.http.impl.conn.tsccm.RefQueueWorker.run()
public void org.apache.http.impl.conn.tsccm.RefQueueWorker.shutdown()
public java.lang.String org.apache.http.impl.conn.tsccm.RefQueueWorker.toString()
Tracing public org.apache.http.impl.conn.tsccm.RefQueueWorker(java.lang.ref.ReferenceQueue,org.apache.http.impl.conn.tsccm.RefQueueHandler)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.params.AbstractHttpParams[39;49;00m
[31;01mTracing Method : org.apache.http.params.AbstractHttpParams.getBooleanParameter [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.AbstractHttpParams.getDoubleParameter [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.AbstractHttpParams.getIntParameter [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.AbstractHttpParams.getLongParameter [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.AbstractHttpParams.isParameterFalse [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.AbstractHttpParams.isParameterTrue [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.AbstractHttpParams.setBooleanParameter [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.AbstractHttpParams.setDoubleParameter [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.AbstractHttpParams.setIntParameter [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.AbstractHttpParams.setLongParameter [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.AbstractHttpParams.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public boolean org.apache.http.params.AbstractHttpParams.getBooleanParameter(java.lang.String,boolean)
public double org.apache.http.params.AbstractHttpParams.getDoubleParameter(java.lang.String,double)
public int org.apache.http.params.AbstractHttpParams.getIntParameter(java.lang.String,int)
public long org.apache.http.params.AbstractHttpParams.getLongParameter(java.lang.String,long)
public boolean org.apache.http.params.AbstractHttpParams.isParameterFalse(java.lang.String)
public boolean org.apache.http.params.AbstractHttpParams.isParameterTrue(java.lang.String)
public org.apache.http.params.HttpParams org.apache.http.params.AbstractHttpParams.setBooleanParameter(java.lang.String,boolean)
public org.apache.http.params.HttpParams org.apache.http.params.AbstractHttpParams.setDoubleParameter(java.lang.String,double)
public org.apache.http.params.HttpParams org.apache.http.params.AbstractHttpParams.setIntParameter(java.lang.String,int)
public org.apache.http.params.HttpParams org.apache.http.params.AbstractHttpParams.setLongParameter(java.lang.String,long)
Tracing protected org.apache.http.params.AbstractHttpParams()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.impl.conn.IdleConnectionHandler[39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.IdleConnectionHandler.add [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.IdleConnectionHandler.closeExpiredConnections [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.IdleConnectionHandler.closeIdleConnections [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.IdleConnectionHandler.remove [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.IdleConnectionHandler.removeAll [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.IdleConnectionHandler.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public void org.apache.http.impl.conn.IdleConnectionHandler.add(org.apache.http.HttpConnection,long,java.util.concurrent.TimeUnit)
public void org.apache.http.impl.conn.IdleConnectionHandler.closeExpiredConnections()
public void org.apache.http.impl.conn.IdleConnectionHandler.closeIdleConnections(long)
public boolean org.apache.http.impl.conn.IdleConnectionHandler.remove(org.apache.http.HttpConnection)
public void org.apache.http.impl.conn.IdleConnectionHandler.removeAll()
Tracing public org.apache.http.impl.conn.IdleConnectionHandler()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.HttpRequestInterceptor[39;49;00m
[31;01mTracing Method : org.apache.http.HttpRequestInterceptor.process [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void org.apache.http.HttpRequestInterceptor.process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException,java.io.IOException
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.commons.logging.impl.WeakHashtable[39;49;00m
[31;01mTracing Method : org.apache.commons.logging.impl.WeakHashtable.purge [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.impl.WeakHashtable.purgeOne [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.impl.WeakHashtable.containsKey [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.impl.WeakHashtable.elements [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.impl.WeakHashtable.entrySet [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.impl.WeakHashtable.get [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.impl.WeakHashtable.isEmpty [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.impl.WeakHashtable.keySet [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.impl.WeakHashtable.keys [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.impl.WeakHashtable.put [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.impl.WeakHashtable.putAll [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.impl.WeakHashtable.rehash [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.impl.WeakHashtable.remove [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.impl.WeakHashtable.size [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.impl.WeakHashtable.toString [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.impl.WeakHashtable.values [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.impl.WeakHashtable.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
private void org.apache.commons.logging.impl.WeakHashtable.purge()
private void org.apache.commons.logging.impl.WeakHashtable.purgeOne()
public boolean org.apache.commons.logging.impl.WeakHashtable.containsKey(java.lang.Object)
public java.util.Enumeration org.apache.commons.logging.impl.WeakHashtable.elements()
public java.util.Set org.apache.commons.logging.impl.WeakHashtable.entrySet()
public java.lang.Object org.apache.commons.logging.impl.WeakHashtable.get(java.lang.Object)
public boolean org.apache.commons.logging.impl.WeakHashtable.isEmpty()
public java.util.Set org.apache.commons.logging.impl.WeakHashtable.keySet()
public java.util.Enumeration org.apache.commons.logging.impl.WeakHashtable.keys()
public java.lang.Object org.apache.commons.logging.impl.WeakHashtable.put(java.lang.Object,java.lang.Object)
public void org.apache.commons.logging.impl.WeakHashtable.putAll(java.util.Map)
protected void org.apache.commons.logging.impl.WeakHashtable.rehash()
public java.lang.Object org.apache.commons.logging.impl.WeakHashtable.remove(java.lang.Object)
public int org.apache.commons.logging.impl.WeakHashtable.size()
public java.lang.String org.apache.commons.logging.impl.WeakHashtable.toString()
public java.util.Collection org.apache.commons.logging.impl.WeakHashtable.values()
Tracing public org.apache.commons.logging.impl.WeakHashtable()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.commons.logging.Log[39;49;00m
[31;01mTracing Method : org.apache.commons.logging.Log.debug [2 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.Log.error [2 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.Log.fatal [2 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.Log.info [2 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.Log.isDebugEnabled [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.Log.isErrorEnabled [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.Log.isFatalEnabled [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.Log.isInfoEnabled [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.Log.isTraceEnabled [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.Log.isWarnEnabled [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.Log.trace [2 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.commons.logging.Log.warn [2 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void org.apache.commons.logging.Log.debug(java.lang.Object)
public abstract void org.apache.commons.logging.Log.debug(java.lang.Object,java.lang.Throwable)
public abstract void org.apache.commons.logging.Log.error(java.lang.Object)
public abstract void org.apache.commons.logging.Log.error(java.lang.Object,java.lang.Throwable)
public abstract void org.apache.commons.logging.Log.fatal(java.lang.Object)
public abstract void org.apache.commons.logging.Log.fatal(java.lang.Object,java.lang.Throwable)
public abstract void org.apache.commons.logging.Log.info(java.lang.Object)
public abstract void org.apache.commons.logging.Log.info(java.lang.Object,java.lang.Throwable)
public abstract boolean org.apache.commons.logging.Log.isDebugEnabled()
public abstract boolean org.apache.commons.logging.Log.isErrorEnabled()
public abstract boolean org.apache.commons.logging.Log.isFatalEnabled()
public abstract boolean org.apache.commons.logging.Log.isInfoEnabled()
public abstract boolean org.apache.commons.logging.Log.isTraceEnabled()
public abstract boolean org.apache.commons.logging.Log.isWarnEnabled()
public abstract void org.apache.commons.logging.Log.trace(java.lang.Object)
public abstract void org.apache.commons.logging.Log.trace(java.lang.Object,java.lang.Throwable)
public abstract void org.apache.commons.logging.Log.warn(java.lang.Object)
public abstract void org.apache.commons.logging.Log.warn(java.lang.Object,java.lang.Throwable)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.conn.params.ConnManagerPNames[39;49;00m
[32;01m	Spec: => 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.ParseException[39;49;00m
[31;01mTracing Method : org.apache.http.ParseException.$init [2 overload(s)][39;49;00m
[32;01m	Spec: => 
Tracing public org.apache.http.ParseException()
Tracing public org.apache.http.ParseException(java.lang.String)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.impl.cookie.DateUtils$DateFormatHolder$1[39;49;00m
[31;01mTracing Method : org.apache.http.impl.cookie.DateUtils$DateFormatHolder$1.initialValue [2 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.cookie.DateUtils$DateFormatHolder$1.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
protected java.lang.Object org.apache.http.impl.cookie.DateUtils$DateFormatHolder$1.initialValue()
protected java.lang.ref.SoftReference org.apache.http.impl.cookie.DateUtils$DateFormatHolder$1.initialValue()
Tracing org.apache.http.impl.cookie.DateUtils$DateFormatHolder$1()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.message.BasicHeader[39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHeader.clone [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHeader.getElements [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHeader.getName [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHeader.getValue [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHeader.toString [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHeader.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public java.lang.Object org.apache.http.message.BasicHeader.clone() throws java.lang.CloneNotSupportedException
public org.apache.http.HeaderElement[] org.apache.http.message.BasicHeader.getElements() throws org.apache.http.ParseException
public java.lang.String org.apache.http.message.BasicHeader.getName()
public java.lang.String org.apache.http.message.BasicHeader.getValue()
public java.lang.String org.apache.http.message.BasicHeader.toString()
Tracing public org.apache.http.message.BasicHeader(java.lang.String,java.lang.String)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.StatusLine[39;49;00m
[31;01mTracing Method : org.apache.http.StatusLine.getProtocolVersion [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.StatusLine.getReasonPhrase [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.StatusLine.getStatusCode [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract org.apache.http.ProtocolVersion org.apache.http.StatusLine.getProtocolVersion()
public abstract java.lang.String org.apache.http.StatusLine.getReasonPhrase()
public abstract int org.apache.http.StatusLine.getStatusCode()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.client.params.HttpClientParams[39;49;00m
[31;01mTracing Method : org.apache.http.client.params.HttpClientParams.getCookiePolicy [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.client.params.HttpClientParams.isAuthenticating [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.client.params.HttpClientParams.isRedirecting [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.client.params.HttpClientParams.setAuthenticating [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.client.params.HttpClientParams.setCookiePolicy [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.client.params.HttpClientParams.setRedirecting [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.client.params.HttpClientParams.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public static java.lang.String org.apache.http.client.params.HttpClientParams.getCookiePolicy(org.apache.http.params.HttpParams)
public static boolean org.apache.http.client.params.HttpClientParams.isAuthenticating(org.apache.http.params.HttpParams)
public static boolean org.apache.http.client.params.HttpClientParams.isRedirecting(org.apache.http.params.HttpParams)
public static void org.apache.http.client.params.HttpClientParams.setAuthenticating(org.apache.http.params.HttpParams,boolean)
public static void org.apache.http.client.params.HttpClientParams.setCookiePolicy(org.apache.http.params.HttpParams,java.lang.String)
public static void org.apache.http.client.params.HttpClientParams.setRedirecting(org.apache.http.params.HttpParams,boolean)
Tracing private org.apache.http.client.params.HttpClientParams()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.client.methods.HttpUriRequest[39;49;00m
[31;01mTracing Method : org.apache.http.client.methods.HttpUriRequest.abort [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.client.methods.HttpUriRequest.getMethod [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.client.methods.HttpUriRequest.getURI [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.client.methods.HttpUriRequest.isAborted [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void org.apache.http.client.methods.HttpUriRequest.abort() throws java.lang.UnsupportedOperationException
public abstract java.lang.String org.apache.http.client.methods.HttpUriRequest.getMethod()
public abstract java.net.URI org.apache.http.client.methods.HttpUriRequest.getURI()
public abstract boolean org.apache.http.client.methods.HttpUriRequest.isAborted()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.conn.ClientConnectionManager[39;49;00m
[31;01mTracing Method : org.apache.http.conn.ClientConnectionManager.closeExpiredConnections [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.conn.ClientConnectionManager.closeIdleConnections [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.conn.ClientConnectionManager.getSchemeRegistry [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.conn.ClientConnectionManager.releaseConnection [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.conn.ClientConnectionManager.requestConnection [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.conn.ClientConnectionManager.shutdown [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void org.apache.http.conn.ClientConnectionManager.closeExpiredConnections()
public abstract void org.apache.http.conn.ClientConnectionManager.closeIdleConnections(long,java.util.concurrent.TimeUnit)
public abstract org.apache.http.conn.scheme.SchemeRegistry org.apache.http.conn.ClientConnectionManager.getSchemeRegistry()
public abstract void org.apache.http.conn.ClientConnectionManager.releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit)
public abstract org.apache.http.conn.ClientConnectionRequest org.apache.http.conn.ClientConnectionManager.requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)
public abstract void org.apache.http.conn.ClientConnectionManager.shutdown()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.HttpEntity[39;49;00m
[31;01mTracing Method : org.apache.http.HttpEntity.consumeContent [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpEntity.getContent [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpEntity.getContentEncoding [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpEntity.getContentLength [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpEntity.getContentType [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpEntity.isChunked [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpEntity.isRepeatable [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpEntity.isStreaming [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpEntity.writeTo [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void org.apache.http.HttpEntity.consumeContent() throws java.io.IOException
public abstract java.io.InputStream org.apache.http.HttpEntity.getContent() throws java.io.IOException,java.lang.IllegalStateException
public abstract org.apache.http.Header org.apache.http.HttpEntity.getContentEncoding()
public abstract long org.apache.http.HttpEntity.getContentLength()
public abstract org.apache.http.Header org.apache.http.HttpEntity.getContentType()
public abstract boolean org.apache.http.HttpEntity.isChunked()
public abstract boolean org.apache.http.HttpEntity.isRepeatable()
public abstract boolean org.apache.http.HttpEntity.isStreaming()
public abstract void org.apache.http.HttpEntity.writeTo(java.io.OutputStream) throws java.io.IOException
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.conn.ClientConnectionOperator[39;49;00m
[31;01mTracing Method : org.apache.http.conn.ClientConnectionOperator.createConnection [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.conn.ClientConnectionOperator.openConnection [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.conn.ClientConnectionOperator.updateSecureConnection [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract org.apache.http.conn.OperatedClientConnection org.apache.http.conn.ClientConnectionOperator.createConnection()
public abstract void org.apache.http.conn.ClientConnectionOperator.openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) throws java.io.IOException
public abstract void org.apache.http.conn.ClientConnectionOperator.updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) throws java.io.IOException
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.conn.params.ConnManagerParams$1[39;49;00m
[31;01mTracing Method : org.apache.http.conn.params.ConnManagerParams$1.getMaxForRoute [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.conn.params.ConnManagerParams$1.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public int org.apache.http.conn.params.ConnManagerParams$1.getMaxForRoute(org.apache.http.conn.routing.HttpRoute)
Tracing org.apache.http.conn.params.ConnManagerParams$1()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.Header[39;49;00m
[31;01mTracing Method : org.apache.http.Header.getElements [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.Header.getName [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.Header.getValue [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract org.apache.http.HeaderElement[] org.apache.http.Header.getElements() throws org.apache.http.ParseException
public abstract java.lang.String org.apache.http.Header.getName()
public abstract java.lang.String org.apache.http.Header.getValue()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.conn.scheme.SchemeRegistry[39;49;00m
[31;01mTracing Method : org.apache.http.conn.scheme.SchemeRegistry.get [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.conn.scheme.SchemeRegistry.getScheme [2 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.conn.scheme.SchemeRegistry.getSchemeNames [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.conn.scheme.SchemeRegistry.register [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.conn.scheme.SchemeRegistry.setItems [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.conn.scheme.SchemeRegistry.unregister [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.conn.scheme.SchemeRegistry.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public final synchronized org.apache.http.conn.scheme.Scheme org.apache.http.conn.scheme.SchemeRegistry.get(java.lang.String)
public final synchronized org.apache.http.conn.scheme.Scheme org.apache.http.conn.scheme.SchemeRegistry.getScheme(java.lang.String)
public final synchronized org.apache.http.conn.scheme.Scheme org.apache.http.conn.scheme.SchemeRegistry.getScheme(org.apache.http.HttpHost)
public final synchronized java.util.List org.apache.http.conn.scheme.SchemeRegistry.getSchemeNames()
public final synchronized org.apache.http.conn.scheme.Scheme org.apache.http.conn.scheme.SchemeRegistry.register(org.apache.http.conn.scheme.Scheme)
public synchronized void org.apache.http.conn.scheme.SchemeRegistry.setItems(java.util.Map)
public final synchronized org.apache.http.conn.scheme.Scheme org.apache.http.conn.scheme.SchemeRegistry.unregister(java.lang.String)
Tracing public org.apache.http.conn.scheme.SchemeRegistry()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.client.HttpClient[39;49;00m
[31;01mTracing Method : org.apache.http.client.HttpClient.execute [8 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.client.HttpClient.getConnectionManager [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.client.HttpClient.getParams [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract java.lang.Object org.apache.http.client.HttpClient.execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) throws java.io.IOException,org.apache.http.client.ClientProtocolException
public abstract java.lang.Object org.apache.http.client.HttpClient.execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) throws java.io.IOException,org.apache.http.client.ClientProtocolException
public abstract java.lang.Object org.apache.http.client.HttpClient.execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) throws java.io.IOException,org.apache.http.client.ClientProtocolException
public abstract java.lang.Object org.apache.http.client.HttpClient.execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) throws java.io.IOException,org.apache.http.client.ClientProtocolException
public abstract org.apache.http.HttpResponse org.apache.http.client.HttpClient.execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) throws java.io.IOException,org.apache.http.client.ClientProtocolException
public abstract org.apache.http.HttpResponse org.apache.http.client.HttpClient.execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) throws java.io.IOException,org.apache.http.client.ClientProtocolException
public abstract org.apache.http.HttpResponse org.apache.http.client.HttpClient.execute(org.apache.http.client.methods.HttpUriRequest) throws java.io.IOException,org.apache.http.client.ClientProtocolException
public abstract org.apache.http.HttpResponse org.apache.http.client.HttpClient.execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) throws java.io.IOException,org.apache.http.client.ClientProtocolException
public abstract org.apache.http.conn.ClientConnectionManager org.apache.http.client.HttpClient.getConnectionManager()
public abstract org.apache.http.params.HttpParams org.apache.http.client.HttpClient.getParams()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager[39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.-get0 [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.closeExpiredConnections [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.closeIdleConnections [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.createConnectionOperator [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.createConnectionPool [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.finalize [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.getConnectionsInPool [2 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.getSchemeRegistry [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.releaseConnection [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.requestConnection [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.shutdown [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
static org.apache.commons.logging.Log org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.-get0(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager)
public void org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.closeExpiredConnections()
public void org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.closeIdleConnections(long,java.util.concurrent.TimeUnit)
protected org.apache.http.conn.ClientConnectionOperator org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)
protected org.apache.http.impl.conn.tsccm.AbstractConnPool org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.createConnectionPool(org.apache.http.params.HttpParams)
protected void org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.finalize() throws java.lang.Throwable
public int org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.getConnectionsInPool()
public int org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)
public org.apache.http.conn.scheme.SchemeRegistry org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.getSchemeRegistry()
public void org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit)
public org.apache.http.conn.ClientConnectionRequest org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)
public void org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.shutdown()
Tracing public org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.NameValuePair[39;49;00m
[31;01mTracing Method : org.apache.http.NameValuePair.getName [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.NameValuePair.getValue [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract java.lang.String org.apache.http.NameValuePair.getName()
public abstract java.lang.String org.apache.http.NameValuePair.getValue()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.message.BasicStatusLine[39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicStatusLine.clone [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicStatusLine.getProtocolVersion [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicStatusLine.getReasonPhrase [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicStatusLine.getStatusCode [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicStatusLine.toString [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicStatusLine.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public java.lang.Object org.apache.http.message.BasicStatusLine.clone() throws java.lang.CloneNotSupportedException
public org.apache.http.ProtocolVersion org.apache.http.message.BasicStatusLine.getProtocolVersion()
public java.lang.String org.apache.http.message.BasicStatusLine.getReasonPhrase()
public int org.apache.http.message.BasicStatusLine.getStatusCode()
public java.lang.String org.apache.http.message.BasicStatusLine.toString()
Tracing public org.apache.http.message.BasicStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.message.BasicHttpResponse[39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHttpResponse.getEntity [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHttpResponse.getLocale [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHttpResponse.getProtocolVersion [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHttpResponse.getReason [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHttpResponse.getStatusLine [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHttpResponse.setEntity [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHttpResponse.setLocale [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHttpResponse.setReasonPhrase [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHttpResponse.setStatusCode [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHttpResponse.setStatusLine [3 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHttpResponse.$init [3 overload(s)][39;49;00m
[32;01m	Spec: => 
public org.apache.http.HttpEntity org.apache.http.message.BasicHttpResponse.getEntity()
public java.util.Locale org.apache.http.message.BasicHttpResponse.getLocale()
public org.apache.http.ProtocolVersion org.apache.http.message.BasicHttpResponse.getProtocolVersion()
protected java.lang.String org.apache.http.message.BasicHttpResponse.getReason(int)
public org.apache.http.StatusLine org.apache.http.message.BasicHttpResponse.getStatusLine()
public void org.apache.http.message.BasicHttpResponse.setEntity(org.apache.http.HttpEntity)
public void org.apache.http.message.BasicHttpResponse.setLocale(java.util.Locale)
public void org.apache.http.message.BasicHttpResponse.setReasonPhrase(java.lang.String)
public void org.apache.http.message.BasicHttpResponse.setStatusCode(int)
public void org.apache.http.message.BasicHttpResponse.setStatusLine(org.apache.http.ProtocolVersion,int)
public void org.apache.http.message.BasicHttpResponse.setStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String)
public void org.apache.http.message.BasicHttpResponse.setStatusLine(org.apache.http.StatusLine)
Tracing public org.apache.http.message.BasicHttpResponse(org.apache.http.ProtocolVersion,int,java.lang.String)
Tracing public org.apache.http.message.BasicHttpResponse(org.apache.http.StatusLine)
Tracing public org.apache.http.message.BasicHttpResponse(org.apache.http.StatusLine,org.apache.http.ReasonPhraseCatalog,java.util.Locale)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.protocol.HttpRequestInterceptorList[39;49;00m
[31;01mTracing Method : org.apache.http.protocol.HttpRequestInterceptorList.addRequestInterceptor [2 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.HttpRequestInterceptorList.clearRequestInterceptors [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.HttpRequestInterceptorList.getRequestInterceptor [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.HttpRequestInterceptorList.getRequestInterceptorCount [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.HttpRequestInterceptorList.removeRequestInterceptorByClass [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.HttpRequestInterceptorList.setInterceptors [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void org.apache.http.protocol.HttpRequestInterceptorList.addRequestInterceptor(org.apache.http.HttpRequestInterceptor)
public abstract void org.apache.http.protocol.HttpRequestInterceptorList.addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int)
public abstract void org.apache.http.protocol.HttpRequestInterceptorList.clearRequestInterceptors()
public abstract org.apache.http.HttpRequestInterceptor org.apache.http.protocol.HttpRequestInterceptorList.getRequestInterceptor(int)
public abstract int org.apache.http.protocol.HttpRequestInterceptorList.getRequestInterceptorCount()
public abstract void org.apache.http.protocol.HttpRequestInterceptorList.removeRequestInterceptorByClass(java.lang.Class)
public abstract void org.apache.http.protocol.HttpRequestInterceptorList.setInterceptors(java.util.List)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.message.HeaderValueParser[39;49;00m
[31;01mTracing Method : org.apache.http.message.HeaderValueParser.parseElements [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.HeaderValueParser.parseHeaderElement [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.HeaderValueParser.parseNameValuePair [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.HeaderValueParser.parseParameters [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract org.apache.http.HeaderElement[] org.apache.http.message.HeaderValueParser.parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) throws org.apache.http.ParseException
public abstract org.apache.http.HeaderElement org.apache.http.message.HeaderValueParser.parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) throws org.apache.http.ParseException
public abstract org.apache.http.NameValuePair org.apache.http.message.HeaderValueParser.parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) throws org.apache.http.ParseException
public abstract org.apache.http.NameValuePair[] org.apache.http.message.HeaderValueParser.parseParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) throws org.apache.http.ParseException
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.client.ResponseHandler[39;49;00m
[31;01mTracing Method : org.apache.http.client.ResponseHandler.handleResponse [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract java.lang.Object org.apache.http.client.ResponseHandler.handleResponse(org.apache.http.HttpResponse) throws org.apache.http.client.ClientProtocolException,java.io.IOException
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.ReasonPhraseCatalog[39;49;00m
[31;01mTracing Method : org.apache.http.ReasonPhraseCatalog.getReason [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract java.lang.String org.apache.http.ReasonPhraseCatalog.getReason(int,java.util.Locale)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.message.BasicNameValuePair[39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicNameValuePair.clone [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicNameValuePair.equals [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicNameValuePair.getName [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicNameValuePair.getValue [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicNameValuePair.hashCode [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicNameValuePair.toString [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicNameValuePair.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public java.lang.Object org.apache.http.message.BasicNameValuePair.clone() throws java.lang.CloneNotSupportedException
public boolean org.apache.http.message.BasicNameValuePair.equals(java.lang.Object)
public java.lang.String org.apache.http.message.BasicNameValuePair.getName()
public java.lang.String org.apache.http.message.BasicNameValuePair.getValue()
public int org.apache.http.message.BasicNameValuePair.hashCode()
public java.lang.String org.apache.http.message.BasicNameValuePair.toString()
Tracing public org.apache.http.message.BasicNameValuePair(java.lang.String,java.lang.String)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.ProtocolException[39;49;00m
[31;01mTracing Method : org.apache.http.ProtocolException.$init [3 overload(s)][39;49;00m
[32;01m	Spec: => 
Tracing public org.apache.http.ProtocolException()
Tracing public org.apache.http.ProtocolException(java.lang.String)
Tracing public org.apache.http.ProtocolException(java.lang.String,java.lang.Throwable)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.impl.DefaultHttpResponseFactory[39;49;00m
[31;01mTracing Method : org.apache.http.impl.DefaultHttpResponseFactory.determineLocale [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.DefaultHttpResponseFactory.newHttpResponse [2 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.DefaultHttpResponseFactory.$init [2 overload(s)][39;49;00m
[32;01m	Spec: => 
protected java.util.Locale org.apache.http.impl.DefaultHttpResponseFactory.determineLocale(org.apache.http.protocol.HttpContext)
public org.apache.http.HttpResponse org.apache.http.impl.DefaultHttpResponseFactory.newHttpResponse(org.apache.http.ProtocolVersion,int,org.apache.http.protocol.HttpContext)
public org.apache.http.HttpResponse org.apache.http.impl.DefaultHttpResponseFactory.newHttpResponse(org.apache.http.StatusLine,org.apache.http.protocol.HttpContext)
Tracing public org.apache.http.impl.DefaultHttpResponseFactory()
Tracing public org.apache.http.impl.DefaultHttpResponseFactory(org.apache.http.ReasonPhraseCatalog)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.impl.conn.tsccm.ConnPoolByRoute[39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ConnPoolByRoute.createEntry [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ConnPoolByRoute.createFreeConnQueue [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ConnPoolByRoute.createRouteToPoolMap [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ConnPoolByRoute.createWaitingThreadQueue [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ConnPoolByRoute.deleteClosedConnections [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ConnPoolByRoute.deleteEntry [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ConnPoolByRoute.deleteLeastUsedEntry [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ConnPoolByRoute.freeEntry [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ConnPoolByRoute.getConnectionsInPool [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ConnPoolByRoute.getEntryBlocking [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ConnPoolByRoute.getFreeEntry [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ConnPoolByRoute.getRoutePool [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ConnPoolByRoute.handleLostEntry [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ConnPoolByRoute.newRouteSpecificPool [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ConnPoolByRoute.newWaitingThread [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ConnPoolByRoute.notifyWaitingThread [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ConnPoolByRoute.requestPoolEntry [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ConnPoolByRoute.shutdown [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.ConnPoolByRoute.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
protected org.apache.http.impl.conn.tsccm.BasicPoolEntry org.apache.http.impl.conn.tsccm.ConnPoolByRoute.createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator)
protected java.util.Queue org.apache.http.impl.conn.tsccm.ConnPoolByRoute.createFreeConnQueue()
protected java.util.Map org.apache.http.impl.conn.tsccm.ConnPoolByRoute.createRouteToPoolMap()
protected java.util.Queue org.apache.http.impl.conn.tsccm.ConnPoolByRoute.createWaitingThreadQueue()
public void org.apache.http.impl.conn.tsccm.ConnPoolByRoute.deleteClosedConnections()
protected void org.apache.http.impl.conn.tsccm.ConnPoolByRoute.deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)
protected void org.apache.http.impl.conn.tsccm.ConnPoolByRoute.deleteLeastUsedEntry()
public void org.apache.http.impl.conn.tsccm.ConnPoolByRoute.freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit)
public int org.apache.http.impl.conn.tsccm.ConnPoolByRoute.getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)
protected org.apache.http.impl.conn.tsccm.BasicPoolEntry org.apache.http.impl.conn.tsccm.ConnPoolByRoute.getEntryBlocking(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.impl.conn.tsccm.WaitingThreadAborter) throws org.apache.http.conn.ConnectionPoolTimeoutException,java.lang.InterruptedException
protected org.apache.http.impl.conn.tsccm.BasicPoolEntry org.apache.http.impl.conn.tsccm.ConnPoolByRoute.getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,java.lang.Object)
protected org.apache.http.impl.conn.tsccm.RouteSpecificPool org.apache.http.impl.conn.tsccm.ConnPoolByRoute.getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)
protected void org.apache.http.impl.conn.tsccm.ConnPoolByRoute.handleLostEntry(org.apache.http.conn.routing.HttpRoute)
protected org.apache.http.impl.conn.tsccm.RouteSpecificPool org.apache.http.impl.conn.tsccm.ConnPoolByRoute.newRouteSpecificPool(org.apache.http.conn.routing.HttpRoute)
protected org.apache.http.impl.conn.tsccm.WaitingThread org.apache.http.impl.conn.tsccm.ConnPoolByRoute.newWaitingThread(java.util.concurrent.locks.Condition,org.apache.http.impl.conn.tsccm.RouteSpecificPool)
protected void org.apache.http.impl.conn.tsccm.ConnPoolByRoute.notifyWaitingThread(org.apache.http.impl.conn.tsccm.RouteSpecificPool)
public org.apache.http.impl.conn.tsccm.PoolEntryRequest org.apache.http.impl.conn.tsccm.ConnPoolByRoute.requestPoolEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object)
public void org.apache.http.impl.conn.tsccm.ConnPoolByRoute.shutdown()
Tracing public org.apache.http.impl.conn.tsccm.ConnPoolByRoute(org.apache.http.conn.ClientConnectionOperator,org.apache.http.params.HttpParams)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.impl.conn.tsccm.RefQueueHandler[39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.RefQueueHandler.handleReference [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void org.apache.http.impl.conn.tsccm.RefQueueHandler.handleReference(java.lang.ref.Reference)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.params.CoreProtocolPNames[39;49;00m
[32;01m	Spec: => 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.message.ParserCursor[39;49;00m
[31;01mTracing Method : org.apache.http.message.ParserCursor.atEnd [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.ParserCursor.getLowerBound [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.ParserCursor.getPos [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.ParserCursor.getUpperBound [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.ParserCursor.toString [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.ParserCursor.updatePos [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.ParserCursor.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public boolean org.apache.http.message.ParserCursor.atEnd()
public int org.apache.http.message.ParserCursor.getLowerBound()
public int org.apache.http.message.ParserCursor.getPos()
public int org.apache.http.message.ParserCursor.getUpperBound()
public java.lang.String org.apache.http.message.ParserCursor.toString()
public void org.apache.http.message.ParserCursor.updatePos(int)
Tracing public org.apache.http.message.ParserCursor(int,int)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.impl.conn.tsccm.AbstractConnPool[39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.AbstractConnPool.closeConnection [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.AbstractConnPool.closeExpiredConnections [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.AbstractConnPool.closeIdleConnections [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.AbstractConnPool.deleteClosedConnections [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.AbstractConnPool.enableConnectionGC [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.AbstractConnPool.freeEntry [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.AbstractConnPool.getEntry [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.AbstractConnPool.handleLostEntry [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.AbstractConnPool.handleReference [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.AbstractConnPool.requestPoolEntry [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.AbstractConnPool.shutdown [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.conn.tsccm.AbstractConnPool.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
protected void org.apache.http.impl.conn.tsccm.AbstractConnPool.closeConnection(org.apache.http.conn.OperatedClientConnection)
public void org.apache.http.impl.conn.tsccm.AbstractConnPool.closeExpiredConnections()
public void org.apache.http.impl.conn.tsccm.AbstractConnPool.closeIdleConnections(long,java.util.concurrent.TimeUnit)
public abstract void org.apache.http.impl.conn.tsccm.AbstractConnPool.deleteClosedConnections()
public void org.apache.http.impl.conn.tsccm.AbstractConnPool.enableConnectionGC() throws java.lang.IllegalStateException
public abstract void org.apache.http.impl.conn.tsccm.AbstractConnPool.freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit)
public final org.apache.http.impl.conn.tsccm.BasicPoolEntry org.apache.http.impl.conn.tsccm.AbstractConnPool.getEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit) throws org.apache.http.conn.ConnectionPoolTimeoutException,java.lang.InterruptedException
protected abstract void org.apache.http.impl.conn.tsccm.AbstractConnPool.handleLostEntry(org.apache.http.conn.routing.HttpRoute)
public void org.apache.http.impl.conn.tsccm.AbstractConnPool.handleReference(java.lang.ref.Reference)
public abstract org.apache.http.impl.conn.tsccm.PoolEntryRequest org.apache.http.impl.conn.tsccm.AbstractConnPool.requestPoolEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object)
public void org.apache.http.impl.conn.tsccm.AbstractConnPool.shutdown()
Tracing protected org.apache.http.impl.conn.tsccm.AbstractConnPool()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.impl.client.AbstractHttpClient[39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.determineTarget [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.addRequestInterceptor [2 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.addResponseInterceptor [2 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.clearRequestInterceptors [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.clearResponseInterceptors [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.createAuthSchemeRegistry [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.createClientConnectionManager [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.createClientRequestDirector [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.createConnectionKeepAliveStrategy [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.createConnectionReuseStrategy [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.createCookieSpecRegistry [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.createCookieStore [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.createCredentialsProvider [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.createHttpContext [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.createHttpParams [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.createHttpProcessor [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.createHttpRequestRetryHandler [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.createHttpRoutePlanner [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.createProxyAuthenticationHandler [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.createRedirectHandler [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.createRequestExecutor [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.createTargetAuthenticationHandler [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.createUserTokenHandler [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.determineParams [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.execute [8 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.getAuthSchemes [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.getConnectionKeepAliveStrategy [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.getConnectionManager [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.getConnectionReuseStrategy [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.getCookieSpecs [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.getCookieStore [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.getCredentialsProvider [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.getHttpProcessor [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.getHttpRequestRetryHandler [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.getParams [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.getProxyAuthenticationHandler [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.getRedirectHandler [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.getRequestExecutor [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.getRequestInterceptor [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.getRequestInterceptorCount [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.getResponseInterceptor [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.getResponseInterceptorCount [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.getRoutePlanner [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.getTargetAuthenticationHandler [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.getUserTokenHandler [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.removeRequestInterceptorByClass [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.removeResponseInterceptorByClass [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.setAuthSchemes [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.setCookieSpecs [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.setCookieStore [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.setCredentialsProvider [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.setHttpRequestRetryHandler [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.setKeepAliveStrategy [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.setParams [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.setProxyAuthenticationHandler [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.setRedirectHandler [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.setReuseStrategy [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.setRoutePlanner [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.setTargetAuthenticationHandler [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.setUserTokenHandler [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.AbstractHttpClient.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
private org.apache.http.HttpHost org.apache.http.impl.client.AbstractHttpClient.determineTarget(org.apache.http.client.methods.HttpUriRequest)
public synchronized void org.apache.http.impl.client.AbstractHttpClient.addRequestInterceptor(org.apache.http.HttpRequestInterceptor)
public synchronized void org.apache.http.impl.client.AbstractHttpClient.addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int)
public synchronized void org.apache.http.impl.client.AbstractHttpClient.addResponseInterceptor(org.apache.http.HttpResponseInterceptor)
public synchronized void org.apache.http.impl.client.AbstractHttpClient.addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int)
public synchronized void org.apache.http.impl.client.AbstractHttpClient.clearRequestInterceptors()
public synchronized void org.apache.http.impl.client.AbstractHttpClient.clearResponseInterceptors()
protected abstract org.apache.http.auth.AuthSchemeRegistry org.apache.http.impl.client.AbstractHttpClient.createAuthSchemeRegistry()
protected abstract org.apache.http.conn.ClientConnectionManager org.apache.http.impl.client.AbstractHttpClient.createClientConnectionManager()
protected org.apache.http.client.RequestDirector org.apache.http.impl.client.AbstractHttpClient.createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)
protected abstract org.apache.http.conn.ConnectionKeepAliveStrategy org.apache.http.impl.client.AbstractHttpClient.createConnectionKeepAliveStrategy()
protected abstract org.apache.http.ConnectionReuseStrategy org.apache.http.impl.client.AbstractHttpClient.createConnectionReuseStrategy()
protected abstract org.apache.http.cookie.CookieSpecRegistry org.apache.http.impl.client.AbstractHttpClient.createCookieSpecRegistry()
protected abstract org.apache.http.client.CookieStore org.apache.http.impl.client.AbstractHttpClient.createCookieStore()
protected abstract org.apache.http.client.CredentialsProvider org.apache.http.impl.client.AbstractHttpClient.createCredentialsProvider()
protected abstract org.apache.http.protocol.HttpContext org.apache.http.impl.client.AbstractHttpClient.createHttpContext()
protected abstract org.apache.http.params.HttpParams org.apache.http.impl.client.AbstractHttpClient.createHttpParams()
protected abstract org.apache.http.protocol.BasicHttpProcessor org.apache.http.impl.client.AbstractHttpClient.createHttpProcessor()
protected abstract org.apache.http.client.HttpRequestRetryHandler org.apache.http.impl.client.AbstractHttpClient.createHttpRequestRetryHandler()
protected abstract org.apache.http.conn.routing.HttpRoutePlanner org.apache.http.impl.client.AbstractHttpClient.createHttpRoutePlanner()
protected abstract org.apache.http.client.AuthenticationHandler org.apache.http.impl.client.AbstractHttpClient.createProxyAuthenticationHandler()
protected abstract org.apache.http.client.RedirectHandler org.apache.http.impl.client.AbstractHttpClient.createRedirectHandler()
protected abstract org.apache.http.protocol.HttpRequestExecutor org.apache.http.impl.client.AbstractHttpClient.createRequestExecutor()
protected abstract org.apache.http.client.AuthenticationHandler org.apache.http.impl.client.AbstractHttpClient.createTargetAuthenticationHandler()
protected abstract org.apache.http.client.UserTokenHandler org.apache.http.impl.client.AbstractHttpClient.createUserTokenHandler()
protected org.apache.http.params.HttpParams org.apache.http.impl.client.AbstractHttpClient.determineParams(org.apache.http.HttpRequest)
public java.lang.Object org.apache.http.impl.client.AbstractHttpClient.execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) throws java.io.IOException,org.apache.http.client.ClientProtocolException
public java.lang.Object org.apache.http.impl.client.AbstractHttpClient.execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) throws java.io.IOException,org.apache.http.client.ClientProtocolException
public java.lang.Object org.apache.http.impl.client.AbstractHttpClient.execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) throws java.io.IOException,org.apache.http.client.ClientProtocolException
public java.lang.Object org.apache.http.impl.client.AbstractHttpClient.execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) throws java.io.IOException,org.apache.http.client.ClientProtocolException
public final org.apache.http.HttpResponse org.apache.http.impl.client.AbstractHttpClient.execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) throws java.io.IOException,org.apache.http.client.ClientProtocolException
public final org.apache.http.HttpResponse org.apache.http.impl.client.AbstractHttpClient.execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) throws java.io.IOException,org.apache.http.client.ClientProtocolException
public final org.apache.http.HttpResponse org.apache.http.impl.client.AbstractHttpClient.execute(org.apache.http.client.methods.HttpUriRequest) throws java.io.IOException,org.apache.http.client.ClientProtocolException
public final org.apache.http.HttpResponse org.apache.http.impl.client.AbstractHttpClient.execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) throws java.io.IOException,org.apache.http.client.ClientProtocolException
public final synchronized org.apache.http.auth.AuthSchemeRegistry org.apache.http.impl.client.AbstractHttpClient.getAuthSchemes()
public final synchronized org.apache.http.conn.ConnectionKeepAliveStrategy org.apache.http.impl.client.AbstractHttpClient.getConnectionKeepAliveStrategy()
public final synchronized org.apache.http.conn.ClientConnectionManager org.apache.http.impl.client.AbstractHttpClient.getConnectionManager()
public final synchronized org.apache.http.ConnectionReuseStrategy org.apache.http.impl.client.AbstractHttpClient.getConnectionReuseStrategy()
public final synchronized org.apache.http.cookie.CookieSpecRegistry org.apache.http.impl.client.AbstractHttpClient.getCookieSpecs()
public final synchronized org.apache.http.client.CookieStore org.apache.http.impl.client.AbstractHttpClient.getCookieStore()
public final synchronized org.apache.http.client.CredentialsProvider org.apache.http.impl.client.AbstractHttpClient.getCredentialsProvider()
protected final synchronized org.apache.http.protocol.BasicHttpProcessor org.apache.http.impl.client.AbstractHttpClient.getHttpProcessor()
public final synchronized org.apache.http.client.HttpRequestRetryHandler org.apache.http.impl.client.AbstractHttpClient.getHttpRequestRetryHandler()
public final synchronized org.apache.http.params.HttpParams org.apache.http.impl.client.AbstractHttpClient.getParams()
public final synchronized org.apache.http.client.AuthenticationHandler org.apache.http.impl.client.AbstractHttpClient.getProxyAuthenticationHandler()
public final synchronized org.apache.http.client.RedirectHandler org.apache.http.impl.client.AbstractHttpClient.getRedirectHandler()
public final synchronized org.apache.http.protocol.HttpRequestExecutor org.apache.http.impl.client.AbstractHttpClient.getRequestExecutor()
public synchronized org.apache.http.HttpRequestInterceptor org.apache.http.impl.client.AbstractHttpClient.getRequestInterceptor(int)
public synchronized int org.apache.http.impl.client.AbstractHttpClient.getRequestInterceptorCount()
public synchronized org.apache.http.HttpResponseInterceptor org.apache.http.impl.client.AbstractHttpClient.getResponseInterceptor(int)
public synchronized int org.apache.http.impl.client.AbstractHttpClient.getResponseInterceptorCount()
public final synchronized org.apache.http.conn.routing.HttpRoutePlanner org.apache.http.impl.client.AbstractHttpClient.getRoutePlanner()
public final synchronized org.apache.http.client.AuthenticationHandler org.apache.http.impl.client.AbstractHttpClient.getTargetAuthenticationHandler()
public final synchronized org.apache.http.client.UserTokenHandler org.apache.http.impl.client.AbstractHttpClient.getUserTokenHandler()
public void org.apache.http.impl.client.AbstractHttpClient.removeRequestInterceptorByClass(java.lang.Class)
public void org.apache.http.impl.client.AbstractHttpClient.removeResponseInterceptorByClass(java.lang.Class)
public synchronized void org.apache.http.impl.client.AbstractHttpClient.setAuthSchemes(org.apache.http.auth.AuthSchemeRegistry)
public synchronized void org.apache.http.impl.client.AbstractHttpClient.setCookieSpecs(org.apache.http.cookie.CookieSpecRegistry)
public synchronized void org.apache.http.impl.client.AbstractHttpClient.setCookieStore(org.apache.http.client.CookieStore)
public synchronized void org.apache.http.impl.client.AbstractHttpClient.setCredentialsProvider(org.apache.http.client.CredentialsProvider)
public synchronized void org.apache.http.impl.client.AbstractHttpClient.setHttpRequestRetryHandler(org.apache.http.client.HttpRequestRetryHandler)
public synchronized void org.apache.http.impl.client.AbstractHttpClient.setKeepAliveStrategy(org.apache.http.conn.ConnectionKeepAliveStrategy)
public synchronized void org.apache.http.impl.client.AbstractHttpClient.setParams(org.apache.http.params.HttpParams)
public synchronized void org.apache.http.impl.client.AbstractHttpClient.setProxyAuthenticationHandler(org.apache.http.client.AuthenticationHandler)
public synchronized void org.apache.http.impl.client.AbstractHttpClient.setRedirectHandler(org.apache.http.client.RedirectHandler)
public synchronized void org.apache.http.impl.client.AbstractHttpClient.setReuseStrategy(org.apache.http.ConnectionReuseStrategy)
public synchronized void org.apache.http.impl.client.AbstractHttpClient.setRoutePlanner(org.apache.http.conn.routing.HttpRoutePlanner)
public synchronized void org.apache.http.impl.client.AbstractHttpClient.setTargetAuthenticationHandler(org.apache.http.client.AuthenticationHandler)
public synchronized void org.apache.http.impl.client.AbstractHttpClient.setUserTokenHandler(org.apache.http.client.UserTokenHandler)
Tracing protected org.apache.http.impl.client.AbstractHttpClient(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.protocol.HttpProcessor[39;49;00m
[32;01m	Spec: => 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.params.HttpProtocolParams[39;49;00m
[31;01mTracing Method : org.apache.http.params.HttpProtocolParams.getContentCharset [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.HttpProtocolParams.getHttpElementCharset [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.HttpProtocolParams.getUserAgent [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.HttpProtocolParams.getVersion [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.HttpProtocolParams.setContentCharset [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.HttpProtocolParams.setHttpElementCharset [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.HttpProtocolParams.setUseExpectContinue [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.HttpProtocolParams.setUserAgent [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.HttpProtocolParams.setVersion [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.HttpProtocolParams.useExpectContinue [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.HttpProtocolParams.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public static java.lang.String org.apache.http.params.HttpProtocolParams.getContentCharset(org.apache.http.params.HttpParams)
public static java.lang.String org.apache.http.params.HttpProtocolParams.getHttpElementCharset(org.apache.http.params.HttpParams)
public static java.lang.String org.apache.http.params.HttpProtocolParams.getUserAgent(org.apache.http.params.HttpParams)
public static org.apache.http.ProtocolVersion org.apache.http.params.HttpProtocolParams.getVersion(org.apache.http.params.HttpParams)
public static void org.apache.http.params.HttpProtocolParams.setContentCharset(org.apache.http.params.HttpParams,java.lang.String)
public static void org.apache.http.params.HttpProtocolParams.setHttpElementCharset(org.apache.http.params.HttpParams,java.lang.String)
public static void org.apache.http.params.HttpProtocolParams.setUseExpectContinue(org.apache.http.params.HttpParams,boolean)
public static void org.apache.http.params.HttpProtocolParams.setUserAgent(org.apache.http.params.HttpParams,java.lang.String)
public static void org.apache.http.params.HttpProtocolParams.setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion)
public static boolean org.apache.http.params.HttpProtocolParams.useExpectContinue(org.apache.http.params.HttpParams)
Tracing private org.apache.http.params.HttpProtocolParams()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.conn.scheme.Scheme[39;49;00m
[31;01mTracing Method : org.apache.http.conn.scheme.Scheme.equals [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.conn.scheme.Scheme.getDefaultPort [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.conn.scheme.Scheme.getName [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.conn.scheme.Scheme.getSocketFactory [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.conn.scheme.Scheme.hashCode [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.conn.scheme.Scheme.isLayered [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.conn.scheme.Scheme.resolvePort [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.conn.scheme.Scheme.toString [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.conn.scheme.Scheme.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public final boolean org.apache.http.conn.scheme.Scheme.equals(java.lang.Object)
public final int org.apache.http.conn.scheme.Scheme.getDefaultPort()
public final java.lang.String org.apache.http.conn.scheme.Scheme.getName()
public final org.apache.http.conn.scheme.SocketFactory org.apache.http.conn.scheme.Scheme.getSocketFactory()
public int org.apache.http.conn.scheme.Scheme.hashCode()
public final boolean org.apache.http.conn.scheme.Scheme.isLayered()
public final int org.apache.http.conn.scheme.Scheme.resolvePort(int)
public final java.lang.String org.apache.http.conn.scheme.Scheme.toString()
Tracing public org.apache.http.conn.scheme.Scheme(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.client.methods.AbortableHttpRequest[39;49;00m
[31;01mTracing Method : org.apache.http.client.methods.AbortableHttpRequest.abort [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.client.methods.AbortableHttpRequest.setConnectionRequest [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.client.methods.AbortableHttpRequest.setReleaseTrigger [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void org.apache.http.client.methods.AbortableHttpRequest.abort()
public abstract void org.apache.http.client.methods.AbortableHttpRequest.setConnectionRequest(org.apache.http.conn.ClientConnectionRequest) throws java.io.IOException
public abstract void org.apache.http.client.methods.AbortableHttpRequest.setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger) throws java.io.IOException
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.protocol.HTTP[39;49;00m
[31;01mTracing Method : org.apache.http.protocol.HTTP.isWhitespace [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.HTTP.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public static boolean org.apache.http.protocol.HTTP.isWhitespace(char)
Tracing private org.apache.http.protocol.HTTP()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.client.methods.HttpRequestBase[39;49;00m
[31;01mTracing Method : org.apache.http.client.methods.HttpRequestBase.abort [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.client.methods.HttpRequestBase.clone [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.client.methods.HttpRequestBase.getMethod [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.client.methods.HttpRequestBase.getProtocolVersion [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.client.methods.HttpRequestBase.getRequestLine [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.client.methods.HttpRequestBase.getURI [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.client.methods.HttpRequestBase.isAborted [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.client.methods.HttpRequestBase.setConnectionRequest [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.client.methods.HttpRequestBase.setReleaseTrigger [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.client.methods.HttpRequestBase.setURI [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.client.methods.HttpRequestBase.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public void org.apache.http.client.methods.HttpRequestBase.abort()
public java.lang.Object org.apache.http.client.methods.HttpRequestBase.clone() throws java.lang.CloneNotSupportedException
public abstract java.lang.String org.apache.http.client.methods.HttpRequestBase.getMethod()
public org.apache.http.ProtocolVersion org.apache.http.client.methods.HttpRequestBase.getProtocolVersion()
public org.apache.http.RequestLine org.apache.http.client.methods.HttpRequestBase.getRequestLine()
public java.net.URI org.apache.http.client.methods.HttpRequestBase.getURI()
public boolean org.apache.http.client.methods.HttpRequestBase.isAborted()
public void org.apache.http.client.methods.HttpRequestBase.setConnectionRequest(org.apache.http.conn.ClientConnectionRequest) throws java.io.IOException
public void org.apache.http.client.methods.HttpRequestBase.setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger) throws java.io.IOException
public void org.apache.http.client.methods.HttpRequestBase.setURI(java.net.URI)
Tracing public org.apache.http.client.methods.HttpRequestBase()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.HttpException[39;49;00m
[31;01mTracing Method : org.apache.http.HttpException.$init [3 overload(s)][39;49;00m
[32;01m	Spec: => 
Tracing public org.apache.http.HttpException()
Tracing public org.apache.http.HttpException(java.lang.String)
Tracing public org.apache.http.HttpException(java.lang.String,java.lang.Throwable)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.protocol.HttpResponseInterceptorList[39;49;00m
[31;01mTracing Method : org.apache.http.protocol.HttpResponseInterceptorList.addResponseInterceptor [2 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.HttpResponseInterceptorList.clearResponseInterceptors [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.HttpResponseInterceptorList.getResponseInterceptor [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.HttpResponseInterceptorList.getResponseInterceptorCount [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.HttpResponseInterceptorList.removeResponseInterceptorByClass [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.HttpResponseInterceptorList.setInterceptors [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void org.apache.http.protocol.HttpResponseInterceptorList.addResponseInterceptor(org.apache.http.HttpResponseInterceptor)
public abstract void org.apache.http.protocol.HttpResponseInterceptorList.addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int)
public abstract void org.apache.http.protocol.HttpResponseInterceptorList.clearResponseInterceptors()
public abstract org.apache.http.HttpResponseInterceptor org.apache.http.protocol.HttpResponseInterceptorList.getResponseInterceptor(int)
public abstract int org.apache.http.protocol.HttpResponseInterceptorList.getResponseInterceptorCount()
public abstract void org.apache.http.protocol.HttpResponseInterceptorList.removeResponseInterceptorByClass(java.lang.Class)
public abstract void org.apache.http.protocol.HttpResponseInterceptorList.setInterceptors(java.util.List)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.HeaderElement[39;49;00m
[31;01mTracing Method : org.apache.http.HeaderElement.getName [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HeaderElement.getParameter [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HeaderElement.getParameterByName [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HeaderElement.getParameterCount [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HeaderElement.getParameters [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HeaderElement.getValue [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract java.lang.String org.apache.http.HeaderElement.getName()
public abstract org.apache.http.NameValuePair org.apache.http.HeaderElement.getParameter(int)
public abstract org.apache.http.NameValuePair org.apache.http.HeaderElement.getParameterByName(java.lang.String)
public abstract int org.apache.http.HeaderElement.getParameterCount()
public abstract org.apache.http.NameValuePair[] org.apache.http.HeaderElement.getParameters()
public abstract java.lang.String org.apache.http.HeaderElement.getValue()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.HttpRequest[39;49;00m
[31;01mTracing Method : org.apache.http.HttpRequest.getRequestLine [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract org.apache.http.RequestLine org.apache.http.HttpRequest.getRequestLine()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.impl.client.DefaultHttpClient[39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.DefaultHttpClient.createAuthSchemeRegistry [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.DefaultHttpClient.createClientConnectionManager [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.DefaultHttpClient.createConnectionKeepAliveStrategy [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.DefaultHttpClient.createConnectionReuseStrategy [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.DefaultHttpClient.createCookieSpecRegistry [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.DefaultHttpClient.createCookieStore [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.DefaultHttpClient.createCredentialsProvider [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.DefaultHttpClient.createHttpContext [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.DefaultHttpClient.createHttpParams [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.DefaultHttpClient.createHttpProcessor [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.DefaultHttpClient.createHttpRequestRetryHandler [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.DefaultHttpClient.createHttpRoutePlanner [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.DefaultHttpClient.createProxyAuthenticationHandler [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.DefaultHttpClient.createRedirectHandler [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.DefaultHttpClient.createRequestExecutor [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.DefaultHttpClient.createTargetAuthenticationHandler [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.DefaultHttpClient.createUserTokenHandler [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.client.DefaultHttpClient.$init [3 overload(s)][39;49;00m
[32;01m	Spec: => 
protected org.apache.http.auth.AuthSchemeRegistry org.apache.http.impl.client.DefaultHttpClient.createAuthSchemeRegistry()
protected org.apache.http.conn.ClientConnectionManager org.apache.http.impl.client.DefaultHttpClient.createClientConnectionManager()
protected org.apache.http.conn.ConnectionKeepAliveStrategy org.apache.http.impl.client.DefaultHttpClient.createConnectionKeepAliveStrategy()
protected org.apache.http.ConnectionReuseStrategy org.apache.http.impl.client.DefaultHttpClient.createConnectionReuseStrategy()
protected org.apache.http.cookie.CookieSpecRegistry org.apache.http.impl.client.DefaultHttpClient.createCookieSpecRegistry()
protected org.apache.http.client.CookieStore org.apache.http.impl.client.DefaultHttpClient.createCookieStore()
protected org.apache.http.client.CredentialsProvider org.apache.http.impl.client.DefaultHttpClient.createCredentialsProvider()
protected org.apache.http.protocol.HttpContext org.apache.http.impl.client.DefaultHttpClient.createHttpContext()
protected org.apache.http.params.HttpParams org.apache.http.impl.client.DefaultHttpClient.createHttpParams()
protected org.apache.http.protocol.BasicHttpProcessor org.apache.http.impl.client.DefaultHttpClient.createHttpProcessor()
protected org.apache.http.client.HttpRequestRetryHandler org.apache.http.impl.client.DefaultHttpClient.createHttpRequestRetryHandler()
protected org.apache.http.conn.routing.HttpRoutePlanner org.apache.http.impl.client.DefaultHttpClient.createHttpRoutePlanner()
protected org.apache.http.client.AuthenticationHandler org.apache.http.impl.client.DefaultHttpClient.createProxyAuthenticationHandler()
protected org.apache.http.client.RedirectHandler org.apache.http.impl.client.DefaultHttpClient.createRedirectHandler()
protected org.apache.http.protocol.HttpRequestExecutor org.apache.http.impl.client.DefaultHttpClient.createRequestExecutor()
protected org.apache.http.client.AuthenticationHandler org.apache.http.impl.client.DefaultHttpClient.createTargetAuthenticationHandler()
protected org.apache.http.client.UserTokenHandler org.apache.http.impl.client.DefaultHttpClient.createUserTokenHandler()
Tracing public org.apache.http.impl.client.DefaultHttpClient()
Tracing public org.apache.http.impl.client.DefaultHttpClient(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)
Tracing public org.apache.http.impl.client.DefaultHttpClient(org.apache.http.params.HttpParams)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.impl.DefaultConnectionReuseStrategy[39;49;00m
[31;01mTracing Method : org.apache.http.impl.DefaultConnectionReuseStrategy.createTokenIterator [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.DefaultConnectionReuseStrategy.keepAlive [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.impl.DefaultConnectionReuseStrategy.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
protected org.apache.http.TokenIterator org.apache.http.impl.DefaultConnectionReuseStrategy.createTokenIterator(org.apache.http.HeaderIterator)
public boolean org.apache.http.impl.DefaultConnectionReuseStrategy.keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)
Tracing public org.apache.http.impl.DefaultConnectionReuseStrategy()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.HttpMessage[39;49;00m
[31;01mTracing Method : org.apache.http.HttpMessage.addHeader [2 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpMessage.containsHeader [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpMessage.getAllHeaders [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpMessage.getFirstHeader [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpMessage.getHeaders [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpMessage.getLastHeader [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpMessage.getParams [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpMessage.getProtocolVersion [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpMessage.headerIterator [2 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpMessage.removeHeader [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpMessage.removeHeaders [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpMessage.setHeader [2 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpMessage.setHeaders [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.HttpMessage.setParams [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void org.apache.http.HttpMessage.addHeader(java.lang.String,java.lang.String)
public abstract void org.apache.http.HttpMessage.addHeader(org.apache.http.Header)
public abstract boolean org.apache.http.HttpMessage.containsHeader(java.lang.String)
public abstract org.apache.http.Header[] org.apache.http.HttpMessage.getAllHeaders()
public abstract org.apache.http.Header org.apache.http.HttpMessage.getFirstHeader(java.lang.String)
public abstract org.apache.http.Header[] org.apache.http.HttpMessage.getHeaders(java.lang.String)
public abstract org.apache.http.Header org.apache.http.HttpMessage.getLastHeader(java.lang.String)
public abstract org.apache.http.params.HttpParams org.apache.http.HttpMessage.getParams()
public abstract org.apache.http.ProtocolVersion org.apache.http.HttpMessage.getProtocolVersion()
public abstract org.apache.http.HeaderIterator org.apache.http.HttpMessage.headerIterator()
public abstract org.apache.http.HeaderIterator org.apache.http.HttpMessage.headerIterator(java.lang.String)
public abstract void org.apache.http.HttpMessage.removeHeader(org.apache.http.Header)
public abstract void org.apache.http.HttpMessage.removeHeaders(java.lang.String)
public abstract void org.apache.http.HttpMessage.setHeader(java.lang.String,java.lang.String)
public abstract void org.apache.http.HttpMessage.setHeader(org.apache.http.Header)
public abstract void org.apache.http.HttpMessage.setHeaders(org.apache.http.Header[])
public abstract void org.apache.http.HttpMessage.setParams(org.apache.http.params.HttpParams)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.net.http.AndroidHttpClient$1[39;49;00m
[31;01mTracing Method : android.net.http.AndroidHttpClient$1.process [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.http.AndroidHttpClient$1.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public void android.net.http.AndroidHttpClient$1.process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)
Tracing android.net.http.AndroidHttpClient$1()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.protocol.BasicHttpProcessor[39;49;00m
[31;01mTracing Method : org.apache.http.protocol.BasicHttpProcessor.addInterceptor [4 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.BasicHttpProcessor.addRequestInterceptor [2 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.BasicHttpProcessor.addResponseInterceptor [2 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.BasicHttpProcessor.clearInterceptors [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.BasicHttpProcessor.clearRequestInterceptors [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.BasicHttpProcessor.clearResponseInterceptors [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.BasicHttpProcessor.clone [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.BasicHttpProcessor.copy [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.BasicHttpProcessor.copyInterceptors [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.BasicHttpProcessor.getRequestInterceptor [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.BasicHttpProcessor.getRequestInterceptorCount [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.BasicHttpProcessor.getResponseInterceptor [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.BasicHttpProcessor.getResponseInterceptorCount [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.BasicHttpProcessor.process [2 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.BasicHttpProcessor.removeRequestInterceptorByClass [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.BasicHttpProcessor.removeResponseInterceptorByClass [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.BasicHttpProcessor.setInterceptors [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.BasicHttpProcessor.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public final void org.apache.http.protocol.BasicHttpProcessor.addInterceptor(org.apache.http.HttpRequestInterceptor)
public final void org.apache.http.protocol.BasicHttpProcessor.addInterceptor(org.apache.http.HttpRequestInterceptor,int)
public final void org.apache.http.protocol.BasicHttpProcessor.addInterceptor(org.apache.http.HttpResponseInterceptor)
public final void org.apache.http.protocol.BasicHttpProcessor.addInterceptor(org.apache.http.HttpResponseInterceptor,int)
public void org.apache.http.protocol.BasicHttpProcessor.addRequestInterceptor(org.apache.http.HttpRequestInterceptor)
public void org.apache.http.protocol.BasicHttpProcessor.addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int)
public void org.apache.http.protocol.BasicHttpProcessor.addResponseInterceptor(org.apache.http.HttpResponseInterceptor)
public void org.apache.http.protocol.BasicHttpProcessor.addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int)
public void org.apache.http.protocol.BasicHttpProcessor.clearInterceptors()
public void org.apache.http.protocol.BasicHttpProcessor.clearRequestInterceptors()
public void org.apache.http.protocol.BasicHttpProcessor.clearResponseInterceptors()
public java.lang.Object org.apache.http.protocol.BasicHttpProcessor.clone() throws java.lang.CloneNotSupportedException
public org.apache.http.protocol.BasicHttpProcessor org.apache.http.protocol.BasicHttpProcessor.copy()
protected void org.apache.http.protocol.BasicHttpProcessor.copyInterceptors(org.apache.http.protocol.BasicHttpProcessor)
public org.apache.http.HttpRequestInterceptor org.apache.http.protocol.BasicHttpProcessor.getRequestInterceptor(int)
public int org.apache.http.protocol.BasicHttpProcessor.getRequestInterceptorCount()
public org.apache.http.HttpResponseInterceptor org.apache.http.protocol.BasicHttpProcessor.getResponseInterceptor(int)
public int org.apache.http.protocol.BasicHttpProcessor.getResponseInterceptorCount()
public void org.apache.http.protocol.BasicHttpProcessor.process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) throws java.io.IOException,org.apache.http.HttpException
public void org.apache.http.protocol.BasicHttpProcessor.process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) throws java.io.IOException,org.apache.http.HttpException
public void org.apache.http.protocol.BasicHttpProcessor.removeRequestInterceptorByClass(java.lang.Class)
public void org.apache.http.protocol.BasicHttpProcessor.removeResponseInterceptorByClass(java.lang.Class)
public void org.apache.http.protocol.BasicHttpProcessor.setInterceptors(java.util.List)
Tracing public org.apache.http.protocol.BasicHttpProcessor()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.entity.BasicHttpEntity[39;49;00m
[31;01mTracing Method : org.apache.http.entity.BasicHttpEntity.consumeContent [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.entity.BasicHttpEntity.getContent [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.entity.BasicHttpEntity.getContentLength [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.entity.BasicHttpEntity.isRepeatable [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.entity.BasicHttpEntity.isStreaming [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.entity.BasicHttpEntity.setContent [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.entity.BasicHttpEntity.setContentLength [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.entity.BasicHttpEntity.writeTo [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.entity.BasicHttpEntity.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public void org.apache.http.entity.BasicHttpEntity.consumeContent() throws java.io.IOException
public java.io.InputStream org.apache.http.entity.BasicHttpEntity.getContent() throws java.lang.IllegalStateException
public long org.apache.http.entity.BasicHttpEntity.getContentLength()
public boolean org.apache.http.entity.BasicHttpEntity.isRepeatable()
public boolean org.apache.http.entity.BasicHttpEntity.isStreaming()
public void org.apache.http.entity.BasicHttpEntity.setContent(java.io.InputStream)
public void org.apache.http.entity.BasicHttpEntity.setContentLength(long)
public void org.apache.http.entity.BasicHttpEntity.writeTo(java.io.OutputStream) throws java.io.IOException
Tracing public org.apache.http.entity.BasicHttpEntity()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.message.HeaderGroup[39;49;00m
[31;01mTracing Method : org.apache.http.message.HeaderGroup.addHeader [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.HeaderGroup.clear [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.HeaderGroup.clone [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.HeaderGroup.containsHeader [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.HeaderGroup.copy [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.HeaderGroup.getAllHeaders [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.HeaderGroup.getCondensedHeader [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.HeaderGroup.getFirstHeader [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.HeaderGroup.getHeaders [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.HeaderGroup.getLastHeader [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.HeaderGroup.iterator [2 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.HeaderGroup.removeHeader [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.HeaderGroup.setHeaders [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.HeaderGroup.updateHeader [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.HeaderGroup.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public void org.apache.http.message.HeaderGroup.addHeader(org.apache.http.Header)
public void org.apache.http.message.HeaderGroup.clear()
public java.lang.Object org.apache.http.message.HeaderGroup.clone() throws java.lang.CloneNotSupportedException
public boolean org.apache.http.message.HeaderGroup.containsHeader(java.lang.String)
public org.apache.http.message.HeaderGroup org.apache.http.message.HeaderGroup.copy()
public org.apache.http.Header[] org.apache.http.message.HeaderGroup.getAllHeaders()
public org.apache.http.Header org.apache.http.message.HeaderGroup.getCondensedHeader(java.lang.String)
public org.apache.http.Header org.apache.http.message.HeaderGroup.getFirstHeader(java.lang.String)
public org.apache.http.Header[] org.apache.http.message.HeaderGroup.getHeaders(java.lang.String)
public org.apache.http.Header org.apache.http.message.HeaderGroup.getLastHeader(java.lang.String)
public org.apache.http.HeaderIterator org.apache.http.message.HeaderGroup.iterator()
public org.apache.http.HeaderIterator org.apache.http.message.HeaderGroup.iterator(java.lang.String)
public void org.apache.http.message.HeaderGroup.removeHeader(org.apache.http.Header)
public void org.apache.http.message.HeaderGroup.setHeaders(org.apache.http.Header[])
public void org.apache.http.message.HeaderGroup.updateHeader(org.apache.http.Header)
Tracing public org.apache.http.message.HeaderGroup()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.message.BasicHeaderElement[39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHeaderElement.clone [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHeaderElement.equals [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHeaderElement.getName [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHeaderElement.getParameter [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHeaderElement.getParameterByName [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHeaderElement.getParameterCount [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHeaderElement.getParameters [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHeaderElement.getValue [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHeaderElement.hashCode [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHeaderElement.toString [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.message.BasicHeaderElement.$init [2 overload(s)][39;49;00m
[32;01m	Spec: => 
public java.lang.Object org.apache.http.message.BasicHeaderElement.clone() throws java.lang.CloneNotSupportedException
public boolean org.apache.http.message.BasicHeaderElement.equals(java.lang.Object)
public java.lang.String org.apache.http.message.BasicHeaderElement.getName()
public org.apache.http.NameValuePair org.apache.http.message.BasicHeaderElement.getParameter(int)
public org.apache.http.NameValuePair org.apache.http.message.BasicHeaderElement.getParameterByName(java.lang.String)
public int org.apache.http.message.BasicHeaderElement.getParameterCount()
public org.apache.http.NameValuePair[] org.apache.http.message.BasicHeaderElement.getParameters()
public java.lang.String org.apache.http.message.BasicHeaderElement.getValue()
public int org.apache.http.message.BasicHeaderElement.hashCode()
public java.lang.String org.apache.http.message.BasicHeaderElement.toString()
Tracing public org.apache.http.message.BasicHeaderElement(java.lang.String,java.lang.String)
Tracing public org.apache.http.message.BasicHeaderElement(java.lang.String,java.lang.String,org.apache.http.NameValuePair[])
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.HttpResponseFactory[39;49;00m
[31;01mTracing Method : org.apache.http.HttpResponseFactory.newHttpResponse [2 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract org.apache.http.HttpResponse org.apache.http.HttpResponseFactory.newHttpResponse(org.apache.http.ProtocolVersion,int,org.apache.http.protocol.HttpContext)
public abstract org.apache.http.HttpResponse org.apache.http.HttpResponseFactory.newHttpResponse(org.apache.http.StatusLine,org.apache.http.protocol.HttpContext)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.params.BasicHttpParams[39;49;00m
[31;01mTracing Method : org.apache.http.params.BasicHttpParams.clear [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.BasicHttpParams.clone [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.BasicHttpParams.copy [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.BasicHttpParams.copyParams [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.BasicHttpParams.getParameter [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.BasicHttpParams.isParameterSet [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.BasicHttpParams.isParameterSetLocally [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.BasicHttpParams.removeParameter [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.BasicHttpParams.setParameter [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.BasicHttpParams.setParameters [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.params.BasicHttpParams.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public void org.apache.http.params.BasicHttpParams.clear()
public java.lang.Object org.apache.http.params.BasicHttpParams.clone() throws java.lang.CloneNotSupportedException
public org.apache.http.params.HttpParams org.apache.http.params.BasicHttpParams.copy()
protected void org.apache.http.params.BasicHttpParams.copyParams(org.apache.http.params.HttpParams)
public java.lang.Object org.apache.http.params.BasicHttpParams.getParameter(java.lang.String)
public boolean org.apache.http.params.BasicHttpParams.isParameterSet(java.lang.String)
public boolean org.apache.http.params.BasicHttpParams.isParameterSetLocally(java.lang.String)
public boolean org.apache.http.params.BasicHttpParams.removeParameter(java.lang.String)
public org.apache.http.params.HttpParams org.apache.http.params.BasicHttpParams.setParameter(java.lang.String,java.lang.Object)
public void org.apache.http.params.BasicHttpParams.setParameters(java.lang.String[],java.lang.Object)
Tracing public org.apache.http.params.BasicHttpParams()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.util.CharArrayBuffer[39;49;00m
[31;01mTracing Method : org.apache.http.util.CharArrayBuffer.expand [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.util.CharArrayBuffer.append [8 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.util.CharArrayBuffer.buffer [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.util.CharArrayBuffer.capacity [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.util.CharArrayBuffer.charAt [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.util.CharArrayBuffer.clear [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.util.CharArrayBuffer.ensureCapacity [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.util.CharArrayBuffer.indexOf [2 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.util.CharArrayBuffer.isEmpty [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.util.CharArrayBuffer.isFull [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.util.CharArrayBuffer.length [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.util.CharArrayBuffer.setLength [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.util.CharArrayBuffer.substring [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.util.CharArrayBuffer.substringTrimmed [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.util.CharArrayBuffer.toCharArray [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.util.CharArrayBuffer.toString [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.util.CharArrayBuffer.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
private void org.apache.http.util.CharArrayBuffer.expand(int)
public void org.apache.http.util.CharArrayBuffer.append(char)
public void org.apache.http.util.CharArrayBuffer.append(java.lang.Object)
public void org.apache.http.util.CharArrayBuffer.append(java.lang.String)
public void org.apache.http.util.CharArrayBuffer.append(org.apache.http.util.ByteArrayBuffer,int,int)
public void org.apache.http.util.CharArrayBuffer.append(org.apache.http.util.CharArrayBuffer)
public void org.apache.http.util.CharArrayBuffer.append(org.apache.http.util.CharArrayBuffer,int,int)
public void org.apache.http.util.CharArrayBuffer.append(byte[],int,int)
public void org.apache.http.util.CharArrayBuffer.append(char[],int,int)
public char[] org.apache.http.util.CharArrayBuffer.buffer()
public int org.apache.http.util.CharArrayBuffer.capacity()
public char org.apache.http.util.CharArrayBuffer.charAt(int)
public void org.apache.http.util.CharArrayBuffer.clear()
public void org.apache.http.util.CharArrayBuffer.ensureCapacity(int)
public int org.apache.http.util.CharArrayBuffer.indexOf(int)
public int org.apache.http.util.CharArrayBuffer.indexOf(int,int,int)
public boolean org.apache.http.util.CharArrayBuffer.isEmpty()
public boolean org.apache.http.util.CharArrayBuffer.isFull()
public int org.apache.http.util.CharArrayBuffer.length()
public void org.apache.http.util.CharArrayBuffer.setLength(int)
public java.lang.String org.apache.http.util.CharArrayBuffer.substring(int,int)
public java.lang.String org.apache.http.util.CharArrayBuffer.substringTrimmed(int,int)
public char[] org.apache.http.util.CharArrayBuffer.toCharArray()
public java.lang.String org.apache.http.util.CharArrayBuffer.toString()
Tracing public org.apache.http.util.CharArrayBuffer(int)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.HttpResponseInterceptor[39;49;00m
[31;01mTracing Method : org.apache.http.HttpResponseInterceptor.process [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void org.apache.http.HttpResponseInterceptor.process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException,java.io.IOException
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.protocol.HttpContext[39;49;00m
[31;01mTracing Method : org.apache.http.protocol.HttpContext.getAttribute [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.HttpContext.removeAttribute [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.protocol.HttpContext.setAttribute [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract java.lang.Object org.apache.http.protocol.HttpContext.getAttribute(java.lang.String)
public abstract java.lang.Object org.apache.http.protocol.HttpContext.removeAttribute(java.lang.String)
public abstract void org.apache.http.protocol.HttpContext.setAttribute(java.lang.String,java.lang.Object)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => org.apache.http.entity.AbstractHttpEntity[39;49;00m
[31;01mTracing Method : org.apache.http.entity.AbstractHttpEntity.consumeContent [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.entity.AbstractHttpEntity.getContentEncoding [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.entity.AbstractHttpEntity.getContentType [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.entity.AbstractHttpEntity.isChunked [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.entity.AbstractHttpEntity.setChunked [1 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.entity.AbstractHttpEntity.setContentEncoding [2 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.entity.AbstractHttpEntity.setContentType [2 overload(s)][39;49;00m
[31;01mTracing Method : org.apache.http.entity.AbstractHttpEntity.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public void org.apache.http.entity.AbstractHttpEntity.consumeContent() throws java.io.IOException,java.lang.UnsupportedOperationException
public org.apache.http.Header org.apache.http.entity.AbstractHttpEntity.getContentEncoding()
public org.apache.http.Header org.apache.http.entity.AbstractHttpEntity.getContentType()
public boolean org.apache.http.entity.AbstractHttpEntity.isChunked()
public void org.apache.http.entity.AbstractHttpEntity.setChunked(boolean)
public void org.apache.http.entity.AbstractHttpEntity.setContentEncoding(java.lang.String)
public void org.apache.http.entity.AbstractHttpEntity.setContentEncoding(org.apache.http.Header)
public void org.apache.http.entity.AbstractHttpEntity.setContentType(java.lang.String)
public void org.apache.http.entity.AbstractHttpEntity.setContentType(org.apache.http.Header)
Tracing protected org.apache.http.entity.AbstractHttpEntity()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.net.NetworkPolicyManager[39;49;00m
[31;01mTracing Method : android.net.NetworkPolicyManager.cycleIterator [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.NetworkPolicyManager.from [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.NetworkPolicyManager.isProcStateAllowedWhileIdleOrPowerSaveMode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.NetworkPolicyManager.isProcStateAllowedWhileOnRestrictBackground [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.NetworkPolicyManager.isUidValidForPolicy [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.NetworkPolicyManager.resolveNetworkId [2 overload(s)][39;49;00m
[31;01mTracing Method : android.net.NetworkPolicyManager.uidPoliciesToString [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.NetworkPolicyManager.uidRulesToString [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.NetworkPolicyManager.addUidPolicy [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.NetworkPolicyManager.factoryReset [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.NetworkPolicyManager.getNetworkPolicies [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.NetworkPolicyManager.getRestrictBackground [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.NetworkPolicyManager.getUidPolicy [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.NetworkPolicyManager.getUidsWithPolicy [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.NetworkPolicyManager.registerListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.NetworkPolicyManager.removeUidPolicy [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.NetworkPolicyManager.setNetworkPolicies [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.NetworkPolicyManager.setRestrictBackground [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.NetworkPolicyManager.setUidPolicy [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.NetworkPolicyManager.unregisterListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.NetworkPolicyManager.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public static java.util.Iterator android.net.NetworkPolicyManager.cycleIterator(android.net.NetworkPolicy)
public static android.net.NetworkPolicyManager android.net.NetworkPolicyManager.from(android.content.Context)
public static boolean android.net.NetworkPolicyManager.isProcStateAllowedWhileIdleOrPowerSaveMode(int)
public static boolean android.net.NetworkPolicyManager.isProcStateAllowedWhileOnRestrictBackground(int)
public static boolean android.net.NetworkPolicyManager.isUidValidForPolicy(android.content.Context,int)
public static java.lang.String android.net.NetworkPolicyManager.resolveNetworkId(android.net.wifi.WifiConfiguration)
public static java.lang.String android.net.NetworkPolicyManager.resolveNetworkId(java.lang.String)
public static java.lang.String android.net.NetworkPolicyManager.uidPoliciesToString(int)
public static java.lang.String android.net.NetworkPolicyManager.uidRulesToString(int)
public void android.net.NetworkPolicyManager.addUidPolicy(int,int)
public void android.net.NetworkPolicyManager.factoryReset(java.lang.String)
public android.net.NetworkPolicy[] android.net.NetworkPolicyManager.getNetworkPolicies()
public boolean android.net.NetworkPolicyManager.getRestrictBackground()
public int android.net.NetworkPolicyManager.getUidPolicy(int)
public int[] android.net.NetworkPolicyManager.getUidsWithPolicy(int)
public void android.net.NetworkPolicyManager.registerListener(android.net.INetworkPolicyListener)
public void android.net.NetworkPolicyManager.removeUidPolicy(int,int)
public void android.net.NetworkPolicyManager.setNetworkPolicies(android.net.NetworkPolicy[])
public void android.net.NetworkPolicyManager.setRestrictBackground(boolean)
public void android.net.NetworkPolicyManager.setUidPolicy(int,int)
public void android.net.NetworkPolicyManager.unregisterListener(android.net.INetworkPolicyListener)
Tracing public android.net.NetworkPolicyManager(android.content.Context,android.net.INetworkPolicyManager)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.os.PowerManager[39;49;00m
[31;01mTracing Method : android.os.PowerManager.validateWakeLockParameters [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.boostScreenBrightness [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.getDefaultScreenBrightnessForVrSetting [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.getDefaultScreenBrightnessSetting [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.getLastShutdownReason [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.getMaximumScreenBrightnessForVrSetting [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.getMaximumScreenBrightnessSetting [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.getMinimumScreenBrightnessForVrSetting [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.getMinimumScreenBrightnessSetting [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.getPowerSaveState [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.goToSleep [2 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.isDeviceIdleMode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.isIgnoringBatteryOptimizations [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.isInteractive [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.isLightDeviceIdleMode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.isPowerSaveMode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.isScreenBrightnessBoosted [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.isScreenOn [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.isSustainedPerformanceModeSupported [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.isWakeLockLevelSupported [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.nap [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.newWakeLock [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.reboot [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.rebootSafeMode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.setBacklightBrightness [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.setPowerSaveMode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.shutdown [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.userActivity [2 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.wakeUp [2 overload(s)][39;49;00m
[31;01mTracing Method : android.os.PowerManager.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public static void android.os.PowerManager.validateWakeLockParameters(int,java.lang.String)
public void android.os.PowerManager.boostScreenBrightness(long)
public int android.os.PowerManager.getDefaultScreenBrightnessForVrSetting()
public int android.os.PowerManager.getDefaultScreenBrightnessSetting()
public int android.os.PowerManager.getLastShutdownReason()
public int android.os.PowerManager.getMaximumScreenBrightnessForVrSetting()
public int android.os.PowerManager.getMaximumScreenBrightnessSetting()
public int android.os.PowerManager.getMinimumScreenBrightnessForVrSetting()
public int android.os.PowerManager.getMinimumScreenBrightnessSetting()
public android.os.PowerSaveState android.os.PowerManager.getPowerSaveState(int)
public void android.os.PowerManager.goToSleep(long)
public void android.os.PowerManager.goToSleep(long,int,int)
public boolean android.os.PowerManager.isDeviceIdleMode()
public boolean android.os.PowerManager.isIgnoringBatteryOptimizations(java.lang.String)
public boolean android.os.PowerManager.isInteractive()
public boolean android.os.PowerManager.isLightDeviceIdleMode()
public boolean android.os.PowerManager.isPowerSaveMode()
public boolean android.os.PowerManager.isScreenBrightnessBoosted()
public boolean android.os.PowerManager.isScreenOn()
public boolean android.os.PowerManager.isSustainedPerformanceModeSupported()
public boolean android.os.PowerManager.isWakeLockLevelSupported(int)
public void android.os.PowerManager.nap(long)
public android.os.PowerManager$WakeLock android.os.PowerManager.newWakeLock(int,java.lang.String)
public void android.os.PowerManager.reboot(java.lang.String)
public void android.os.PowerManager.rebootSafeMode()
public void android.os.PowerManager.setBacklightBrightness(int)
public boolean android.os.PowerManager.setPowerSaveMode(boolean)
public void android.os.PowerManager.shutdown(boolean,java.lang.String,boolean)
public void android.os.PowerManager.userActivity(long,int,int)
public void android.os.PowerManager.userActivity(long,boolean)
public void android.os.PowerManager.wakeUp(long)
public void android.os.PowerManager.wakeUp(long,java.lang.String)
Tracing public android.os.PowerManager(android.content.Context,android.os.IPowerManager,android.os.Handler)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => com.android.internal.os.BatteryStatsImpl$StopwatchTimer[39;49;00m
[31;01mTracing Method : com.android.internal.os.BatteryStatsImpl$StopwatchTimer.refreshTimersLocked [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.os.BatteryStatsImpl$StopwatchTimer.computeCurrentCountLocked [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.os.BatteryStatsImpl$StopwatchTimer.computeRunTimeLocked [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.os.BatteryStatsImpl$StopwatchTimer.detach [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.os.BatteryStatsImpl$StopwatchTimer.isRunningLocked [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.os.BatteryStatsImpl$StopwatchTimer.logState [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.os.BatteryStatsImpl$StopwatchTimer.onTimeStopped [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.os.BatteryStatsImpl$StopwatchTimer.readSummaryFromParcelLocked [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.os.BatteryStatsImpl$StopwatchTimer.reset [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.os.BatteryStatsImpl$StopwatchTimer.setMark [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.os.BatteryStatsImpl$StopwatchTimer.setTimeout [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.os.BatteryStatsImpl$StopwatchTimer.startRunningLocked [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.os.BatteryStatsImpl$StopwatchTimer.stopAllRunningLocked [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.os.BatteryStatsImpl$StopwatchTimer.stopRunningLocked [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.os.BatteryStatsImpl$StopwatchTimer.writeToParcel [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.os.BatteryStatsImpl$StopwatchTimer.$init [2 overload(s)][39;49;00m
[32;01m	Spec: => 
private static long com.android.internal.os.BatteryStatsImpl$StopwatchTimer.refreshTimersLocked(long,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$StopwatchTimer)
protected int com.android.internal.os.BatteryStatsImpl$StopwatchTimer.computeCurrentCountLocked()
protected long com.android.internal.os.BatteryStatsImpl$StopwatchTimer.computeRunTimeLocked(long)
public void com.android.internal.os.BatteryStatsImpl$StopwatchTimer.detach()
public boolean com.android.internal.os.BatteryStatsImpl$StopwatchTimer.isRunningLocked()
public void com.android.internal.os.BatteryStatsImpl$StopwatchTimer.logState(android.util.Printer,java.lang.String)
public void com.android.internal.os.BatteryStatsImpl$StopwatchTimer.onTimeStopped(long,long,long)
public void com.android.internal.os.BatteryStatsImpl$StopwatchTimer.readSummaryFromParcelLocked(android.os.Parcel)
public boolean com.android.internal.os.BatteryStatsImpl$StopwatchTimer.reset(boolean)
public void com.android.internal.os.BatteryStatsImpl$StopwatchTimer.setMark(long)
public void com.android.internal.os.BatteryStatsImpl$StopwatchTimer.setTimeout(long)
public void com.android.internal.os.BatteryStatsImpl$StopwatchTimer.startRunningLocked(long)
public void com.android.internal.os.BatteryStatsImpl$StopwatchTimer.stopAllRunningLocked(long)
public void com.android.internal.os.BatteryStatsImpl$StopwatchTimer.stopRunningLocked(long)
public void com.android.internal.os.BatteryStatsImpl$StopwatchTimer.writeToParcel(android.os.Parcel,long)
Tracing public com.android.internal.os.BatteryStatsImpl$StopwatchTimer(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase)
Tracing public com.android.internal.os.BatteryStatsImpl$StopwatchTimer(com.android.internal.os.BatteryStatsImpl$Clocks,com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,com.android.internal.os.BatteryStatsImpl$TimeBase,android.os.Parcel)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.content.pm.ConfigurationInfo[39;49;00m
[31;01mTracing Method : android.content.pm.ConfigurationInfo.describeContents [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ConfigurationInfo.getGlEsVersion [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ConfigurationInfo.toString [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ConfigurationInfo.writeToParcel [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ConfigurationInfo.$init [4 overload(s)][39;49;00m
[32;01m	Spec: => 
public int android.content.pm.ConfigurationInfo.describeContents()
public java.lang.String android.content.pm.ConfigurationInfo.getGlEsVersion()
public java.lang.String android.content.pm.ConfigurationInfo.toString()
public void android.content.pm.ConfigurationInfo.writeToParcel(android.os.Parcel,int)
Tracing public android.content.pm.ConfigurationInfo()
Tracing public android.content.pm.ConfigurationInfo(android.content.pm.ConfigurationInfo)
Tracing private android.content.pm.ConfigurationInfo(android.os.Parcel)
Tracing android.content.pm.ConfigurationInfo(android.os.Parcel,android.content.pm.ConfigurationInfo)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.text.Html[39;49;00m
[31;01mTracing Method : android.text.Html.encodeTextAlignmentByDiv [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.Html.escapeHtml [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.Html.fromHtml [4 overload(s)][39;49;00m
[31;01mTracing Method : android.text.Html.getTextDirection [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.Html.getTextStyles [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.Html.toHtml [2 overload(s)][39;49;00m
[31;01mTracing Method : android.text.Html.withinBlockquote [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.Html.withinBlockquoteConsecutive [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.Html.withinBlockquoteIndividual [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.Html.withinDiv [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.Html.withinHtml [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.Html.withinParagraph [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.Html.withinStyle [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.Html.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
private static void android.text.Html.encodeTextAlignmentByDiv(java.lang.StringBuilder,android.text.Spanned,int)
public static java.lang.String android.text.Html.escapeHtml(java.lang.CharSequence)
public static android.text.Spanned android.text.Html.fromHtml(java.lang.String)
public static android.text.Spanned android.text.Html.fromHtml(java.lang.String,int)
public static android.text.Spanned android.text.Html.fromHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler)
public static android.text.Spanned android.text.Html.fromHtml(java.lang.String,android.text.Html$ImageGetter,android.text.Html$TagHandler)
private static java.lang.String android.text.Html.getTextDirection(android.text.Spanned,int,int)
private static java.lang.String android.text.Html.getTextStyles(android.text.Spanned,int,int,boolean,boolean)
public static java.lang.String android.text.Html.toHtml(android.text.Spanned)
public static java.lang.String android.text.Html.toHtml(android.text.Spanned,int)
private static void android.text.Html.withinBlockquote(java.lang.StringBuilder,android.text.Spanned,int,int,int)
private static void android.text.Html.withinBlockquoteConsecutive(java.lang.StringBuilder,android.text.Spanned,int,int)
private static void android.text.Html.withinBlockquoteIndividual(java.lang.StringBuilder,android.text.Spanned,int,int)
private static void android.text.Html.withinDiv(java.lang.StringBuilder,android.text.Spanned,int,int,int)
private static void android.text.Html.withinHtml(java.lang.StringBuilder,android.text.Spanned,int)
private static void android.text.Html.withinParagraph(java.lang.StringBuilder,android.text.Spanned,int,int)
private static void android.text.Html.withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int)
Tracing private android.text.Html()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.AbsSavedState$2[39;49;00m
[31;01mTracing Method : android.view.AbsSavedState$2.createFromParcel [4 overload(s)][39;49;00m
[31;01mTracing Method : android.view.AbsSavedState$2.newArray [2 overload(s)][39;49;00m
[31;01mTracing Method : android.view.AbsSavedState$2.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public android.view.AbsSavedState android.view.AbsSavedState$2.createFromParcel(android.os.Parcel)
public android.view.AbsSavedState android.view.AbsSavedState$2.createFromParcel(android.os.Parcel,java.lang.ClassLoader)
public java.lang.Object android.view.AbsSavedState$2.createFromParcel(android.os.Parcel)
public java.lang.Object android.view.AbsSavedState$2.createFromParcel(android.os.Parcel,java.lang.ClassLoader)
public android.view.AbsSavedState[] android.view.AbsSavedState$2.newArray(int)
public java.lang.Object[] android.view.AbsSavedState$2.newArray(int)
Tracing android.view.AbsSavedState$2()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.content.pm.LauncherApps[39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.-get0 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.addCallbackLocked [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.convertToActivityList [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.findCallbackLocked [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.getShortcutIconFd [3 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.loadDrawableResourceFromPackage [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.logErrorForInvalidProfileAccess [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.removeCallbackLocked [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.startShortcut [3 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.getActivityList [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.getApplicationInfo [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.getPinItemRequest [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.getProfiles [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.getShortcutBadgedIconDrawable [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.getShortcutConfigActivityIntent [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.getShortcutConfigActivityList [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.getShortcutIconDrawable [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.getShortcutIconResId [2 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.getShortcutInfo [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.getShortcuts [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.hasShortcutHostPermission [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.isActivityEnabled [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.isPackageEnabled [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.pinShortcuts [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.registerCallback [2 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.resolveActivity [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.startAppDetailsActivity [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.startMainActivity [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.unregisterCallback [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.LauncherApps.$init [2 overload(s)][39;49;00m
[32;01m	Spec: => 
static java.util.List android.content.pm.LauncherApps.-get0(android.content.pm.LauncherApps)
private void android.content.pm.LauncherApps.addCallbackLocked(android.content.pm.LauncherApps$Callback,android.os.Handler)
private java.util.List android.content.pm.LauncherApps.convertToActivityList(android.content.pm.ParceledListSlice,android.os.UserHandle)
private int android.content.pm.LauncherApps.findCallbackLocked(android.content.pm.LauncherApps$Callback)
private android.os.ParcelFileDescriptor android.content.pm.LauncherApps.getShortcutIconFd(java.lang.String,java.lang.String,int)
private android.graphics.drawable.Drawable android.content.pm.LauncherApps.loadDrawableResourceFromPackage(java.lang.String,int,android.os.UserHandle,int)
private void android.content.pm.LauncherApps.logErrorForInvalidProfileAccess(android.os.UserHandle)
private void android.content.pm.LauncherApps.removeCallbackLocked(android.content.pm.LauncherApps$Callback)
private void android.content.pm.LauncherApps.startShortcut(java.lang.String,java.lang.String,android.graphics.Rect,android.os.Bundle,int)
public java.util.List android.content.pm.LauncherApps.getActivityList(java.lang.String,android.os.UserHandle)
public android.content.pm.ApplicationInfo android.content.pm.LauncherApps.getApplicationInfo(java.lang.String,int,android.os.UserHandle) throws android.content.pm.PackageManager$NameNotFoundException
public android.content.pm.LauncherApps$PinItemRequest android.content.pm.LauncherApps.getPinItemRequest(android.content.Intent)
public java.util.List android.content.pm.LauncherApps.getProfiles()
public android.graphics.drawable.Drawable android.content.pm.LauncherApps.getShortcutBadgedIconDrawable(android.content.pm.ShortcutInfo,int)
public android.content.IntentSender android.content.pm.LauncherApps.getShortcutConfigActivityIntent(android.content.pm.LauncherActivityInfo)
public java.util.List android.content.pm.LauncherApps.getShortcutConfigActivityList(java.lang.String,android.os.UserHandle)
public android.graphics.drawable.Drawable android.content.pm.LauncherApps.getShortcutIconDrawable(android.content.pm.ShortcutInfo,int)
public android.os.ParcelFileDescriptor android.content.pm.LauncherApps.getShortcutIconFd(android.content.pm.ShortcutInfo)
public android.os.ParcelFileDescriptor android.content.pm.LauncherApps.getShortcutIconFd(java.lang.String,java.lang.String,android.os.UserHandle)
public int android.content.pm.LauncherApps.getShortcutIconResId(android.content.pm.ShortcutInfo)
public int android.content.pm.LauncherApps.getShortcutIconResId(java.lang.String,java.lang.String,android.os.UserHandle)
public java.util.List android.content.pm.LauncherApps.getShortcutInfo(java.lang.String,java.util.List,android.os.UserHandle)
public java.util.List android.content.pm.LauncherApps.getShortcuts(android.content.pm.LauncherApps$ShortcutQuery,android.os.UserHandle)
public boolean android.content.pm.LauncherApps.hasShortcutHostPermission()
public boolean android.content.pm.LauncherApps.isActivityEnabled(android.content.ComponentName,android.os.UserHandle)
public boolean android.content.pm.LauncherApps.isPackageEnabled(java.lang.String,android.os.UserHandle)
public void android.content.pm.LauncherApps.pinShortcuts(java.lang.String,java.util.List,android.os.UserHandle)
public void android.content.pm.LauncherApps.registerCallback(android.content.pm.LauncherApps$Callback)
public void android.content.pm.LauncherApps.registerCallback(android.content.pm.LauncherApps$Callback,android.os.Handler)
public android.content.pm.LauncherActivityInfo android.content.pm.LauncherApps.resolveActivity(android.content.Intent,android.os.UserHandle)
public void android.content.pm.LauncherApps.startAppDetailsActivity(android.content.ComponentName,android.os.UserHandle,android.graphics.Rect,android.os.Bundle)
public void android.content.pm.LauncherApps.startMainActivity(android.content.ComponentName,android.os.UserHandle,android.graphics.Rect,android.os.Bundle)
public void android.content.pm.LauncherApps.startShortcut(android.content.pm.ShortcutInfo,android.graphics.Rect,android.os.Bundle)
public void android.content.pm.LauncherApps.startShortcut(java.lang.String,java.lang.String,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)
public void android.content.pm.LauncherApps.unregisterCallback(android.content.pm.LauncherApps$Callback)
Tracing public android.content.pm.LauncherApps(android.content.Context)
Tracing public android.content.pm.LauncherApps(android.content.Context,android.content.pm.ILauncherApps)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => com.android.internal.util.XmlUtils[39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.beginDocument [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.convertValueToBoolean [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.convertValueToInt [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.convertValueToList [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.convertValueToUnsignedInt [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.nextElement [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.nextElementWithin [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.parseUnsignedIntAttribute [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.readBitmapAttribute [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.readBooleanAttribute [2 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.readByteArrayAttribute [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.readFloatAttribute [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.readIntAttribute [2 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.readListXml [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.readLongAttribute [2 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.readMapXml [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.readSetXml [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.readStringAttribute [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.readThisArrayMapXml [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.readThisBooleanArrayXml [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.readThisByteArrayXml [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.readThisDoubleArrayXml [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.readThisIntArrayXml [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.readThisListXml [2 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.readThisLongArrayXml [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.readThisMapXml [2 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.readThisPrimitiveValueXml [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.readThisSetXml [2 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.readThisStringArrayXml [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.readThisValueXml [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.readUriAttribute [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.readValueXml [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.skipCurrentTag [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.writeBitmapAttribute [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.writeBooleanArrayXml [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.writeBooleanAttribute [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.writeByteArrayAttribute [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.writeByteArrayXml [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.writeDoubleArrayXml [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.writeFloatAttribute [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.writeIntArrayXml [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.writeIntAttribute [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.writeListXml [2 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.writeLongArrayXml [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.writeLongAttribute [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.writeMapXml [4 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.writeSetXml [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.writeStringArrayXml [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.writeStringAttribute [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.writeUriAttribute [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.writeValueXml [2 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.XmlUtils.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public static final void com.android.internal.util.XmlUtils.beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static final boolean com.android.internal.util.XmlUtils.convertValueToBoolean(java.lang.CharSequence,boolean)
public static final int com.android.internal.util.XmlUtils.convertValueToInt(java.lang.CharSequence,int)
public static final int com.android.internal.util.XmlUtils.convertValueToList(java.lang.CharSequence,java.lang.String[],int)
public static int com.android.internal.util.XmlUtils.convertValueToUnsignedInt(java.lang.String,int)
public static final void com.android.internal.util.XmlUtils.nextElement(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static boolean com.android.internal.util.XmlUtils.nextElementWithin(org.xmlpull.v1.XmlPullParser,int) throws java.io.IOException,org.xmlpull.v1.XmlPullParserException
public static int com.android.internal.util.XmlUtils.parseUnsignedIntAttribute(java.lang.CharSequence)
public static android.graphics.Bitmap com.android.internal.util.XmlUtils.readBitmapAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)
public static boolean com.android.internal.util.XmlUtils.readBooleanAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)
public static boolean com.android.internal.util.XmlUtils.readBooleanAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)
public static byte[] com.android.internal.util.XmlUtils.readByteArrayAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)
public static float com.android.internal.util.XmlUtils.readFloatAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String) throws java.io.IOException
public static int com.android.internal.util.XmlUtils.readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String) throws java.io.IOException
public static int com.android.internal.util.XmlUtils.readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)
public static final java.util.ArrayList com.android.internal.util.XmlUtils.readListXml(java.io.InputStream) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static long com.android.internal.util.XmlUtils.readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String) throws java.io.IOException
public static long com.android.internal.util.XmlUtils.readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,long)
public static final java.util.HashMap com.android.internal.util.XmlUtils.readMapXml(java.io.InputStream) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static final java.util.HashSet com.android.internal.util.XmlUtils.readSetXml(java.io.InputStream) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static java.lang.String com.android.internal.util.XmlUtils.readStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)
public static final android.util.ArrayMap com.android.internal.util.XmlUtils.readThisArrayMapXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static final boolean[] com.android.internal.util.XmlUtils.readThisBooleanArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static final byte[] com.android.internal.util.XmlUtils.readThisByteArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static final double[] com.android.internal.util.XmlUtils.readThisDoubleArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static final int[] com.android.internal.util.XmlUtils.readThisIntArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static final java.util.ArrayList com.android.internal.util.XmlUtils.readThisListXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
private static final java.util.ArrayList com.android.internal.util.XmlUtils.readThisListXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback,boolean) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static final long[] com.android.internal.util.XmlUtils.readThisLongArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static final java.util.HashMap com.android.internal.util.XmlUtils.readThisMapXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static final java.util.HashMap com.android.internal.util.XmlUtils.readThisMapXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
private static final java.lang.Object com.android.internal.util.XmlUtils.readThisPrimitiveValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static final java.util.HashSet com.android.internal.util.XmlUtils.readThisSetXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
private static final java.util.HashSet com.android.internal.util.XmlUtils.readThisSetXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback,boolean) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static final java.lang.String[] com.android.internal.util.XmlUtils.readThisStringArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
private static final java.lang.Object com.android.internal.util.XmlUtils.readThisValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[],com.android.internal.util.XmlUtils$ReadMapCallback,boolean) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static android.net.Uri com.android.internal.util.XmlUtils.readUriAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)
public static final java.lang.Object com.android.internal.util.XmlUtils.readValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[]) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static void com.android.internal.util.XmlUtils.skipCurrentTag(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static void com.android.internal.util.XmlUtils.writeBitmapAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,android.graphics.Bitmap) throws java.io.IOException
public static final void com.android.internal.util.XmlUtils.writeBooleanArrayXml(boolean[],java.lang.String,org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static void com.android.internal.util.XmlUtils.writeBooleanAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,boolean) throws java.io.IOException
public static void com.android.internal.util.XmlUtils.writeByteArrayAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,byte[]) throws java.io.IOException
public static final void com.android.internal.util.XmlUtils.writeByteArrayXml(byte[],java.lang.String,org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static final void com.android.internal.util.XmlUtils.writeDoubleArrayXml(double[],java.lang.String,org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static void com.android.internal.util.XmlUtils.writeFloatAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,float) throws java.io.IOException
public static final void com.android.internal.util.XmlUtils.writeIntArrayXml(int[],java.lang.String,org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static void com.android.internal.util.XmlUtils.writeIntAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,int) throws java.io.IOException
public static final void com.android.internal.util.XmlUtils.writeListXml(java.util.List,java.io.OutputStream) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static final void com.android.internal.util.XmlUtils.writeListXml(java.util.List,java.lang.String,org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static final void com.android.internal.util.XmlUtils.writeLongArrayXml(long[],java.lang.String,org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static void com.android.internal.util.XmlUtils.writeLongAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,long) throws java.io.IOException
public static final void com.android.internal.util.XmlUtils.writeMapXml(java.util.Map,java.io.OutputStream) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static final void com.android.internal.util.XmlUtils.writeMapXml(java.util.Map,java.lang.String,org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static final void com.android.internal.util.XmlUtils.writeMapXml(java.util.Map,java.lang.String,org.xmlpull.v1.XmlSerializer,com.android.internal.util.XmlUtils$WriteMapCallback) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static final void com.android.internal.util.XmlUtils.writeMapXml(java.util.Map,org.xmlpull.v1.XmlSerializer,com.android.internal.util.XmlUtils$WriteMapCallback) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static final void com.android.internal.util.XmlUtils.writeSetXml(java.util.Set,java.lang.String,org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static final void com.android.internal.util.XmlUtils.writeStringArrayXml(java.lang.String[],java.lang.String,org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static void com.android.internal.util.XmlUtils.writeStringAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.CharSequence) throws java.io.IOException
public static void com.android.internal.util.XmlUtils.writeUriAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,android.net.Uri) throws java.io.IOException
public static final void com.android.internal.util.XmlUtils.writeValueXml(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
private static final void com.android.internal.util.XmlUtils.writeValueXml(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer,com.android.internal.util.XmlUtils$WriteMapCallback) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
Tracing public com.android.internal.util.XmlUtils()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.hardware.input.IInputManager$Stub$Proxy[39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.addKeyboardLayoutForInputDevice [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.asBinder [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.cancelVibrate [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.createInputForwarder [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.disableInputDevice [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.enableInputDevice [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.getCurrentKeyboardLayoutForInputDevice [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.getEnabledKeyboardLayoutsForInputDevice [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.getInputDevice [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.getInputDeviceIds [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.getInterfaceDescriptor [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.getKeyboardLayout [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.getKeyboardLayoutForInputDevice [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.getKeyboardLayouts [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.getKeyboardLayoutsForInputDevice [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.getTouchCalibrationForInputDevice [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.hasKeys [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.injectInputEvent [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.isInTabletMode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.isInputDeviceEnabled [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.registerInputDevicesChangedListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.registerTabletModeChangedListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.removeKeyboardLayoutForInputDevice [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.requestPointerCapture [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.setCurrentKeyboardLayoutForInputDevice [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.setCustomPointerIcon [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.setKeyboardLayoutForInputDevice [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.setPointerIconType [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.setTouchCalibrationForInputDevice [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.tryPointerSpeed [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.vibrate [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.IInputManager$Stub$Proxy.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public void android.hardware.input.IInputManager$Stub$Proxy.addKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String) throws android.os.RemoteException
public android.os.IBinder android.hardware.input.IInputManager$Stub$Proxy.asBinder()
public void android.hardware.input.IInputManager$Stub$Proxy.cancelVibrate(int,android.os.IBinder) throws android.os.RemoteException
public android.app.IInputForwarder android.hardware.input.IInputManager$Stub$Proxy.createInputForwarder(int) throws android.os.RemoteException
public void android.hardware.input.IInputManager$Stub$Proxy.disableInputDevice(int) throws android.os.RemoteException
public void android.hardware.input.IInputManager$Stub$Proxy.enableInputDevice(int) throws android.os.RemoteException
public java.lang.String android.hardware.input.IInputManager$Stub$Proxy.getCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier) throws android.os.RemoteException
public java.lang.String[] android.hardware.input.IInputManager$Stub$Proxy.getEnabledKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier) throws android.os.RemoteException
public android.view.InputDevice android.hardware.input.IInputManager$Stub$Proxy.getInputDevice(int) throws android.os.RemoteException
public int[] android.hardware.input.IInputManager$Stub$Proxy.getInputDeviceIds() throws android.os.RemoteException
public java.lang.String android.hardware.input.IInputManager$Stub$Proxy.getInterfaceDescriptor()
public android.hardware.input.KeyboardLayout android.hardware.input.IInputManager$Stub$Proxy.getKeyboardLayout(java.lang.String) throws android.os.RemoteException
public android.hardware.input.KeyboardLayout android.hardware.input.IInputManager$Stub$Proxy.getKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype) throws android.os.RemoteException
public android.hardware.input.KeyboardLayout[] android.hardware.input.IInputManager$Stub$Proxy.getKeyboardLayouts() throws android.os.RemoteException
public android.hardware.input.KeyboardLayout[] android.hardware.input.IInputManager$Stub$Proxy.getKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier) throws android.os.RemoteException
public android.hardware.input.TouchCalibration android.hardware.input.IInputManager$Stub$Proxy.getTouchCalibrationForInputDevice(java.lang.String,int) throws android.os.RemoteException
public boolean android.hardware.input.IInputManager$Stub$Proxy.hasKeys(int,int,int[],boolean[]) throws android.os.RemoteException
public boolean android.hardware.input.IInputManager$Stub$Proxy.injectInputEvent(android.view.InputEvent,int) throws android.os.RemoteException
public int android.hardware.input.IInputManager$Stub$Proxy.isInTabletMode() throws android.os.RemoteException
public boolean android.hardware.input.IInputManager$Stub$Proxy.isInputDeviceEnabled(int) throws android.os.RemoteException
public void android.hardware.input.IInputManager$Stub$Proxy.registerInputDevicesChangedListener(android.hardware.input.IInputDevicesChangedListener) throws android.os.RemoteException
public void android.hardware.input.IInputManager$Stub$Proxy.registerTabletModeChangedListener(android.hardware.input.ITabletModeChangedListener) throws android.os.RemoteException
public void android.hardware.input.IInputManager$Stub$Proxy.removeKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String) throws android.os.RemoteException
public void android.hardware.input.IInputManager$Stub$Proxy.requestPointerCapture(android.os.IBinder,boolean) throws android.os.RemoteException
public void android.hardware.input.IInputManager$Stub$Proxy.setCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String) throws android.os.RemoteException
public void android.hardware.input.IInputManager$Stub$Proxy.setCustomPointerIcon(android.view.PointerIcon) throws android.os.RemoteException
public void android.hardware.input.IInputManager$Stub$Proxy.setKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype,java.lang.String) throws android.os.RemoteException
public void android.hardware.input.IInputManager$Stub$Proxy.setPointerIconType(int) throws android.os.RemoteException
public void android.hardware.input.IInputManager$Stub$Proxy.setTouchCalibrationForInputDevice(java.lang.String,int,android.hardware.input.TouchCalibration) throws android.os.RemoteException
public void android.hardware.input.IInputManager$Stub$Proxy.tryPointerSpeed(int) throws android.os.RemoteException
public void android.hardware.input.IInputManager$Stub$Proxy.vibrate(int,long[],int,android.os.IBinder) throws android.os.RemoteException
Tracing android.hardware.input.IInputManager$Stub$Proxy(android.os.IBinder)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.app.LoadedApk$ReceiverDispatcher$Args[39;49;00m
[31;01mTracing Method : android.app.LoadedApk$ReceiverDispatcher$Args.getRunnable [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.LoadedApk$ReceiverDispatcher$Args.lambda$-android_app_LoadedApk$ReceiverDispatcher$Args_52497 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.LoadedApk$ReceiverDispatcher$Args.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public final java.lang.Runnable android.app.LoadedApk$ReceiverDispatcher$Args.getRunnable()
void android.app.LoadedApk$ReceiverDispatcher$Args.lambda$-android_app_LoadedApk$ReceiverDispatcher$Args_52497()
Tracing public android.app.LoadedApk$ReceiverDispatcher$Args(android.app.LoadedApk$ReceiverDispatcher,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.View$SendViewScrolledAccessibilityEvent[39;49;00m
[31;01mTracing Method : android.view.View$SendViewScrolledAccessibilityEvent.run [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.View$SendViewScrolledAccessibilityEvent.$init [2 overload(s)][39;49;00m
[32;01m	Spec: => 
public void android.view.View$SendViewScrolledAccessibilityEvent.run()
Tracing private android.view.View$SendViewScrolledAccessibilityEvent(android.view.View)
Tracing android.view.View$SendViewScrolledAccessibilityEvent(android.view.View,android.view.View$SendViewScrolledAccessibilityEvent)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.text.GraphicsOperations[39;49;00m
[31;01mTracing Method : android.text.GraphicsOperations.drawText [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.GraphicsOperations.drawTextRun [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.GraphicsOperations.getTextRunAdvances [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.GraphicsOperations.getTextRunCursor [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.GraphicsOperations.getTextWidths [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.GraphicsOperations.measureText [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void android.text.GraphicsOperations.drawText(android.graphics.BaseCanvas,int,int,float,float,android.graphics.Paint)
public abstract void android.text.GraphicsOperations.drawTextRun(android.graphics.BaseCanvas,int,int,int,int,float,float,boolean,android.graphics.Paint)
public abstract float android.text.GraphicsOperations.getTextRunAdvances(int,int,int,int,boolean,float[],int,android.graphics.Paint)
public abstract int android.text.GraphicsOperations.getTextRunCursor(int,int,int,int,int,android.graphics.Paint)
public abstract int android.text.GraphicsOperations.getTextWidths(int,int,float[],android.graphics.Paint)
public abstract float android.text.GraphicsOperations.measureText(int,int,android.graphics.Paint)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.media.PlayerBase$PlayerIdCard$1[39;49;00m
[31;01mTracing Method : android.media.PlayerBase$PlayerIdCard$1.createFromParcel [2 overload(s)][39;49;00m
[31;01mTracing Method : android.media.PlayerBase$PlayerIdCard$1.newArray [2 overload(s)][39;49;00m
[31;01mTracing Method : android.media.PlayerBase$PlayerIdCard$1.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public android.media.PlayerBase$PlayerIdCard android.media.PlayerBase$PlayerIdCard$1.createFromParcel(android.os.Parcel)
public java.lang.Object android.media.PlayerBase$PlayerIdCard$1.createFromParcel(android.os.Parcel)
public android.media.PlayerBase$PlayerIdCard[] android.media.PlayerBase$PlayerIdCard$1.newArray(int)
public java.lang.Object[] android.media.PlayerBase$PlayerIdCard$1.newArray(int)
Tracing android.media.PlayerBase$PlayerIdCard$1()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.hardware.display.IDisplayManager[39;49;00m
[31;01mTracing Method : android.hardware.display.IDisplayManager.connectWifiDisplay [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.display.IDisplayManager.createVirtualDisplay [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.display.IDisplayManager.disconnectWifiDisplay [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.display.IDisplayManager.forgetWifiDisplay [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.display.IDisplayManager.getDisplayIds [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.display.IDisplayManager.getDisplayInfo [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.display.IDisplayManager.getStableDisplaySize [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.display.IDisplayManager.getWifiDisplayStatus [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.display.IDisplayManager.pauseWifiDisplay [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.display.IDisplayManager.registerCallback [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.display.IDisplayManager.releaseVirtualDisplay [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.display.IDisplayManager.renameWifiDisplay [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.display.IDisplayManager.requestColorMode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.display.IDisplayManager.resizeVirtualDisplay [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.display.IDisplayManager.resumeWifiDisplay [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.display.IDisplayManager.setVirtualDisplaySurface [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.display.IDisplayManager.startWifiDisplayScan [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.display.IDisplayManager.stopWifiDisplayScan [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void android.hardware.display.IDisplayManager.connectWifiDisplay(java.lang.String) throws android.os.RemoteException
public abstract int android.hardware.display.IDisplayManager.createVirtualDisplay(android.hardware.display.IVirtualDisplayCallback,android.media.projection.IMediaProjection,java.lang.String,java.lang.String,int,int,int,android.view.Surface,int,java.lang.String) throws android.os.RemoteException
public abstract void android.hardware.display.IDisplayManager.disconnectWifiDisplay() throws android.os.RemoteException
public abstract void android.hardware.display.IDisplayManager.forgetWifiDisplay(java.lang.String) throws android.os.RemoteException
public abstract int[] android.hardware.display.IDisplayManager.getDisplayIds() throws android.os.RemoteException
public abstract android.view.DisplayInfo android.hardware.display.IDisplayManager.getDisplayInfo(int) throws android.os.RemoteException
public abstract android.graphics.Point android.hardware.display.IDisplayManager.getStableDisplaySize() throws android.os.RemoteException
public abstract android.hardware.display.WifiDisplayStatus android.hardware.display.IDisplayManager.getWifiDisplayStatus() throws android.os.RemoteException
public abstract void android.hardware.display.IDisplayManager.pauseWifiDisplay() throws android.os.RemoteException
public abstract void android.hardware.display.IDisplayManager.registerCallback(android.hardware.display.IDisplayManagerCallback) throws android.os.RemoteException
public abstract void android.hardware.display.IDisplayManager.releaseVirtualDisplay(android.hardware.display.IVirtualDisplayCallback) throws android.os.RemoteException
public abstract void android.hardware.display.IDisplayManager.renameWifiDisplay(java.lang.String,java.lang.String) throws android.os.RemoteException
public abstract void android.hardware.display.IDisplayManager.requestColorMode(int,int) throws android.os.RemoteException
public abstract void android.hardware.display.IDisplayManager.resizeVirtualDisplay(android.hardware.display.IVirtualDisplayCallback,int,int,int) throws android.os.RemoteException
public abstract void android.hardware.display.IDisplayManager.resumeWifiDisplay() throws android.os.RemoteException
public abstract void android.hardware.display.IDisplayManager.setVirtualDisplaySurface(android.hardware.display.IVirtualDisplayCallback,android.view.Surface) throws android.os.RemoteException
public abstract void android.hardware.display.IDisplayManager.startWifiDisplayScan() throws android.os.RemoteException
public abstract void android.hardware.display.IDisplayManager.stopWifiDisplayScan() throws android.os.RemoteException
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.provider.Settings$System$6[39;49;00m
[31;01mTracing Method : android.provider.Settings$System$6.validate [1 overload(s)][39;49;00m
[31;01mTracing Method : android.provider.Settings$System$6.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public boolean android.provider.Settings$System$6.validate(java.lang.String)
Tracing android.provider.Settings$System$6()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.graphics.BitmapFactory$Options[39;49;00m
[31;01mTracing Method : android.graphics.BitmapFactory$Options.validate [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.BitmapFactory$Options.requestCancelDecode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.BitmapFactory$Options.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
static void android.graphics.BitmapFactory$Options.validate(android.graphics.BitmapFactory$Options)
public void android.graphics.BitmapFactory$Options.requestCancelDecode()
Tracing public android.graphics.BitmapFactory$Options()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.hardware.hdmi.HdmiControlManager[39;49;00m
[31;01mTracing Method : android.hardware.hdmi.HdmiControlManager.getHotplugEventListenerWrapper [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.hdmi.HdmiControlManager.hasDeviceType [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.hdmi.HdmiControlManager.addHotplugEventListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.hdmi.HdmiControlManager.getClient [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.hdmi.HdmiControlManager.getPlaybackClient [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.hdmi.HdmiControlManager.getTvClient [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.hdmi.HdmiControlManager.removeHotplugEventListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.hdmi.HdmiControlManager.setStandbyMode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.hdmi.HdmiControlManager.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
private android.hardware.hdmi.IHdmiHotplugEventListener android.hardware.hdmi.HdmiControlManager.getHotplugEventListenerWrapper(android.hardware.hdmi.HdmiControlManager$HotplugEventListener)
private static boolean android.hardware.hdmi.HdmiControlManager.hasDeviceType(int[],int)
public void android.hardware.hdmi.HdmiControlManager.addHotplugEventListener(android.hardware.hdmi.HdmiControlManager$HotplugEventListener)
public android.hardware.hdmi.HdmiClient android.hardware.hdmi.HdmiControlManager.getClient(int)
public android.hardware.hdmi.HdmiPlaybackClient android.hardware.hdmi.HdmiControlManager.getPlaybackClient()
public android.hardware.hdmi.HdmiTvClient android.hardware.hdmi.HdmiControlManager.getTvClient()
public void android.hardware.hdmi.HdmiControlManager.removeHotplugEventListener(android.hardware.hdmi.HdmiControlManager$HotplugEventListener)
public void android.hardware.hdmi.HdmiControlManager.setStandbyMode(boolean)
Tracing public android.hardware.hdmi.HdmiControlManager(android.hardware.hdmi.IHdmiControlService)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.accessibility.IAccessibilityInteractionConnectionCallback[39;49;00m
[31;01mTracing Method : android.view.accessibility.IAccessibilityInteractionConnectionCallback.setFindAccessibilityNodeInfoResult [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.IAccessibilityInteractionConnectionCallback.setFindAccessibilityNodeInfosResult [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.IAccessibilityInteractionConnectionCallback.setPerformAccessibilityActionResult [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void android.view.accessibility.IAccessibilityInteractionConnectionCallback.setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int) throws android.os.RemoteException
public abstract void android.view.accessibility.IAccessibilityInteractionConnectionCallback.setFindAccessibilityNodeInfosResult(java.util.List,int) throws android.os.RemoteException
public abstract void android.view.accessibility.IAccessibilityInteractionConnectionCallback.setPerformAccessibilityActionResult(boolean,int) throws android.os.RemoteException
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.app.WallpaperInfo$1[39;49;00m
[31;01mTracing Method : android.app.WallpaperInfo$1.createFromParcel [2 overload(s)][39;49;00m
[31;01mTracing Method : android.app.WallpaperInfo$1.newArray [2 overload(s)][39;49;00m
[31;01mTracing Method : android.app.WallpaperInfo$1.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public android.app.WallpaperInfo android.app.WallpaperInfo$1.createFromParcel(android.os.Parcel)
public java.lang.Object android.app.WallpaperInfo$1.createFromParcel(android.os.Parcel)
public android.app.WallpaperInfo[] android.app.WallpaperInfo$1.newArray(int)
public java.lang.Object[] android.app.WallpaperInfo$1.newArray(int)
Tracing android.app.WallpaperInfo$1()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => com.android.internal.widget.EditableInputConnection[39;49;00m
[31;01mTracing Method : com.android.internal.widget.EditableInputConnection.beginBatchEdit [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.EditableInputConnection.clearMetaKeyStates [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.EditableInputConnection.closeConnection [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.EditableInputConnection.commitCompletion [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.EditableInputConnection.commitCorrection [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.EditableInputConnection.commitText [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.EditableInputConnection.endBatchEdit [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.EditableInputConnection.getEditable [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.EditableInputConnection.getExtractedText [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.EditableInputConnection.performContextMenuAction [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.EditableInputConnection.performEditorAction [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.EditableInputConnection.performPrivateCommand [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.EditableInputConnection.requestCursorUpdates [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.EditableInputConnection.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public boolean com.android.internal.widget.EditableInputConnection.beginBatchEdit()
public boolean com.android.internal.widget.EditableInputConnection.clearMetaKeyStates(int)
public void com.android.internal.widget.EditableInputConnection.closeConnection()
public boolean com.android.internal.widget.EditableInputConnection.commitCompletion(android.view.inputmethod.CompletionInfo)
public boolean com.android.internal.widget.EditableInputConnection.commitCorrection(android.view.inputmethod.CorrectionInfo)
public boolean com.android.internal.widget.EditableInputConnection.commitText(java.lang.CharSequence,int)
public boolean com.android.internal.widget.EditableInputConnection.endBatchEdit()
public android.text.Editable com.android.internal.widget.EditableInputConnection.getEditable()
public android.view.inputmethod.ExtractedText com.android.internal.widget.EditableInputConnection.getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)
public boolean com.android.internal.widget.EditableInputConnection.performContextMenuAction(int)
public boolean com.android.internal.widget.EditableInputConnection.performEditorAction(int)
public boolean com.android.internal.widget.EditableInputConnection.performPrivateCommand(java.lang.String,android.os.Bundle)
public boolean com.android.internal.widget.EditableInputConnection.requestCursorUpdates(int)
Tracing public com.android.internal.widget.EditableInputConnection(android.widget.TextView)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.media.AudioRouting[39;49;00m
[31;01mTracing Method : android.media.AudioRouting.addOnRoutingChangedListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.AudioRouting.getPreferredDevice [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.AudioRouting.getRoutedDevice [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.AudioRouting.removeOnRoutingChangedListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.AudioRouting.setPreferredDevice [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void android.media.AudioRouting.addOnRoutingChangedListener(android.media.AudioRouting$OnRoutingChangedListener,android.os.Handler)
public abstract android.media.AudioDeviceInfo android.media.AudioRouting.getPreferredDevice()
public abstract android.media.AudioDeviceInfo android.media.AudioRouting.getRoutedDevice()
public abstract void android.media.AudioRouting.removeOnRoutingChangedListener(android.media.AudioRouting$OnRoutingChangedListener)
public abstract boolean android.media.AudioRouting.setPreferredDevice(android.media.AudioDeviceInfo)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.database.sqlite.SQLiteStatementInfo[39;49;00m
[31;01mTracing Method : android.database.sqlite.SQLiteStatementInfo.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
Tracing public android.database.sqlite.SQLiteStatementInfo()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.database.sqlite.SQLiteCustomFunction[39;49;00m
[31;01mTracing Method : android.database.sqlite.SQLiteCustomFunction.dispatchCallback [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.sqlite.SQLiteCustomFunction.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
private void android.database.sqlite.SQLiteCustomFunction.dispatchCallback(java.lang.String[])
Tracing public android.database.sqlite.SQLiteCustomFunction(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CustomFunction)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.graphics.drawable.RippleBackground[39;49;00m
[31;01mTracing Method : android.graphics.drawable.RippleBackground.-get0 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.RippleBackground.-set0 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.RippleBackground.createHardwareExit [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.RippleBackground.createSoftwareEnter [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.RippleBackground.createSoftwareExit [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.RippleBackground.drawHardware [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.RippleBackground.drawSoftware [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.RippleBackground.isVisible [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.RippleBackground.jumpValuesToExit [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.RippleBackground.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
static float android.graphics.drawable.RippleBackground.-get0(android.graphics.drawable.RippleBackground)
static float android.graphics.drawable.RippleBackground.-set0(android.graphics.drawable.RippleBackground,float)
protected android.graphics.drawable.RippleComponent$RenderNodeAnimatorSet android.graphics.drawable.RippleBackground.createHardwareExit(android.graphics.Paint)
protected android.animation.Animator android.graphics.drawable.RippleBackground.createSoftwareEnter(boolean)
protected android.animation.Animator android.graphics.drawable.RippleBackground.createSoftwareExit()
protected boolean android.graphics.drawable.RippleBackground.drawHardware(android.view.DisplayListCanvas)
protected boolean android.graphics.drawable.RippleBackground.drawSoftware(android.graphics.Canvas,android.graphics.Paint)
public boolean android.graphics.drawable.RippleBackground.isVisible()
protected void android.graphics.drawable.RippleBackground.jumpValuesToExit()
Tracing public android.graphics.drawable.RippleBackground(android.graphics.drawable.RippleDrawable,android.graphics.Rect,boolean,boolean)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.app.LoadedApk$ServiceDispatcher[39;49;00m
[31;01mTracing Method : android.app.LoadedApk$ServiceDispatcher.connected [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.LoadedApk$ServiceDispatcher.death [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.LoadedApk$ServiceDispatcher.doConnected [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.LoadedApk$ServiceDispatcher.doDeath [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.LoadedApk$ServiceDispatcher.doForget [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.LoadedApk$ServiceDispatcher.getFlags [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.LoadedApk$ServiceDispatcher.getIServiceConnection [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.LoadedApk$ServiceDispatcher.getLocation [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.LoadedApk$ServiceDispatcher.getServiceConnection [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.LoadedApk$ServiceDispatcher.getUnbindLocation [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.LoadedApk$ServiceDispatcher.setUnbindLocation [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.LoadedApk$ServiceDispatcher.validate [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.LoadedApk$ServiceDispatcher.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public void android.app.LoadedApk$ServiceDispatcher.connected(android.content.ComponentName,android.os.IBinder,boolean)
public void android.app.LoadedApk$ServiceDispatcher.death(android.content.ComponentName,android.os.IBinder)
public void android.app.LoadedApk$ServiceDispatcher.doConnected(android.content.ComponentName,android.os.IBinder,boolean)
public void android.app.LoadedApk$ServiceDispatcher.doDeath(android.content.ComponentName,android.os.IBinder)
void android.app.LoadedApk$ServiceDispatcher.doForget()
int android.app.LoadedApk$ServiceDispatcher.getFlags()
android.app.IServiceConnection android.app.LoadedApk$ServiceDispatcher.getIServiceConnection()
android.app.ServiceConnectionLeaked android.app.LoadedApk$ServiceDispatcher.getLocation()
android.content.ServiceConnection android.app.LoadedApk$ServiceDispatcher.getServiceConnection()
java.lang.RuntimeException android.app.LoadedApk$ServiceDispatcher.getUnbindLocation()
void android.app.LoadedApk$ServiceDispatcher.setUnbindLocation(java.lang.RuntimeException)
void android.app.LoadedApk$ServiceDispatcher.validate(android.content.Context,android.os.Handler)
Tracing android.app.LoadedApk$ServiceDispatcher(android.content.ServiceConnection,android.content.Context,android.os.Handler,int)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.os.IHardwarePropertiesManager[39;49;00m
[31;01mTracing Method : android.os.IHardwarePropertiesManager.getCpuUsages [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.IHardwarePropertiesManager.getDeviceTemperatures [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.IHardwarePropertiesManager.getFanSpeeds [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract android.os.CpuUsageInfo[] android.os.IHardwarePropertiesManager.getCpuUsages(java.lang.String) throws android.os.RemoteException
public abstract float[] android.os.IHardwarePropertiesManager.getDeviceTemperatures(java.lang.String,int,int) throws android.os.RemoteException
public abstract float[] android.os.IHardwarePropertiesManager.getFanSpeeds(java.lang.String) throws android.os.RemoteException
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.transition.ChangeClipBounds[39;49;00m
[31;01mTracing Method : android.transition.ChangeClipBounds.captureValues [1 overload(s)][39;49;00m
[31;01mTracing Method : android.transition.ChangeClipBounds.captureEndValues [1 overload(s)][39;49;00m
[31;01mTracing Method : android.transition.ChangeClipBounds.captureStartValues [1 overload(s)][39;49;00m
[31;01mTracing Method : android.transition.ChangeClipBounds.createAnimator [1 overload(s)][39;49;00m
[31;01mTracing Method : android.transition.ChangeClipBounds.getTransitionProperties [1 overload(s)][39;49;00m
[31;01mTracing Method : android.transition.ChangeClipBounds.$init [2 overload(s)][39;49;00m
[32;01m	Spec: => 
private void android.transition.ChangeClipBounds.captureValues(android.transition.TransitionValues)
public void android.transition.ChangeClipBounds.captureEndValues(android.transition.TransitionValues)
public void android.transition.ChangeClipBounds.captureStartValues(android.transition.TransitionValues)
public android.animation.Animator android.transition.ChangeClipBounds.createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)
public java.lang.String[] android.transition.ChangeClipBounds.getTransitionProperties()
Tracing public android.transition.ChangeClipBounds()
Tracing public android.transition.ChangeClipBounds(android.content.Context,android.util.AttributeSet)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.webkit.IWebViewUpdateService$Stub$Proxy[39;49;00m
[31;01mTracing Method : android.webkit.IWebViewUpdateService$Stub$Proxy.asBinder [1 overload(s)][39;49;00m
[31;01mTracing Method : android.webkit.IWebViewUpdateService$Stub$Proxy.changeProviderAndSetting [1 overload(s)][39;49;00m
[31;01mTracing Method : android.webkit.IWebViewUpdateService$Stub$Proxy.enableFallbackLogic [1 overload(s)][39;49;00m
[31;01mTracing Method : android.webkit.IWebViewUpdateService$Stub$Proxy.enableMultiProcess [1 overload(s)][39;49;00m
[31;01mTracing Method : android.webkit.IWebViewUpdateService$Stub$Proxy.getAllWebViewPackages [1 overload(s)][39;49;00m
[31;01mTracing Method : android.webkit.IWebViewUpdateService$Stub$Proxy.getCurrentWebViewPackage [1 overload(s)][39;49;00m
[31;01mTracing Method : android.webkit.IWebViewUpdateService$Stub$Proxy.getCurrentWebViewPackageName [1 overload(s)][39;49;00m
[31;01mTracing Method : android.webkit.IWebViewUpdateService$Stub$Proxy.getInterfaceDescriptor [1 overload(s)][39;49;00m
[31;01mTracing Method : android.webkit.IWebViewUpdateService$Stub$Proxy.getValidWebViewPackages [1 overload(s)][39;49;00m
[31;01mTracing Method : android.webkit.IWebViewUpdateService$Stub$Proxy.isFallbackPackage [1 overload(s)][39;49;00m
[31;01mTracing Method : android.webkit.IWebViewUpdateService$Stub$Proxy.isMultiProcessEnabled [1 overload(s)][39;49;00m
[31;01mTracing Method : android.webkit.IWebViewUpdateService$Stub$Proxy.notifyRelroCreationCompleted [1 overload(s)][39;49;00m
[31;01mTracing Method : android.webkit.IWebViewUpdateService$Stub$Proxy.waitForAndGetProvider [1 overload(s)][39;49;00m
[31;01mTracing Method : android.webkit.IWebViewUpdateService$Stub$Proxy.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public android.os.IBinder android.webkit.IWebViewUpdateService$Stub$Proxy.asBinder()
public java.lang.String android.webkit.IWebViewUpdateService$Stub$Proxy.changeProviderAndSetting(java.lang.String) throws android.os.RemoteException
public void android.webkit.IWebViewUpdateService$Stub$Proxy.enableFallbackLogic(boolean) throws android.os.RemoteException
public void android.webkit.IWebViewUpdateService$Stub$Proxy.enableMultiProcess(boolean) throws android.os.RemoteException
public android.webkit.WebViewProviderInfo[] android.webkit.IWebViewUpdateService$Stub$Proxy.getAllWebViewPackages() throws android.os.RemoteException
public android.content.pm.PackageInfo android.webkit.IWebViewUpdateService$Stub$Proxy.getCurrentWebViewPackage() throws android.os.RemoteException
public java.lang.String android.webkit.IWebViewUpdateService$Stub$Proxy.getCurrentWebViewPackageName() throws android.os.RemoteException
public java.lang.String android.webkit.IWebViewUpdateService$Stub$Proxy.getInterfaceDescriptor()
public android.webkit.WebViewProviderInfo[] android.webkit.IWebViewUpdateService$Stub$Proxy.getValidWebViewPackages() throws android.os.RemoteException
public boolean android.webkit.IWebViewUpdateService$Stub$Proxy.isFallbackPackage(java.lang.String) throws android.os.RemoteException
public boolean android.webkit.IWebViewUpdateService$Stub$Proxy.isMultiProcessEnabled() throws android.os.RemoteException
public void android.webkit.IWebViewUpdateService$Stub$Proxy.notifyRelroCreationCompleted() throws android.os.RemoteException
public android.webkit.WebViewProviderResponse android.webkit.IWebViewUpdateService$Stub$Proxy.waitForAndGetProvider() throws android.os.RemoteException
Tracing android.webkit.IWebViewUpdateService$Stub$Proxy(android.os.IBinder)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.media.PlaybackParams$1[39;49;00m
[31;01mTracing Method : android.media.PlaybackParams$1.createFromParcel [2 overload(s)][39;49;00m
[31;01mTracing Method : android.media.PlaybackParams$1.newArray [2 overload(s)][39;49;00m
[31;01mTracing Method : android.media.PlaybackParams$1.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public android.media.PlaybackParams android.media.PlaybackParams$1.createFromParcel(android.os.Parcel)
public java.lang.Object android.media.PlaybackParams$1.createFromParcel(android.os.Parcel)
public android.media.PlaybackParams[] android.media.PlaybackParams$1.newArray(int)
public java.lang.Object[] android.media.PlaybackParams$1.newArray(int)
Tracing android.media.PlaybackParams$1()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.app.backup.FullBackup[39;49;00m
[31;01mTracing Method : android.app.backup.FullBackup.backupToTar [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.backup.FullBackup.getBackupScheme [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.backup.FullBackup.getBackupSchemeForTest [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.backup.FullBackup.restoreFile [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.backup.FullBackup.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public static native int android.app.backup.FullBackup.backupToTar(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.backup.FullBackupDataOutput)
static synchronized android.app.backup.FullBackup$BackupScheme android.app.backup.FullBackup.getBackupScheme(android.content.Context)
public static android.app.backup.FullBackup$BackupScheme android.app.backup.FullBackup.getBackupSchemeForTest(android.content.Context)
public static void android.app.backup.FullBackup.restoreFile(android.os.ParcelFileDescriptor,long,int,long,long,java.io.File) throws java.io.IOException
Tracing public android.app.backup.FullBackup()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.provider.Settings$System$7[39;49;00m
[31;01mTracing Method : android.provider.Settings$System$7.validate [1 overload(s)][39;49;00m
[31;01mTracing Method : android.provider.Settings$System$7.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public boolean android.provider.Settings$System$7.validate(java.lang.String)
Tracing android.provider.Settings$System$7()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.content.res.ColorStateList[39;49;00m
[31;01mTracing Method : android.content.res.ColorStateList.-get0 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.res.ColorStateList.applyTheme [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.res.ColorStateList.createFromXml [2 overload(s)][39;49;00m
[31;01mTracing Method : android.content.res.ColorStateList.createFromXmlInner [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.res.ColorStateList.inflate [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.res.ColorStateList.modulateColorAlpha [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.res.ColorStateList.onColorsChanged [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.res.ColorStateList.valueOf [2 overload(s)][39;49;00m
[31;01mTracing Method : android.content.res.ColorStateList.canApplyTheme [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.res.ColorStateList.describeContents [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.res.ColorStateList.getChangingConfigurations [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.res.ColorStateList.getColorForState [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.res.ColorStateList.getColors [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.res.ColorStateList.getConstantState [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.res.ColorStateList.getDefaultColor [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.res.ColorStateList.getStates [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.res.ColorStateList.hasFocusStateSpecified [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.res.ColorStateList.hasState [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.res.ColorStateList.isOpaque [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.res.ColorStateList.isStateful [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.res.ColorStateList.obtainForTheme [2 overload(s)][39;49;00m
[31;01mTracing Method : android.content.res.ColorStateList.toString [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.res.ColorStateList.withAlpha [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.res.ColorStateList.writeToParcel [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.res.ColorStateList.$init [3 overload(s)][39;49;00m
[32;01m	Spec: => 
static int android.content.res.ColorStateList.-get0(android.content.res.ColorStateList)
private void android.content.res.ColorStateList.applyTheme(android.content.res.Resources$Theme)
public static android.content.res.ColorStateList android.content.res.ColorStateList.createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static android.content.res.ColorStateList android.content.res.ColorStateList.createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
static android.content.res.ColorStateList android.content.res.ColorStateList.createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
private void android.content.res.ColorStateList.inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
private int android.content.res.ColorStateList.modulateColorAlpha(int,float)
private void android.content.res.ColorStateList.onColorsChanged()
public static android.content.res.ColorStateList android.content.res.ColorStateList.valueOf(int)
public boolean android.content.res.ColorStateList.canApplyTheme()
public int android.content.res.ColorStateList.describeContents()
public int android.content.res.ColorStateList.getChangingConfigurations()
public int android.content.res.ColorStateList.getColorForState(int[],int)
public int[] android.content.res.ColorStateList.getColors()
public android.content.res.ConstantState android.content.res.ColorStateList.getConstantState()
public int android.content.res.ColorStateList.getDefaultColor()
public int[][] android.content.res.ColorStateList.getStates()
public boolean android.content.res.ColorStateList.hasFocusStateSpecified()
public boolean android.content.res.ColorStateList.hasState(int)
public boolean android.content.res.ColorStateList.isOpaque()
public boolean android.content.res.ColorStateList.isStateful()
public android.content.res.ColorStateList android.content.res.ColorStateList.obtainForTheme(android.content.res.Resources$Theme)
public android.content.res.ComplexColor android.content.res.ColorStateList.obtainForTheme(android.content.res.Resources$Theme)
public java.lang.String android.content.res.ColorStateList.toString()
public android.content.res.ColorStateList android.content.res.ColorStateList.withAlpha(int)
public void android.content.res.ColorStateList.writeToParcel(android.os.Parcel,int)
Tracing private android.content.res.ColorStateList()
Tracing private android.content.res.ColorStateList(android.content.res.ColorStateList)
Tracing public android.content.res.ColorStateList(int[][],int[])
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.media.session.ISessionController[39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.adjustVolume [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.fastForward [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.getExtras [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.getFlags [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.getLaunchPendingIntent [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.getMetadata [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.getPackageName [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.getPlaybackState [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.getQueue [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.getQueueTitle [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.getRatingType [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.getTag [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.getVolumeAttributes [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.isTransportControlEnabled [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.next [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.pause [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.play [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.playFromMediaId [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.playFromSearch [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.playFromUri [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.prepare [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.prepareFromMediaId [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.prepareFromSearch [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.prepareFromUri [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.previous [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.rate [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.registerCallbackListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.rewind [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.seekTo [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.sendCommand [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.sendCustomAction [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.sendMediaButton [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.setVolumeTo [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.skipToQueueItem [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.stop [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionController.unregisterCallbackListener [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void android.media.session.ISessionController.adjustVolume(int,int,java.lang.String) throws android.os.RemoteException
public abstract void android.media.session.ISessionController.fastForward() throws android.os.RemoteException
public abstract android.os.Bundle android.media.session.ISessionController.getExtras() throws android.os.RemoteException
public abstract long android.media.session.ISessionController.getFlags() throws android.os.RemoteException
public abstract android.app.PendingIntent android.media.session.ISessionController.getLaunchPendingIntent() throws android.os.RemoteException
public abstract android.media.MediaMetadata android.media.session.ISessionController.getMetadata() throws android.os.RemoteException
public abstract java.lang.String android.media.session.ISessionController.getPackageName() throws android.os.RemoteException
public abstract android.media.session.PlaybackState android.media.session.ISessionController.getPlaybackState() throws android.os.RemoteException
public abstract android.content.pm.ParceledListSlice android.media.session.ISessionController.getQueue() throws android.os.RemoteException
public abstract java.lang.CharSequence android.media.session.ISessionController.getQueueTitle() throws android.os.RemoteException
public abstract int android.media.session.ISessionController.getRatingType() throws android.os.RemoteException
public abstract java.lang.String android.media.session.ISessionController.getTag() throws android.os.RemoteException
public abstract android.media.session.ParcelableVolumeInfo android.media.session.ISessionController.getVolumeAttributes() throws android.os.RemoteException
public abstract boolean android.media.session.ISessionController.isTransportControlEnabled() throws android.os.RemoteException
public abstract void android.media.session.ISessionController.next() throws android.os.RemoteException
public abstract void android.media.session.ISessionController.pause() throws android.os.RemoteException
public abstract void android.media.session.ISessionController.play() throws android.os.RemoteException
public abstract void android.media.session.ISessionController.playFromMediaId(java.lang.String,android.os.Bundle) throws android.os.RemoteException
public abstract void android.media.session.ISessionController.playFromSearch(java.lang.String,android.os.Bundle) throws android.os.RemoteException
public abstract void android.media.session.ISessionController.playFromUri(android.net.Uri,android.os.Bundle) throws android.os.RemoteException
public abstract void android.media.session.ISessionController.prepare() throws android.os.RemoteException
public abstract void android.media.session.ISessionController.prepareFromMediaId(java.lang.String,android.os.Bundle) throws android.os.RemoteException
public abstract void android.media.session.ISessionController.prepareFromSearch(java.lang.String,android.os.Bundle) throws android.os.RemoteException
public abstract void android.media.session.ISessionController.prepareFromUri(android.net.Uri,android.os.Bundle) throws android.os.RemoteException
public abstract void android.media.session.ISessionController.previous() throws android.os.RemoteException
public abstract void android.media.session.ISessionController.rate(android.media.Rating) throws android.os.RemoteException
public abstract void android.media.session.ISessionController.registerCallbackListener(android.media.session.ISessionControllerCallback) throws android.os.RemoteException
public abstract void android.media.session.ISessionController.rewind() throws android.os.RemoteException
public abstract void android.media.session.ISessionController.seekTo(long) throws android.os.RemoteException
public abstract void android.media.session.ISessionController.sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) throws android.os.RemoteException
public abstract void android.media.session.ISessionController.sendCustomAction(java.lang.String,android.os.Bundle) throws android.os.RemoteException
public abstract boolean android.media.session.ISessionController.sendMediaButton(android.view.KeyEvent) throws android.os.RemoteException
public abstract void android.media.session.ISessionController.setVolumeTo(int,int,java.lang.String) throws android.os.RemoteException
public abstract void android.media.session.ISessionController.skipToQueueItem(long) throws android.os.RemoteException
public abstract void android.media.session.ISessionController.stop() throws android.os.RemoteException
public abstract void android.media.session.ISessionController.unregisterCallbackListener(android.media.session.ISessionControllerCallback) throws android.os.RemoteException
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.media.AudioAttributes$1[39;49;00m
[31;01mTracing Method : android.media.AudioAttributes$1.createFromParcel [2 overload(s)][39;49;00m
[31;01mTracing Method : android.media.AudioAttributes$1.newArray [2 overload(s)][39;49;00m
[31;01mTracing Method : android.media.AudioAttributes$1.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public android.media.AudioAttributes android.media.AudioAttributes$1.createFromParcel(android.os.Parcel)
public java.lang.Object android.media.AudioAttributes$1.createFromParcel(android.os.Parcel)
public android.media.AudioAttributes[] android.media.AudioAttributes$1.newArray(int)
public java.lang.Object[] android.media.AudioAttributes$1.newArray(int)
Tracing android.media.AudioAttributes$1()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.app.IAlarmManager$Stub[39;49;00m
[31;01mTracing Method : android.app.IAlarmManager$Stub.asInterface [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.IAlarmManager$Stub.asBinder [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.IAlarmManager$Stub.onTransact [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.IAlarmManager$Stub.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public static android.app.IAlarmManager android.app.IAlarmManager$Stub.asInterface(android.os.IBinder)
public android.os.IBinder android.app.IAlarmManager$Stub.asBinder()
public boolean android.app.IAlarmManager$Stub.onTransact(int,android.os.Parcel,android.os.Parcel,int) throws android.os.RemoteException
Tracing public android.app.IAlarmManager$Stub()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.database.DefaultDatabaseErrorHandler[39;49;00m
[31;01mTracing Method : android.database.DefaultDatabaseErrorHandler.deleteDatabaseFile [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.DefaultDatabaseErrorHandler.onCorruption [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.DefaultDatabaseErrorHandler.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
private void android.database.DefaultDatabaseErrorHandler.deleteDatabaseFile(java.lang.String)
public void android.database.DefaultDatabaseErrorHandler.onCorruption(android.database.sqlite.SQLiteDatabase)
Tracing public android.database.DefaultDatabaseErrorHandler()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.media.session.ISessionControllerCallback$Stub[39;49;00m
[31;01mTracing Method : android.media.session.ISessionControllerCallback$Stub.asInterface [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionControllerCallback$Stub.asBinder [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionControllerCallback$Stub.onTransact [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.session.ISessionControllerCallback$Stub.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public static android.media.session.ISessionControllerCallback android.media.session.ISessionControllerCallback$Stub.asInterface(android.os.IBinder)
public android.os.IBinder android.media.session.ISessionControllerCallback$Stub.asBinder()
public boolean android.media.session.ISessionControllerCallback$Stub.onTransact(int,android.os.Parcel,android.os.Parcel,int) throws android.os.RemoteException
Tracing public android.media.session.ISessionControllerCallback$Stub()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.widget.Editor$InputMethodState[39;49;00m
[31;01mTracing Method : android.widget.Editor$InputMethodState.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
Tracing android.widget.Editor$InputMethodState()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.WindowLeaked[39;49;00m
[31;01mTracing Method : android.view.WindowLeaked.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
Tracing public android.view.WindowLeaked(java.lang.String)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.ScaleGestureDetector$SimpleOnScaleGestureListener[39;49;00m
[31;01mTracing Method : android.view.ScaleGestureDetector$SimpleOnScaleGestureListener.onScale [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.ScaleGestureDetector$SimpleOnScaleGestureListener.onScaleBegin [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.ScaleGestureDetector$SimpleOnScaleGestureListener.onScaleEnd [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.ScaleGestureDetector$SimpleOnScaleGestureListener.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public boolean android.view.ScaleGestureDetector$SimpleOnScaleGestureListener.onScale(android.view.ScaleGestureDetector)
public boolean android.view.ScaleGestureDetector$SimpleOnScaleGestureListener.onScaleBegin(android.view.ScaleGestureDetector)
public void android.view.ScaleGestureDetector$SimpleOnScaleGestureListener.onScaleEnd(android.view.ScaleGestureDetector)
Tracing public android.view.ScaleGestureDetector$SimpleOnScaleGestureListener()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.content.IClipboard[39;49;00m
[31;01mTracing Method : android.content.IClipboard.addPrimaryClipChangedListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.IClipboard.getPrimaryClip [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.IClipboard.getPrimaryClipDescription [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.IClipboard.hasClipboardText [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.IClipboard.hasPrimaryClip [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.IClipboard.removePrimaryClipChangedListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.IClipboard.setPrimaryClip [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void android.content.IClipboard.addPrimaryClipChangedListener(android.content.IOnPrimaryClipChangedListener,java.lang.String) throws android.os.RemoteException
public abstract android.content.ClipData android.content.IClipboard.getPrimaryClip(java.lang.String) throws android.os.RemoteException
public abstract android.content.ClipDescription android.content.IClipboard.getPrimaryClipDescription(java.lang.String) throws android.os.RemoteException
public abstract boolean android.content.IClipboard.hasClipboardText(java.lang.String) throws android.os.RemoteException
public abstract boolean android.content.IClipboard.hasPrimaryClip(java.lang.String) throws android.os.RemoteException
public abstract void android.content.IClipboard.removePrimaryClipChangedListener(android.content.IOnPrimaryClipChangedListener) throws android.os.RemoteException
public abstract void android.content.IClipboard.setPrimaryClip(android.content.ClipData,java.lang.String) throws android.os.RemoteException
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => com.android.internal.app.NightDisplayController[39;49;00m
[31;01mTracing Method : com.android.internal.app.NightDisplayController.-wrap0 [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.app.NightDisplayController.isAvailable [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.app.NightDisplayController.onSettingChanged [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.app.NightDisplayController.getAutoMode [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.app.NightDisplayController.getColorMode [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.app.NightDisplayController.getColorTemperature [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.app.NightDisplayController.getCustomEndTime [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.app.NightDisplayController.getCustomStartTime [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.app.NightDisplayController.getDefaultColorTemperature [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.app.NightDisplayController.getLastActivatedTime [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.app.NightDisplayController.getMaximumColorTemperature [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.app.NightDisplayController.getMinimumColorTemperature [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.app.NightDisplayController.isActivated [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.app.NightDisplayController.setActivated [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.app.NightDisplayController.setAutoMode [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.app.NightDisplayController.setColorMode [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.app.NightDisplayController.setColorTemperature [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.app.NightDisplayController.setCustomEndTime [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.app.NightDisplayController.setCustomStartTime [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.app.NightDisplayController.setListener [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.app.NightDisplayController.$init [2 overload(s)][39;49;00m
[32;01m	Spec: => 
static void com.android.internal.app.NightDisplayController.-wrap0(com.android.internal.app.NightDisplayController,java.lang.String)
public static boolean com.android.internal.app.NightDisplayController.isAvailable(android.content.Context)
private void com.android.internal.app.NightDisplayController.onSettingChanged(java.lang.String)
public int com.android.internal.app.NightDisplayController.getAutoMode()
public int com.android.internal.app.NightDisplayController.getColorMode()
public int com.android.internal.app.NightDisplayController.getColorTemperature()
public java.time.LocalTime com.android.internal.app.NightDisplayController.getCustomEndTime()
public java.time.LocalTime com.android.internal.app.NightDisplayController.getCustomStartTime()
public int com.android.internal.app.NightDisplayController.getDefaultColorTemperature()
public java.time.LocalDateTime com.android.internal.app.NightDisplayController.getLastActivatedTime()
public int com.android.internal.app.NightDisplayController.getMaximumColorTemperature()
public int com.android.internal.app.NightDisplayController.getMinimumColorTemperature()
public boolean com.android.internal.app.NightDisplayController.isActivated()
public boolean com.android.internal.app.NightDisplayController.setActivated(boolean)
public boolean com.android.internal.app.NightDisplayController.setAutoMode(int)
public void com.android.internal.app.NightDisplayController.setColorMode(int)
public boolean com.android.internal.app.NightDisplayController.setColorTemperature(int)
public boolean com.android.internal.app.NightDisplayController.setCustomEndTime(java.time.LocalTime)
public boolean com.android.internal.app.NightDisplayController.setCustomStartTime(java.time.LocalTime)
public void com.android.internal.app.NightDisplayController.setListener(com.android.internal.app.NightDisplayController$Callback)
Tracing public com.android.internal.app.NightDisplayController(android.content.Context)
Tracing public com.android.internal.app.NightDisplayController(android.content.Context,int)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.provider.Settings$System$8[39;49;00m
[31;01mTracing Method : android.provider.Settings$System$8.validate [1 overload(s)][39;49;00m
[31;01mTracing Method : android.provider.Settings$System$8.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public boolean android.provider.Settings$System$8.validate(java.lang.String)
Tracing android.provider.Settings$System$8()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.ViewRootImpl$1[39;49;00m
[31;01mTracing Method : android.view.ViewRootImpl$1.toViewScreenState [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.ViewRootImpl$1.onDisplayAdded [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.ViewRootImpl$1.onDisplayChanged [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.ViewRootImpl$1.onDisplayRemoved [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.ViewRootImpl$1.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
private int android.view.ViewRootImpl$1.toViewScreenState(int)
public void android.view.ViewRootImpl$1.onDisplayAdded(int)
public void android.view.ViewRootImpl$1.onDisplayChanged(int)
public void android.view.ViewRootImpl$1.onDisplayRemoved(int)
Tracing android.view.ViewRootImpl$1(android.view.ViewRootImpl)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.transition.AutoTransition[39;49;00m
[31;01mTracing Method : android.transition.AutoTransition.init [1 overload(s)][39;49;00m
[31;01mTracing Method : android.transition.AutoTransition.$init [2 overload(s)][39;49;00m
[32;01m	Spec: => 
private void android.transition.AutoTransition.init()
Tracing public android.transition.AutoTransition()
Tracing public android.transition.AutoTransition(android.content.Context,android.util.AttributeSet)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => com.android.internal.widget.ScrollBarUtils[39;49;00m
[31;01mTracing Method : com.android.internal.widget.ScrollBarUtils.getThumbLength [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.ScrollBarUtils.getThumbOffset [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.ScrollBarUtils.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public static int com.android.internal.widget.ScrollBarUtils.getThumbLength(int,int,int,int)
public static int com.android.internal.widget.ScrollBarUtils.getThumbOffset(int,int,int,int,int)
Tracing public com.android.internal.widget.ScrollBarUtils()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.accessibility.AccessibilityManager$1[39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager$1.lambda$-android_view_accessibility_AccessibilityManager$1_8835 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager$1.notifyServicesStateChanged [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager$1.setRelevantEventTypes [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager$1.setState [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager$1.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
void android.view.accessibility.AccessibilityManager$1.lambda$-android_view_accessibility_AccessibilityManager$1_8835(android.view.accessibility.AccessibilityManager$AccessibilityServicesStateChangeListener)
public void android.view.accessibility.AccessibilityManager$1.notifyServicesStateChanged()
public void android.view.accessibility.AccessibilityManager$1.setRelevantEventTypes(int)
public void android.view.accessibility.AccessibilityManager$1.setState(int)
Tracing android.view.accessibility.AccessibilityManager$1(android.view.accessibility.AccessibilityManager)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.animation.Keyframes$IntKeyframes[39;49;00m
[31;01mTracing Method : android.animation.Keyframes$IntKeyframes.getIntValue [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract int android.animation.Keyframes$IntKeyframes.getIntValue(float)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.provider.ContactsContract$RawContactsColumns[39;49;00m
[32;01m	Spec: => 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.database.sqlite.SQLiteDatabase$OpenParams$Builder[39;49;00m
[31;01mTracing Method : android.database.sqlite.SQLiteDatabase$OpenParams$Builder.addOpenFlags [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.sqlite.SQLiteDatabase$OpenParams$Builder.build [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.sqlite.SQLiteDatabase$OpenParams$Builder.isWriteAheadLoggingEnabled [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.sqlite.SQLiteDatabase$OpenParams$Builder.removeOpenFlags [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.sqlite.SQLiteDatabase$OpenParams$Builder.setCursorFactory [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.sqlite.SQLiteDatabase$OpenParams$Builder.setErrorHandler [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.sqlite.SQLiteDatabase$OpenParams$Builder.setIdleConnectionTimeout [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.sqlite.SQLiteDatabase$OpenParams$Builder.setLookasideConfig [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.sqlite.SQLiteDatabase$OpenParams$Builder.setOpenFlags [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.sqlite.SQLiteDatabase$OpenParams$Builder.setWriteAheadLoggingEnabled [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.sqlite.SQLiteDatabase$OpenParams$Builder.$init [2 overload(s)][39;49;00m
[32;01m	Spec: => 
public android.database.sqlite.SQLiteDatabase$OpenParams$Builder android.database.sqlite.SQLiteDatabase$OpenParams$Builder.addOpenFlags(int)
public android.database.sqlite.SQLiteDatabase$OpenParams android.database.sqlite.SQLiteDatabase$OpenParams$Builder.build()
public boolean android.database.sqlite.SQLiteDatabase$OpenParams$Builder.isWriteAheadLoggingEnabled()
public android.database.sqlite.SQLiteDatabase$OpenParams$Builder android.database.sqlite.SQLiteDatabase$OpenParams$Builder.removeOpenFlags(int)
public android.database.sqlite.SQLiteDatabase$OpenParams$Builder android.database.sqlite.SQLiteDatabase$OpenParams$Builder.setCursorFactory(android.database.sqlite.SQLiteDatabase$CursorFactory)
public android.database.sqlite.SQLiteDatabase$OpenParams$Builder android.database.sqlite.SQLiteDatabase$OpenParams$Builder.setErrorHandler(android.database.DatabaseErrorHandler)
public android.database.sqlite.SQLiteDatabase$OpenParams$Builder android.database.sqlite.SQLiteDatabase$OpenParams$Builder.setIdleConnectionTimeout(long)
public android.database.sqlite.SQLiteDatabase$OpenParams$Builder android.database.sqlite.SQLiteDatabase$OpenParams$Builder.setLookasideConfig(int,int)
public android.database.sqlite.SQLiteDatabase$OpenParams$Builder android.database.sqlite.SQLiteDatabase$OpenParams$Builder.setOpenFlags(int)
public void android.database.sqlite.SQLiteDatabase$OpenParams$Builder.setWriteAheadLoggingEnabled(boolean)
Tracing public android.database.sqlite.SQLiteDatabase$OpenParams$Builder()
Tracing public android.database.sqlite.SQLiteDatabase$OpenParams$Builder(android.database.sqlite.SQLiteDatabase$OpenParams)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.IGraphicsStatsCallback[39;49;00m
[31;01mTracing Method : android.view.IGraphicsStatsCallback.onRotateGraphicsStatsBuffer [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void android.view.IGraphicsStatsCallback.onRotateGraphicsStatsBuffer() throws android.os.RemoteException
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.net.IConnectivityManager$Stub[39;49;00m
[31;01mTracing Method : android.net.IConnectivityManager$Stub.asInterface [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.IConnectivityManager$Stub.asBinder [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.IConnectivityManager$Stub.onTransact [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.IConnectivityManager$Stub.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public static android.net.IConnectivityManager android.net.IConnectivityManager$Stub.asInterface(android.os.IBinder)
public android.os.IBinder android.net.IConnectivityManager$Stub.asBinder()
public boolean android.net.IConnectivityManager$Stub.onTransact(int,android.os.Parcel,android.os.Parcel,int) throws android.os.RemoteException
Tracing public android.net.IConnectivityManager$Stub()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.graphics.CanvasProperty[39;49;00m
[31;01mTracing Method : android.graphics.CanvasProperty.createFloat [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.CanvasProperty.createPaint [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.CanvasProperty.nCreateFloat [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.CanvasProperty.nCreatePaint [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.CanvasProperty.getNativeContainer [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.CanvasProperty.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public static android.graphics.CanvasProperty android.graphics.CanvasProperty.createFloat(float)
public static android.graphics.CanvasProperty android.graphics.CanvasProperty.createPaint(android.graphics.Paint)
private static native long android.graphics.CanvasProperty.nCreateFloat(float)
private static native long android.graphics.CanvasProperty.nCreatePaint(long)
public long android.graphics.CanvasProperty.getNativeContainer()
Tracing private android.graphics.CanvasProperty(long)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => com.android.internal.widget.DecorContentParent[39;49;00m
[31;01mTracing Method : com.android.internal.widget.DecorContentParent.canShowOverflowMenu [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.DecorContentParent.dismissPopups [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.DecorContentParent.getTitle [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.DecorContentParent.hasIcon [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.DecorContentParent.hasLogo [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.DecorContentParent.hideOverflowMenu [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.DecorContentParent.initFeature [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.DecorContentParent.isOverflowMenuShowPending [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.DecorContentParent.isOverflowMenuShowing [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.DecorContentParent.restoreToolbarHierarchyState [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.DecorContentParent.saveToolbarHierarchyState [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.DecorContentParent.setIcon [2 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.DecorContentParent.setLogo [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.DecorContentParent.setMenu [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.DecorContentParent.setMenuPrepared [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.DecorContentParent.setUiOptions [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.DecorContentParent.setWindowCallback [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.DecorContentParent.setWindowTitle [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.widget.DecorContentParent.showOverflowMenu [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract boolean com.android.internal.widget.DecorContentParent.canShowOverflowMenu()
public abstract void com.android.internal.widget.DecorContentParent.dismissPopups()
public abstract java.lang.CharSequence com.android.internal.widget.DecorContentParent.getTitle()
public abstract boolean com.android.internal.widget.DecorContentParent.hasIcon()
public abstract boolean com.android.internal.widget.DecorContentParent.hasLogo()
public abstract boolean com.android.internal.widget.DecorContentParent.hideOverflowMenu()
public abstract void com.android.internal.widget.DecorContentParent.initFeature(int)
public abstract boolean com.android.internal.widget.DecorContentParent.isOverflowMenuShowPending()
public abstract boolean com.android.internal.widget.DecorContentParent.isOverflowMenuShowing()
public abstract void com.android.internal.widget.DecorContentParent.restoreToolbarHierarchyState(android.util.SparseArray)
public abstract void com.android.internal.widget.DecorContentParent.saveToolbarHierarchyState(android.util.SparseArray)
public abstract void com.android.internal.widget.DecorContentParent.setIcon(int)
public abstract void com.android.internal.widget.DecorContentParent.setIcon(android.graphics.drawable.Drawable)
public abstract void com.android.internal.widget.DecorContentParent.setLogo(int)
public abstract void com.android.internal.widget.DecorContentParent.setMenu(android.view.Menu,com.android.internal.view.menu.MenuPresenter$Callback)
public abstract void com.android.internal.widget.DecorContentParent.setMenuPrepared()
public abstract void com.android.internal.widget.DecorContentParent.setUiOptions(int)
public abstract void com.android.internal.widget.DecorContentParent.setWindowCallback(android.view.Window$Callback)
public abstract void com.android.internal.widget.DecorContentParent.setWindowTitle(java.lang.CharSequence)
public abstract boolean com.android.internal.widget.DecorContentParent.showOverflowMenu()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.graphics.Canvas$EdgeType[39;49;00m
[31;01mTracing Method : android.graphics.Canvas$EdgeType.valueOf [2 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.Canvas$EdgeType.values [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.Canvas$EdgeType.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public static android.graphics.Canvas$EdgeType android.graphics.Canvas$EdgeType.valueOf(java.lang.String)
public static android.graphics.Canvas$EdgeType[] android.graphics.Canvas$EdgeType.values()
Tracing private android.graphics.Canvas$EdgeType(java.lang.String,int,int)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.app.NativeActivity[39;49;00m
[31;01mTracing Method : android.app.NativeActivity.getAbsolutePath [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.getDlError [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.loadNativeCode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onConfigurationChangedNative [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onContentRectChangedNative [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onInputQueueCreatedNative [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onInputQueueDestroyedNative [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onLowMemoryNative [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onPauseNative [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onResumeNative [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onSaveInstanceStateNative [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onStartNative [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onStopNative [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onSurfaceChangedNative [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onSurfaceCreatedNative [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onSurfaceDestroyedNative [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onSurfaceRedrawNeededNative [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onWindowFocusChangedNative [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.unloadNativeCode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.hideIme [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onConfigurationChanged [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onCreate [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onDestroy [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onGlobalLayout [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onInputQueueCreated [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onInputQueueDestroyed [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onLowMemory [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onPause [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onResume [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onSaveInstanceState [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onStart [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onStop [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.onWindowFocusChanged [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.setWindowFlags [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.setWindowFormat [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.showIme [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.surfaceChanged [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.surfaceCreated [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.surfaceDestroyed [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.surfaceRedrawNeeded [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.NativeActivity.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
private static java.lang.String android.app.NativeActivity.getAbsolutePath(java.io.File)
private native java.lang.String android.app.NativeActivity.getDlError()
private native long android.app.NativeActivity.loadNativeCode(java.lang.String,java.lang.String,android.os.MessageQueue,java.lang.String,java.lang.String,java.lang.String,int,android.content.res.AssetManager,byte[],java.lang.ClassLoader,java.lang.String)
private native void android.app.NativeActivity.onConfigurationChangedNative(long)
private native void android.app.NativeActivity.onContentRectChangedNative(long,int,int,int,int)
private native void android.app.NativeActivity.onInputQueueCreatedNative(long,long)
private native void android.app.NativeActivity.onInputQueueDestroyedNative(long,long)
private native void android.app.NativeActivity.onLowMemoryNative(long)
private native void android.app.NativeActivity.onPauseNative(long)
private native void android.app.NativeActivity.onResumeNative(long)
private native byte[] android.app.NativeActivity.onSaveInstanceStateNative(long)
private native void android.app.NativeActivity.onStartNative(long)
private native void android.app.NativeActivity.onStopNative(long)
private native void android.app.NativeActivity.onSurfaceChangedNative(long,android.view.Surface,int,int,int)
private native void android.app.NativeActivity.onSurfaceCreatedNative(long,android.view.Surface)
private native void android.app.NativeActivity.onSurfaceDestroyedNative(long)
private native void android.app.NativeActivity.onSurfaceRedrawNeededNative(long,android.view.Surface)
private native void android.app.NativeActivity.onWindowFocusChangedNative(long,boolean)
private native void android.app.NativeActivity.unloadNativeCode(long)
void android.app.NativeActivity.hideIme(int)
public void android.app.NativeActivity.onConfigurationChanged(android.content.res.Configuration)
protected void android.app.NativeActivity.onCreate(android.os.Bundle)
protected void android.app.NativeActivity.onDestroy()
public void android.app.NativeActivity.onGlobalLayout()
public void android.app.NativeActivity.onInputQueueCreated(android.view.InputQueue)
public void android.app.NativeActivity.onInputQueueDestroyed(android.view.InputQueue)
public void android.app.NativeActivity.onLowMemory()
protected void android.app.NativeActivity.onPause()
protected void android.app.NativeActivity.onResume()
protected void android.app.NativeActivity.onSaveInstanceState(android.os.Bundle)
protected void android.app.NativeActivity.onStart()
protected void android.app.NativeActivity.onStop()
public void android.app.NativeActivity.onWindowFocusChanged(boolean)
void android.app.NativeActivity.setWindowFlags(int,int)
void android.app.NativeActivity.setWindowFormat(int)
void android.app.NativeActivity.showIme(int)
public void android.app.NativeActivity.surfaceChanged(android.view.SurfaceHolder,int,int,int)
public void android.app.NativeActivity.surfaceCreated(android.view.SurfaceHolder)
public void android.app.NativeActivity.surfaceDestroyed(android.view.SurfaceHolder)
public void android.app.NativeActivity.surfaceRedrawNeeded(android.view.SurfaceHolder)
Tracing public android.app.NativeActivity()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.content.pm.FeatureInfo$1[39;49;00m
[31;01mTracing Method : android.content.pm.FeatureInfo$1.createFromParcel [2 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.FeatureInfo$1.newArray [2 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.FeatureInfo$1.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public android.content.pm.FeatureInfo android.content.pm.FeatureInfo$1.createFromParcel(android.os.Parcel)
public java.lang.Object android.content.pm.FeatureInfo$1.createFromParcel(android.os.Parcel)
public android.content.pm.FeatureInfo[] android.content.pm.FeatureInfo$1.newArray(int)
public java.lang.Object[] android.content.pm.FeatureInfo$1.newArray(int)
Tracing android.content.pm.FeatureInfo$1()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.hardware.camera2.CaptureRequest[39;49;00m
[31;01mTracing Method : android.hardware.camera2.CaptureRequest.-get0 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.CaptureRequest.-get1 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.CaptureRequest.-set0 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.CaptureRequest.-set1 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.CaptureRequest.-wrap0 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.CaptureRequest.equals [2 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.CaptureRequest.readFromParcel [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.CaptureRequest.containsTarget [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.CaptureRequest.describeContents [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.CaptureRequest.get [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.CaptureRequest.getKeyClass [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.CaptureRequest.getKeys [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.CaptureRequest.getNativeCopy [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.CaptureRequest.getProtected [2 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.CaptureRequest.getReprocessableSessionId [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.CaptureRequest.getTag [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.CaptureRequest.getTargets [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.CaptureRequest.hashCode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.CaptureRequest.isPartOfCRequestList [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.CaptureRequest.isReprocess [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.CaptureRequest.writeToParcel [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.CaptureRequest.$init [6 overload(s)][39;49;00m
[32;01m	Spec: => 
static android.hardware.camera2.impl.CameraMetadataNative android.hardware.camera2.CaptureRequest.-get0(android.hardware.camera2.CaptureRequest)
static java.util.HashSet android.hardware.camera2.CaptureRequest.-get1(android.hardware.camera2.CaptureRequest)
static boolean android.hardware.camera2.CaptureRequest.-set0(android.hardware.camera2.CaptureRequest,boolean)
static java.lang.Object android.hardware.camera2.CaptureRequest.-set1(android.hardware.camera2.CaptureRequest,java.lang.Object)
static void android.hardware.camera2.CaptureRequest.-wrap0(android.hardware.camera2.CaptureRequest,android.os.Parcel)
private boolean android.hardware.camera2.CaptureRequest.equals(android.hardware.camera2.CaptureRequest)
private void android.hardware.camera2.CaptureRequest.readFromParcel(android.os.Parcel)
public boolean android.hardware.camera2.CaptureRequest.containsTarget(android.view.Surface)
public int android.hardware.camera2.CaptureRequest.describeContents()
public boolean android.hardware.camera2.CaptureRequest.equals(java.lang.Object)
public java.lang.Object android.hardware.camera2.CaptureRequest.get(android.hardware.camera2.CaptureRequest$Key)
protected java.lang.Class android.hardware.camera2.CaptureRequest.getKeyClass()
public java.util.List android.hardware.camera2.CaptureRequest.getKeys()
public android.hardware.camera2.impl.CameraMetadataNative android.hardware.camera2.CaptureRequest.getNativeCopy()
protected java.lang.Object android.hardware.camera2.CaptureRequest.getProtected(android.hardware.camera2.CaptureRequest$Key)
protected java.lang.Object android.hardware.camera2.CaptureRequest.getProtected(java.lang.Object)
public int android.hardware.camera2.CaptureRequest.getReprocessableSessionId()
public java.lang.Object android.hardware.camera2.CaptureRequest.getTag()
public java.util.Collection android.hardware.camera2.CaptureRequest.getTargets()
public int android.hardware.camera2.CaptureRequest.hashCode()
public boolean android.hardware.camera2.CaptureRequest.isPartOfCRequestList()
public boolean android.hardware.camera2.CaptureRequest.isReprocess()
public void android.hardware.camera2.CaptureRequest.writeToParcel(android.os.Parcel,int)
Tracing private android.hardware.camera2.CaptureRequest()
Tracing private android.hardware.camera2.CaptureRequest(android.hardware.camera2.CaptureRequest)
Tracing android.hardware.camera2.CaptureRequest(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureRequest)
Tracing android.hardware.camera2.CaptureRequest(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureRequest)
Tracing private android.hardware.camera2.CaptureRequest(android.hardware.camera2.impl.CameraMetadataNative,boolean,int)
Tracing android.hardware.camera2.CaptureRequest(android.hardware.camera2.impl.CameraMetadataNative,boolean,int,android.hardware.camera2.CaptureRequest)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.net.LinkProperties[39;49;00m
[31;01mTracing Method : android.net.LinkProperties.compareProvisioning [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.findLinkAddressIndex [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.hasIPv4AddressOnInterface [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.isValidMtu [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.routeWithInterface [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.addDnsServer [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.addLinkAddress [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.addRoute [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.addStackedLink [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.clear [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.compareAddresses [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.compareAllInterfaceNames [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.compareAllRoutes [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.compareDnses [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.describeContents [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.ensureDirectlyConnectedRoutes [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.equals [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.getAddresses [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.getAllAddresses [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.getAllInterfaceNames [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.getAllLinkAddresses [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.getAllRoutes [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.getDnsServers [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.getDomains [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.getHttpProxy [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.getInterfaceName [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.getLinkAddresses [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.getMtu [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.getRoutes [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.getStackedLinks [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.getTcpBufferSizes [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.hasGlobalIPv6Address [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.hasIPv4Address [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.hasIPv4DefaultRoute [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.hasIPv4DnsServer [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.hasIPv6DefaultRoute [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.hasIPv6DnsServer [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.hashCode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.isIPv4Provisioned [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.isIPv6Provisioned [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.isIdenticalAddresses [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.isIdenticalDnses [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.isIdenticalHttpProxy [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.isIdenticalInterfaceName [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.isIdenticalMtu [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.isIdenticalRoutes [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.isIdenticalStackedLinks [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.isIdenticalTcpBufferSizes [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.isProvisioned [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.isReachable [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.removeDnsServer [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.removeLinkAddress [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.removeRoute [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.removeStackedLink [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.setDnsServers [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.setDomains [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.setHttpProxy [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.setInterfaceName [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.setLinkAddresses [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.setMtu [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.setTcpBufferSizes [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.toString [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.writeToParcel [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.LinkProperties.$init [2 overload(s)][39;49;00m
[32;01m	Spec: => 
public static android.net.LinkProperties$ProvisioningChange android.net.LinkProperties.compareProvisioning(android.net.LinkProperties,android.net.LinkProperties)
private int android.net.LinkProperties.findLinkAddressIndex(android.net.LinkAddress)
private boolean android.net.LinkProperties.hasIPv4AddressOnInterface(java.lang.String)
public static boolean android.net.LinkProperties.isValidMtu(int,boolean)
private android.net.RouteInfo android.net.LinkProperties.routeWithInterface(android.net.RouteInfo)
public boolean android.net.LinkProperties.addDnsServer(java.net.InetAddress)
public boolean android.net.LinkProperties.addLinkAddress(android.net.LinkAddress)
public boolean android.net.LinkProperties.addRoute(android.net.RouteInfo)
public boolean android.net.LinkProperties.addStackedLink(android.net.LinkProperties)
public void android.net.LinkProperties.clear()
public android.net.LinkProperties$CompareResult android.net.LinkProperties.compareAddresses(android.net.LinkProperties)
public android.net.LinkProperties$CompareResult android.net.LinkProperties.compareAllInterfaceNames(android.net.LinkProperties)
public android.net.LinkProperties$CompareResult android.net.LinkProperties.compareAllRoutes(android.net.LinkProperties)
public android.net.LinkProperties$CompareResult android.net.LinkProperties.compareDnses(android.net.LinkProperties)
public int android.net.LinkProperties.describeContents()
public void android.net.LinkProperties.ensureDirectlyConnectedRoutes()
public boolean android.net.LinkProperties.equals(java.lang.Object)
public java.util.List android.net.LinkProperties.getAddresses()
public java.util.List android.net.LinkProperties.getAllAddresses()
public java.util.List android.net.LinkProperties.getAllInterfaceNames()
public java.util.List android.net.LinkProperties.getAllLinkAddresses()
public java.util.List android.net.LinkProperties.getAllRoutes()
public java.util.List android.net.LinkProperties.getDnsServers()
public java.lang.String android.net.LinkProperties.getDomains()
public android.net.ProxyInfo android.net.LinkProperties.getHttpProxy()
public java.lang.String android.net.LinkProperties.getInterfaceName()
public java.util.List android.net.LinkProperties.getLinkAddresses()
public int android.net.LinkProperties.getMtu()
public java.util.List android.net.LinkProperties.getRoutes()
public java.util.List android.net.LinkProperties.getStackedLinks()
public java.lang.String android.net.LinkProperties.getTcpBufferSizes()
public boolean android.net.LinkProperties.hasGlobalIPv6Address()
public boolean android.net.LinkProperties.hasIPv4Address()
public boolean android.net.LinkProperties.hasIPv4DefaultRoute()
public boolean android.net.LinkProperties.hasIPv4DnsServer()
public boolean android.net.LinkProperties.hasIPv6DefaultRoute()
public boolean android.net.LinkProperties.hasIPv6DnsServer()
public int android.net.LinkProperties.hashCode()
public boolean android.net.LinkProperties.isIPv4Provisioned()
public boolean android.net.LinkProperties.isIPv6Provisioned()
public boolean android.net.LinkProperties.isIdenticalAddresses(android.net.LinkProperties)
public boolean android.net.LinkProperties.isIdenticalDnses(android.net.LinkProperties)
public boolean android.net.LinkProperties.isIdenticalHttpProxy(android.net.LinkProperties)
public boolean android.net.LinkProperties.isIdenticalInterfaceName(android.net.LinkProperties)
public boolean android.net.LinkProperties.isIdenticalMtu(android.net.LinkProperties)
public boolean android.net.LinkProperties.isIdenticalRoutes(android.net.LinkProperties)
public boolean android.net.LinkProperties.isIdenticalStackedLinks(android.net.LinkProperties)
public boolean android.net.LinkProperties.isIdenticalTcpBufferSizes(android.net.LinkProperties)
public boolean android.net.LinkProperties.isProvisioned()
public boolean android.net.LinkProperties.isReachable(java.net.InetAddress)
public boolean android.net.LinkProperties.removeDnsServer(java.net.InetAddress)
public boolean android.net.LinkProperties.removeLinkAddress(android.net.LinkAddress)
public boolean android.net.LinkProperties.removeRoute(android.net.RouteInfo)
public boolean android.net.LinkProperties.removeStackedLink(java.lang.String)
public void android.net.LinkProperties.setDnsServers(java.util.Collection)
public void android.net.LinkProperties.setDomains(java.lang.String)
public void android.net.LinkProperties.setHttpProxy(android.net.ProxyInfo)
public void android.net.LinkProperties.setInterfaceName(java.lang.String)
public void android.net.LinkProperties.setLinkAddresses(java.util.Collection)
public void android.net.LinkProperties.setMtu(int)
public void android.net.LinkProperties.setTcpBufferSizes(java.lang.String)
public java.lang.String android.net.LinkProperties.toString()
public void android.net.LinkProperties.writeToParcel(android.os.Parcel,int)
Tracing public android.net.LinkProperties()
Tracing public android.net.LinkProperties(android.net.LinkProperties)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.app.job.JobServiceEngine$JobInterface[39;49;00m
[31;01mTracing Method : android.app.job.JobServiceEngine$JobInterface.startJob [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.job.JobServiceEngine$JobInterface.stopJob [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.job.JobServiceEngine$JobInterface.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public void android.app.job.JobServiceEngine$JobInterface.startJob(android.app.job.JobParameters) throws android.os.RemoteException
public void android.app.job.JobServiceEngine$JobInterface.stopJob(android.app.job.JobParameters) throws android.os.RemoteException
Tracing android.app.job.JobServiceEngine$JobInterface(android.app.job.JobServiceEngine)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.widget.Editor[39;49;00m
[31;01mTracing Method : android.widget.Editor.-get0 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-get1 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-get10 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-get11 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-get12 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-get13 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-get14 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-get15 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-get2 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-get3 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-get4 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-get5 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-get6 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-get7 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-get8 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-get9 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-set0 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-set1 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-set2 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-set3 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-set4 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-set5 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-set6 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-set7 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-wrap0 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-wrap1 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-wrap10 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-wrap11 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-wrap12 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-wrap13 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-wrap14 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-wrap15 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-wrap16 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-wrap17 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-wrap18 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-wrap19 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-wrap2 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-wrap20 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-wrap21 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-wrap22 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-wrap23 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-wrap24 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-wrap25 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-wrap3 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-wrap4 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-wrap5 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-wrap6 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-wrap7 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-wrap8 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.-wrap9 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.chooseSize [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.clampHorizontalPosition [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.discardTextDisplayLists [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.downgradeEasyCorrectionSpans [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.drawCursor [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.drawHardwareAccelerated [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.drawHardwareAcceleratedInner [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.extractTextInternal [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.extractedTextModeWillBeStarted [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.findEquivalentSuggestionSpan [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.getAvailableDisplayListIndex [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.getCharClusterRange [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.getCurrentLineAdjustedForSlop [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.getErrorX [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.getErrorY [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.getInsertionController [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.getLastTapPosition [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.getLastTouchOffsets [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.getNextCursorOffset [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.getParagraphsRange [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.getPositionListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.getSelectionActionModeHelper [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.getTextThumbnailBuilder [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.getWordEnd [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.getWordIteratorWithText [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.getWordStart [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.hideCursorControllers [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.hideError [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.hideSpanControllers [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.invalidateActionMode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.isCursorInsideEasyCorrectionSpan [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.isOffsetVisible [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.isPositionOnText [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.isValidRange [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.needsToSelectAllToSelectWordOrParagraph [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.replaceWithSuggestion [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.resumeBlink [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.selectCurrentParagraph [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.selectCurrentWordAndStartDrag [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.sendUpdateSelection [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.setErrorIcon [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.shouldBlink [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.shouldFilterOutTouchEvent [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.shouldOfferToShowSuggestions [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.showError [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.showFloatingToolbar [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.startDragAndDrop [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.stopTextActionModeWithPreservingSelection [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.suspendBlink [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.touchPositionIsInSelection [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.updateCursorPosition [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.updateFloatingToolbarVisibility [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.updateSpellCheckSpans [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.updateTapState [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.addSpanWatchers [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.adjustInputType [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.beginBatchEdit [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.canRedo [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.canUndo [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.checkField [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.createInputContentTypeIfNeeded [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.createInputMethodStateIfNeeded [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.endBatchEdit [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.ensureEndedBatchEdit [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.extractText [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.finishBatchEdit [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.forgetUndoRedo [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.getCursorDrawable [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.getSelectionController [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.getSuggestionsPopupWindowForTesting [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.getTextActionMode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.getTextView [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.getWordIterator [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.hasInsertionController [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.hasSelectionController [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.hideCursorAndSpanControllers [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.hideFloatingToolbar [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.hideInsertionPointCursorController [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.invalidateActionModeAsync [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.invalidateHandlesAndActionMode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.invalidateTextDisplayList [2 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.isCursorVisible [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.makeBlink [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.onAttachedToWindow [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.onCommitCorrection [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.onCreateContextMenu [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.onDetachedFromWindow [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.onDraw [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.onDrop [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.onFocusChanged [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.onLocaleChanged [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.onScreenStateChanged [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.onScrollChanged [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.onTouchEvent [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.onTouchUpEvent [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.onWindowFocusChanged [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.performLongClick [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.prepareCursorControllers [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.redo [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.refreshTextActionMode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.replace [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.reportExtractedText [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.restoreInstanceState [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.saveInstanceState [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.selectCurrentWord [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.sendOnTextChanged [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.setContextMenuAnchor [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.setError [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.setFrame [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.setRestartActionModeOnNextRefresh [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.startInsertionActionMode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.startSelectionActionModeAsync [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.startSelectionActionModeInternal [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.stopTextActionMode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.undo [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.updateCursorsPositions [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Editor.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
static boolean android.widget.Editor.-get0(android.widget.Editor)
static java.lang.Runnable android.widget.Editor.-get1(android.widget.Editor)
static int android.widget.Editor.-get10(android.widget.Editor)
static android.graphics.Rect android.widget.Editor.-get11(android.widget.Editor)
static android.view.ActionMode android.widget.Editor.-get12(android.widget.Editor)
static android.widget.TextView android.widget.Editor.-get13(android.widget.Editor)
static android.content.UndoManager android.widget.Editor.-get14(android.widget.Editor)
static android.content.UndoOwner android.widget.Editor.-get15(android.widget.Editor)
static float android.widget.Editor.-get2(android.widget.Editor)
static float android.widget.Editor.-get3(android.widget.Editor)
static com.android.internal.logging.MetricsLogger android.widget.Editor.-get4(android.widget.Editor)
static boolean android.widget.Editor.-get5(android.widget.Editor)
static android.graphics.drawable.Drawable android.widget.Editor.-get6(android.widget.Editor)
static android.graphics.drawable.Drawable android.widget.Editor.-get7(android.widget.Editor)
static android.graphics.drawable.Drawable android.widget.Editor.-get8(android.widget.Editor)
static android.widget.Editor$SuggestionHelper android.widget.Editor.-get9(android.widget.Editor)
static android.widget.Editor$CorrectionHighlighter android.widget.Editor.-set0(android.widget.Editor,android.widget.Editor$CorrectionHighlighter)
static java.lang.Runnable android.widget.Editor.-set1(android.widget.Editor,java.lang.Runnable)
static boolean android.widget.Editor.-set2(android.widget.Editor,boolean)
static android.graphics.drawable.Drawable android.widget.Editor.-set3(android.widget.Editor,android.graphics.drawable.Drawable)
static android.graphics.drawable.Drawable android.widget.Editor.-set4(android.widget.Editor,android.graphics.drawable.Drawable)
static android.graphics.drawable.Drawable android.widget.Editor.-set5(android.widget.Editor,android.graphics.drawable.Drawable)
static android.graphics.Rect android.widget.Editor.-set6(android.widget.Editor,android.graphics.Rect)
static android.view.ActionMode android.widget.Editor.-set7(android.widget.Editor,android.view.ActionMode)
static android.text.method.WordIterator android.widget.Editor.-wrap0(android.widget.Editor)
static android.text.style.SuggestionSpan android.widget.Editor.-wrap1(android.widget.Editor,android.widget.Editor$SuggestionSpanInfo)
static boolean android.widget.Editor.-wrap10(android.widget.Editor)
static boolean android.widget.Editor.-wrap11(android.widget.Editor)
static boolean android.widget.Editor.-wrap12(android.widget.Editor)
static boolean android.widget.Editor.-wrap13(android.widget.Editor)
static int android.widget.Editor.-wrap14(android.widget.Editor,android.graphics.drawable.Drawable,float)
static int android.widget.Editor.-wrap15(android.widget.Editor,android.text.Layout,int,float)
static int android.widget.Editor.-wrap16(android.widget.Editor,int,boolean)
static int android.widget.Editor.-wrap17(android.widget.Editor,int)
static int android.widget.Editor.-wrap18(android.widget.Editor,int)
static long android.widget.Editor.-wrap19(android.widget.Editor,int,int)
static android.widget.Editor$InsertionPointCursorController android.widget.Editor.-wrap2(android.widget.Editor)
static void android.widget.Editor.-wrap20(android.widget.Editor)
static void android.widget.Editor.-wrap21(android.widget.Editor,android.widget.Editor$SuggestionInfo)
static void android.widget.Editor.-wrap22(android.widget.Editor)
static void android.widget.Editor.-wrap23(android.widget.Editor)
static void android.widget.Editor.-wrap24(android.widget.Editor,android.view.MotionEvent)
static void android.widget.Editor.-wrap25(android.widget.Editor,int,int,boolean)
static android.widget.Editor$PositionListener android.widget.Editor.-wrap3(android.widget.Editor)
static android.widget.SelectionActionModeHelper android.widget.Editor.-wrap4(android.widget.Editor)
static boolean android.widget.Editor.-wrap5(android.widget.Editor)
static boolean android.widget.Editor.-wrap6(android.widget.Editor)
static boolean android.widget.Editor.-wrap7(android.widget.Editor,int)
static boolean android.widget.Editor.-wrap8(android.widget.Editor,float,float)
static boolean android.widget.Editor.-wrap9(java.lang.CharSequence,int,int)
private void android.widget.Editor.chooseSize(android.widget.PopupWindow,java.lang.CharSequence,android.widget.TextView)
private int android.widget.Editor.clampHorizontalPosition(android.graphics.drawable.Drawable,float)
private void android.widget.Editor.discardTextDisplayLists()
private void android.widget.Editor.downgradeEasyCorrectionSpans()
private void android.widget.Editor.drawCursor(android.graphics.Canvas,int)
private void android.widget.Editor.drawHardwareAccelerated(android.graphics.Canvas,android.text.Layout,android.graphics.Path,android.graphics.Paint,int)
private int android.widget.Editor.drawHardwareAcceleratedInner(android.graphics.Canvas,android.text.Layout,android.graphics.Path,android.graphics.Paint,int,int[],int[],int,int,int)
private boolean android.widget.Editor.extractTextInternal(android.view.inputmethod.ExtractedTextRequest,int,int,int,android.view.inputmethod.ExtractedText)
private boolean android.widget.Editor.extractedTextModeWillBeStarted()
private android.text.style.SuggestionSpan android.widget.Editor.findEquivalentSuggestionSpan(android.widget.Editor$SuggestionSpanInfo)
private int android.widget.Editor.getAvailableDisplayListIndex(int[],int,int)
private long android.widget.Editor.getCharClusterRange(int)
private int android.widget.Editor.getCurrentLineAdjustedForSlop(android.text.Layout,int,float)
private int android.widget.Editor.getErrorX()
private int android.widget.Editor.getErrorY()
private android.widget.Editor$InsertionPointCursorController android.widget.Editor.getInsertionController()
private int android.widget.Editor.getLastTapPosition()
private long android.widget.Editor.getLastTouchOffsets()
private int android.widget.Editor.getNextCursorOffset(int,boolean)
private long android.widget.Editor.getParagraphsRange(int,int)
private android.widget.Editor$PositionListener android.widget.Editor.getPositionListener()
private android.widget.SelectionActionModeHelper android.widget.Editor.getSelectionActionModeHelper()
private android.view.View$DragShadowBuilder android.widget.Editor.getTextThumbnailBuilder(int,int)
private int android.widget.Editor.getWordEnd(int)
private android.text.method.WordIterator android.widget.Editor.getWordIteratorWithText()
private int android.widget.Editor.getWordStart(int)
private void android.widget.Editor.hideCursorControllers()
private void android.widget.Editor.hideError()
private void android.widget.Editor.hideSpanControllers()
private void android.widget.Editor.invalidateActionMode()
private boolean android.widget.Editor.isCursorInsideEasyCorrectionSpan()
private boolean android.widget.Editor.isOffsetVisible(int)
private boolean android.widget.Editor.isPositionOnText(float,float)
private static boolean android.widget.Editor.isValidRange(java.lang.CharSequence,int,int)
private boolean android.widget.Editor.needsToSelectAllToSelectWordOrParagraph()
private void android.widget.Editor.replaceWithSuggestion(android.widget.Editor$SuggestionInfo)
private void android.widget.Editor.resumeBlink()
private boolean android.widget.Editor.selectCurrentParagraph()
private boolean android.widget.Editor.selectCurrentWordAndStartDrag()
private void android.widget.Editor.sendUpdateSelection()
private void android.widget.Editor.setErrorIcon(android.graphics.drawable.Drawable)
private boolean android.widget.Editor.shouldBlink()
private boolean android.widget.Editor.shouldFilterOutTouchEvent(android.view.MotionEvent)
private boolean android.widget.Editor.shouldOfferToShowSuggestions()
private void android.widget.Editor.showError()
private void android.widget.Editor.showFloatingToolbar()
private void android.widget.Editor.startDragAndDrop()
private void android.widget.Editor.stopTextActionModeWithPreservingSelection()
private void android.widget.Editor.suspendBlink()
private boolean android.widget.Editor.touchPositionIsInSelection()
private void android.widget.Editor.updateCursorPosition(int,int,int,float)
private void android.widget.Editor.updateFloatingToolbarVisibility(android.view.MotionEvent)
private void android.widget.Editor.updateSpellCheckSpans(int,int,boolean)
private void android.widget.Editor.updateTapState(android.view.MotionEvent)
public void android.widget.Editor.addSpanWatchers(android.text.Spannable)
void android.widget.Editor.adjustInputType(boolean,boolean,boolean,boolean)
public void android.widget.Editor.beginBatchEdit()
boolean android.widget.Editor.canRedo()
boolean android.widget.Editor.canUndo()
boolean android.widget.Editor.checkField()
void android.widget.Editor.createInputContentTypeIfNeeded()
void android.widget.Editor.createInputMethodStateIfNeeded()
public void android.widget.Editor.endBatchEdit()
void android.widget.Editor.ensureEndedBatchEdit()
boolean android.widget.Editor.extractText(android.view.inputmethod.ExtractedTextRequest,android.view.inputmethod.ExtractedText)
void android.widget.Editor.finishBatchEdit(android.widget.Editor$InputMethodState)
void android.widget.Editor.forgetUndoRedo()
public android.graphics.drawable.Drawable[] android.widget.Editor.getCursorDrawable()
android.widget.Editor$SelectionModifierCursorController android.widget.Editor.getSelectionController()
public android.widget.Editor$SuggestionsPopupWindow android.widget.Editor.getSuggestionsPopupWindowForTesting()
android.view.ActionMode android.widget.Editor.getTextActionMode()
android.widget.TextView android.widget.Editor.getTextView()
public android.text.method.WordIterator android.widget.Editor.getWordIterator()
boolean android.widget.Editor.hasInsertionController()
boolean android.widget.Editor.hasSelectionController()
void android.widget.Editor.hideCursorAndSpanControllers()
void android.widget.Editor.hideFloatingToolbar(int)
void android.widget.Editor.hideInsertionPointCursorController()
void android.widget.Editor.invalidateActionModeAsync()
void android.widget.Editor.invalidateHandlesAndActionMode()
void android.widget.Editor.invalidateTextDisplayList()
void android.widget.Editor.invalidateTextDisplayList(android.text.Layout,int,int)
boolean android.widget.Editor.isCursorVisible()
void android.widget.Editor.makeBlink()
void android.widget.Editor.onAttachedToWindow()
public void android.widget.Editor.onCommitCorrection(android.view.inputmethod.CorrectionInfo)
void android.widget.Editor.onCreateContextMenu(android.view.ContextMenu)
void android.widget.Editor.onDetachedFromWindow()
void android.widget.Editor.onDraw(android.graphics.Canvas,android.text.Layout,android.graphics.Path,android.graphics.Paint,int)
void android.widget.Editor.onDrop(android.view.DragEvent)
void android.widget.Editor.onFocusChanged(boolean,int)
void android.widget.Editor.onLocaleChanged()
void android.widget.Editor.onScreenStateChanged(int)
void android.widget.Editor.onScrollChanged()
void android.widget.Editor.onTouchEvent(android.view.MotionEvent)
void android.widget.Editor.onTouchUpEvent(android.view.MotionEvent)
void android.widget.Editor.onWindowFocusChanged(boolean)
public boolean android.widget.Editor.performLongClick(boolean)
void android.widget.Editor.prepareCursorControllers()
void android.widget.Editor.redo()
void android.widget.Editor.refreshTextActionMode()
void android.widget.Editor.replace()
boolean android.widget.Editor.reportExtractedText()
void android.widget.Editor.restoreInstanceState(android.os.ParcelableParcel)
android.os.ParcelableParcel android.widget.Editor.saveInstanceState()
boolean android.widget.Editor.selectCurrentWord()
void android.widget.Editor.sendOnTextChanged(int,int,int)
void android.widget.Editor.setContextMenuAnchor(float,float)
public void android.widget.Editor.setError(java.lang.CharSequence,android.graphics.drawable.Drawable)
void android.widget.Editor.setFrame()
void android.widget.Editor.setRestartActionModeOnNextRefresh(boolean)
void android.widget.Editor.startInsertionActionMode()
void android.widget.Editor.startSelectionActionModeAsync(boolean)
boolean android.widget.Editor.startSelectionActionModeInternal()
protected void android.widget.Editor.stopTextActionMode()
void android.widget.Editor.undo()
void android.widget.Editor.updateCursorsPositions()
Tracing android.widget.Editor(android.widget.TextView)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.RenderNode$NoImagePreloadHolder[39;49;00m
[31;01mTracing Method : android.view.RenderNode$NoImagePreloadHolder.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
Tracing private android.view.RenderNode$NoImagePreloadHolder()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.hardware.camera2.utils.TypeReference[39;49;00m
[31;01mTracing Method : android.hardware.camera2.utils.TypeReference.containsTypeVariable [2 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.utils.TypeReference.createSpecializedTypeReference [2 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.utils.TypeReference.getArrayClass [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.utils.TypeReference.getComponentType [2 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.utils.TypeReference.getRawType [3 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.utils.TypeReference.toString [3 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.utils.TypeReference.equals [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.utils.TypeReference.getType [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.utils.TypeReference.hashCode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.utils.TypeReference.$init [3 overload(s)][39;49;00m
[32;01m	Spec: => 
public static boolean android.hardware.camera2.utils.TypeReference.containsTypeVariable(java.lang.reflect.Type)
private static boolean android.hardware.camera2.utils.TypeReference.containsTypeVariable(java.lang.reflect.Type[])
public static android.hardware.camera2.utils.TypeReference android.hardware.camera2.utils.TypeReference.createSpecializedTypeReference(java.lang.Class)
public static android.hardware.camera2.utils.TypeReference android.hardware.camera2.utils.TypeReference.createSpecializedTypeReference(java.lang.reflect.Type)
private static final java.lang.Class android.hardware.camera2.utils.TypeReference.getArrayClass(java.lang.Class)
private static java.lang.reflect.Type android.hardware.camera2.utils.TypeReference.getComponentType(java.lang.reflect.Type)
private static final java.lang.Class android.hardware.camera2.utils.TypeReference.getRawType(java.lang.reflect.Type)
private static final java.lang.Class android.hardware.camera2.utils.TypeReference.getRawType(java.lang.reflect.Type[])
private static void android.hardware.camera2.utils.TypeReference.toString(java.lang.reflect.Type,java.lang.StringBuilder)
private static void android.hardware.camera2.utils.TypeReference.toString(java.lang.reflect.Type[],java.lang.StringBuilder)
public boolean android.hardware.camera2.utils.TypeReference.equals(java.lang.Object)
public android.hardware.camera2.utils.TypeReference android.hardware.camera2.utils.TypeReference.getComponentType()
public final java.lang.Class android.hardware.camera2.utils.TypeReference.getRawType()
public java.lang.reflect.Type android.hardware.camera2.utils.TypeReference.getType()
public int android.hardware.camera2.utils.TypeReference.hashCode()
public java.lang.String android.hardware.camera2.utils.TypeReference.toString()
Tracing protected android.hardware.camera2.utils.TypeReference()
Tracing private android.hardware.camera2.utils.TypeReference(java.lang.reflect.Type)
Tracing android.hardware.camera2.utils.TypeReference(java.lang.reflect.Type,android.hardware.camera2.utils.TypeReference)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.hardware.SystemSensorManager$BaseEventQueue[39;49;00m
[31;01mTracing Method : android.hardware.SystemSensorManager$BaseEventQueue.disableSensor [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.SystemSensorManager$BaseEventQueue.dispose [2 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.SystemSensorManager$BaseEventQueue.enableSensor [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.SystemSensorManager$BaseEventQueue.nativeDestroySensorEventQueue [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.SystemSensorManager$BaseEventQueue.nativeDisableSensor [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.SystemSensorManager$BaseEventQueue.nativeEnableSensor [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.SystemSensorManager$BaseEventQueue.nativeFlushSensor [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.SystemSensorManager$BaseEventQueue.nativeInitBaseEventQueue [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.SystemSensorManager$BaseEventQueue.nativeInjectSensorData [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.SystemSensorManager$BaseEventQueue.addSensor [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.SystemSensorManager$BaseEventQueue.addSensorEvent [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.SystemSensorManager$BaseEventQueue.dispatchAdditionalInfoEvent [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.SystemSensorManager$BaseEventQueue.dispatchFlushCompleteEvent [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.SystemSensorManager$BaseEventQueue.dispatchSensorEvent [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.SystemSensorManager$BaseEventQueue.finalize [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.SystemSensorManager$BaseEventQueue.flush [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.SystemSensorManager$BaseEventQueue.hasSensors [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.SystemSensorManager$BaseEventQueue.injectSensorDataBase [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.SystemSensorManager$BaseEventQueue.removeAllSensors [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.SystemSensorManager$BaseEventQueue.removeSensor [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.SystemSensorManager$BaseEventQueue.removeSensorEvent [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.SystemSensorManager$BaseEventQueue.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
private int android.hardware.SystemSensorManager$BaseEventQueue.disableSensor(android.hardware.Sensor)
private void android.hardware.SystemSensorManager$BaseEventQueue.dispose(boolean)
private int android.hardware.SystemSensorManager$BaseEventQueue.enableSensor(android.hardware.Sensor,int,int)
private static native void android.hardware.SystemSensorManager$BaseEventQueue.nativeDestroySensorEventQueue(long)
private static native int android.hardware.SystemSensorManager$BaseEventQueue.nativeDisableSensor(long,int)
private static native int android.hardware.SystemSensorManager$BaseEventQueue.nativeEnableSensor(long,int,int,int)
private static native int android.hardware.SystemSensorManager$BaseEventQueue.nativeFlushSensor(long)
private static native long android.hardware.SystemSensorManager$BaseEventQueue.nativeInitBaseEventQueue(long,java.lang.ref.WeakReference,android.os.MessageQueue,java.lang.String,int,java.lang.String)
private static native int android.hardware.SystemSensorManager$BaseEventQueue.nativeInjectSensorData(long,int,float[],int,long)
public boolean android.hardware.SystemSensorManager$BaseEventQueue.addSensor(android.hardware.Sensor,int,int)
protected abstract void android.hardware.SystemSensorManager$BaseEventQueue.addSensorEvent(android.hardware.Sensor)
protected void android.hardware.SystemSensorManager$BaseEventQueue.dispatchAdditionalInfoEvent(int,int,int,float[],int[])
protected abstract void android.hardware.SystemSensorManager$BaseEventQueue.dispatchFlushCompleteEvent(int)
protected abstract void android.hardware.SystemSensorManager$BaseEventQueue.dispatchSensorEvent(int,float[],int,long)
public void android.hardware.SystemSensorManager$BaseEventQueue.dispose()
protected void android.hardware.SystemSensorManager$BaseEventQueue.finalize() throws java.lang.Throwable
public int android.hardware.SystemSensorManager$BaseEventQueue.flush()
public boolean android.hardware.SystemSensorManager$BaseEventQueue.hasSensors()
protected int android.hardware.SystemSensorManager$BaseEventQueue.injectSensorDataBase(int,float[],int,long)
public boolean android.hardware.SystemSensorManager$BaseEventQueue.removeAllSensors()
public boolean android.hardware.SystemSensorManager$BaseEventQueue.removeSensor(android.hardware.Sensor,boolean)
protected abstract void android.hardware.SystemSensorManager$BaseEventQueue.removeSensorEvent(android.hardware.Sensor)
Tracing android.hardware.SystemSensorManager$BaseEventQueue(android.os.Looper,android.hardware.SystemSensorManager,int,java.lang.String)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.provider.Settings$System$9[39;49;00m
[31;01mTracing Method : android.provider.Settings$System$9.validate [1 overload(s)][39;49;00m
[31;01mTracing Method : android.provider.Settings$System$9.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public boolean android.provider.Settings$System$9.validate(java.lang.String)
Tracing android.provider.Settings$System$9()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.FocusFinder$UserSpecifiedFocusComparator[39;49;00m
[31;01mTracing Method : android.view.FocusFinder$UserSpecifiedFocusComparator.setHeadOfChain [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.FocusFinder$UserSpecifiedFocusComparator.compare [2 overload(s)][39;49;00m
[31;01mTracing Method : android.view.FocusFinder$UserSpecifiedFocusComparator.recycle [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.FocusFinder$UserSpecifiedFocusComparator.setFocusables [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.FocusFinder$UserSpecifiedFocusComparator.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
private void android.view.FocusFinder$UserSpecifiedFocusComparator.setHeadOfChain(android.view.View)
public int android.view.FocusFinder$UserSpecifiedFocusComparator.compare(android.view.View,android.view.View)
public int android.view.FocusFinder$UserSpecifiedFocusComparator.compare(java.lang.Object,java.lang.Object)
public void android.view.FocusFinder$UserSpecifiedFocusComparator.recycle()
public void android.view.FocusFinder$UserSpecifiedFocusComparator.setFocusables(java.util.List,android.view.View)
Tracing android.view.FocusFinder$UserSpecifiedFocusComparator(android.view.FocusFinder$UserSpecifiedFocusComparator$NextFocusGetter)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.animation.StateListAnimator$1[39;49;00m
[31;01mTracing Method : android.animation.StateListAnimator$1.onAnimationEnd [1 overload(s)][39;49;00m
[31;01mTracing Method : android.animation.StateListAnimator$1.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public void android.animation.StateListAnimator$1.onAnimationEnd(android.animation.Animator)
Tracing android.animation.StateListAnimator$1(android.animation.StateListAnimator)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.os.ICancellationSignal$Stub$Proxy[39;49;00m
[31;01mTracing Method : android.os.ICancellationSignal$Stub$Proxy.asBinder [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ICancellationSignal$Stub$Proxy.cancel [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ICancellationSignal$Stub$Proxy.getInterfaceDescriptor [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ICancellationSignal$Stub$Proxy.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public android.os.IBinder android.os.ICancellationSignal$Stub$Proxy.asBinder()
public void android.os.ICancellationSignal$Stub$Proxy.cancel() throws android.os.RemoteException
public java.lang.String android.os.ICancellationSignal$Stub$Proxy.getInterfaceDescriptor()
Tracing android.os.ICancellationSignal$Stub$Proxy(android.os.IBinder)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.transition.TransitionInflater[39;49;00m
[31;01mTracing Method : android.transition.TransitionInflater.createCustom [1 overload(s)][39;49;00m
[31;01mTracing Method : android.transition.TransitionInflater.createTransitionFromXml [1 overload(s)][39;49;00m
[31;01mTracing Method : android.transition.TransitionInflater.createTransitionManagerFromXml [1 overload(s)][39;49;00m
[31;01mTracing Method : android.transition.TransitionInflater.from [1 overload(s)][39;49;00m
[31;01mTracing Method : android.transition.TransitionInflater.getTargetIds [1 overload(s)][39;49;00m
[31;01mTracing Method : android.transition.TransitionInflater.loadTransition [1 overload(s)][39;49;00m
[31;01mTracing Method : android.transition.TransitionInflater.inflateTransition [1 overload(s)][39;49;00m
[31;01mTracing Method : android.transition.TransitionInflater.inflateTransitionManager [1 overload(s)][39;49;00m
[31;01mTracing Method : android.transition.TransitionInflater.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
private java.lang.Object android.transition.TransitionInflater.createCustom(android.util.AttributeSet,java.lang.Class,java.lang.String)
private android.transition.Transition android.transition.TransitionInflater.createTransitionFromXml(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.transition.Transition) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
private android.transition.TransitionManager android.transition.TransitionInflater.createTransitionManagerFromXml(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.ViewGroup) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public static android.transition.TransitionInflater android.transition.TransitionInflater.from(android.content.Context)
private void android.transition.TransitionInflater.getTargetIds(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.transition.Transition) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
private void android.transition.TransitionInflater.loadTransition(android.util.AttributeSet,android.view.ViewGroup,android.transition.TransitionManager) throws android.content.res.Resources$NotFoundException
public android.transition.Transition android.transition.TransitionInflater.inflateTransition(int)
public android.transition.TransitionManager android.transition.TransitionInflater.inflateTransitionManager(int,android.view.ViewGroup)
Tracing private android.transition.TransitionInflater(android.content.Context)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter[39;49;00m
[31;01mTracing Method : android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter.$init [2 overload(s)][39;49;00m
[32;01m	Spec: => 
Tracing private android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter()
Tracing android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter(android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.content.ContextWrapper[39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.attachBaseContext [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.bindService [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.bindServiceAsUser [2 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.canLoadUnsafeResources [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.canStartActivityForResult [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.checkCallingOrSelfPermission [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.checkCallingOrSelfUriPermission [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.checkCallingPermission [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.checkCallingUriPermission [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.checkPermission [2 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.checkSelfPermission [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.checkUriPermission [3 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.clearWallpaper [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.createApplicationContext [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.createConfigurationContext [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.createContextForSplit [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.createCredentialProtectedStorageContext [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.createDeviceProtectedStorageContext [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.createDisplayContext [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.createPackageContext [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.createPackageContextAsUser [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.databaseList [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.deleteDatabase [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.deleteFile [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.deleteSharedPreferences [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.enforceCallingOrSelfPermission [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.enforceCallingOrSelfUriPermission [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.enforceCallingPermission [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.enforceCallingUriPermission [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.enforcePermission [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.enforceUriPermission [2 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.fileList [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getActivityToken [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getApplicationContext [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getApplicationInfo [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getAssets [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getAutofillClient [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getBaseContext [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getBasePackageName [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getCacheDir [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getClassLoader [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getCodeCacheDir [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getContentResolver [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getDataDir [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getDatabasePath [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getDir [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getDisplay [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getDisplayAdjustments [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getExternalCacheDir [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getExternalCacheDirs [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getExternalFilesDir [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getExternalFilesDirs [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getExternalMediaDirs [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getFileStreamPath [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getFilesDir [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getIApplicationThread [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getMainLooper [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getMainThreadHandler [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getNextAutofillId [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getNoBackupFilesDir [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getObbDir [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getObbDirs [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getOpPackageName [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getPackageCodePath [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getPackageManager [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getPackageName [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getPackageResourcePath [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getPreloadsFileCache [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getResources [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getServiceDispatcher [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getSharedPreferences [2 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getSharedPreferencesPath [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getSystemService [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getSystemServiceName [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getTheme [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getThemeResId [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getUserId [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getWallpaper [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getWallpaperDesiredMinimumHeight [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.getWallpaperDesiredMinimumWidth [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.grantUriPermission [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.isCredentialProtectedStorage [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.isDeviceProtectedStorage [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.isRestricted [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.moveDatabaseFrom [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.moveSharedPreferencesFrom [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.openFileInput [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.openFileOutput [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.openOrCreateDatabase [2 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.peekWallpaper [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.registerReceiver [4 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.registerReceiverAsUser [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.reloadSharedPreferences [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.removeStickyBroadcast [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.removeStickyBroadcastAsUser [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.revokeUriPermission [2 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.sendBroadcast [4 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.sendBroadcastAsUser [4 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.sendBroadcastMultiplePermissions [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.sendOrderedBroadcast [4 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.sendOrderedBroadcastAsUser [3 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.sendStickyBroadcast [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.sendStickyBroadcastAsUser [2 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.sendStickyOrderedBroadcast [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.sendStickyOrderedBroadcastAsUser [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.setAutofillClient [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.setTheme [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.setWallpaper [2 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.startActivities [2 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.startActivitiesAsUser [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.startActivity [2 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.startActivityAsUser [2 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.startActivityForResult [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.startForegroundService [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.startForegroundServiceAsUser [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.startInstrumentation [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.startIntentSender [2 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.startService [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.startServiceAsUser [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.stopService [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.stopServiceAsUser [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.unbindService [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.unregisterReceiver [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.updateDisplay [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.ContextWrapper.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
protected void android.content.ContextWrapper.attachBaseContext(android.content.Context)
public boolean android.content.ContextWrapper.bindService(android.content.Intent,android.content.ServiceConnection,int)
public boolean android.content.ContextWrapper.bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.Handler,android.os.UserHandle)
public boolean android.content.ContextWrapper.bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)
public boolean android.content.ContextWrapper.canLoadUnsafeResources()
public boolean android.content.ContextWrapper.canStartActivityForResult()
public int android.content.ContextWrapper.checkCallingOrSelfPermission(java.lang.String)
public int android.content.ContextWrapper.checkCallingOrSelfUriPermission(android.net.Uri,int)
public int android.content.ContextWrapper.checkCallingPermission(java.lang.String)
public int android.content.ContextWrapper.checkCallingUriPermission(android.net.Uri,int)
public int android.content.ContextWrapper.checkPermission(java.lang.String,int,int)
public int android.content.ContextWrapper.checkPermission(java.lang.String,int,int,android.os.IBinder)
public int android.content.ContextWrapper.checkSelfPermission(java.lang.String)
public int android.content.ContextWrapper.checkUriPermission(android.net.Uri,int,int,int)
public int android.content.ContextWrapper.checkUriPermission(android.net.Uri,int,int,int,android.os.IBinder)
public int android.content.ContextWrapper.checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)
public void android.content.ContextWrapper.clearWallpaper() throws java.io.IOException
public android.content.Context android.content.ContextWrapper.createApplicationContext(android.content.pm.ApplicationInfo,int) throws android.content.pm.PackageManager$NameNotFoundException
public android.content.Context android.content.ContextWrapper.createConfigurationContext(android.content.res.Configuration)
public android.content.Context android.content.ContextWrapper.createContextForSplit(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
public android.content.Context android.content.ContextWrapper.createCredentialProtectedStorageContext()
public android.content.Context android.content.ContextWrapper.createDeviceProtectedStorageContext()
public android.content.Context android.content.ContextWrapper.createDisplayContext(android.view.Display)
public android.content.Context android.content.ContextWrapper.createPackageContext(java.lang.String,int) throws android.content.pm.PackageManager$NameNotFoundException
public android.content.Context android.content.ContextWrapper.createPackageContextAsUser(java.lang.String,int,android.os.UserHandle) throws android.content.pm.PackageManager$NameNotFoundException
public java.lang.String[] android.content.ContextWrapper.databaseList()
public boolean android.content.ContextWrapper.deleteDatabase(java.lang.String)
public boolean android.content.ContextWrapper.deleteFile(java.lang.String)
public boolean android.content.ContextWrapper.deleteSharedPreferences(java.lang.String)
public void android.content.ContextWrapper.enforceCallingOrSelfPermission(java.lang.String,java.lang.String)
public void android.content.ContextWrapper.enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String)
public void android.content.ContextWrapper.enforceCallingPermission(java.lang.String,java.lang.String)
public void android.content.ContextWrapper.enforceCallingUriPermission(android.net.Uri,int,java.lang.String)
public void android.content.ContextWrapper.enforcePermission(java.lang.String,int,int,java.lang.String)
public void android.content.ContextWrapper.enforceUriPermission(android.net.Uri,int,int,int,java.lang.String)
public void android.content.ContextWrapper.enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String)
public java.lang.String[] android.content.ContextWrapper.fileList()
public android.os.IBinder android.content.ContextWrapper.getActivityToken()
public android.content.Context android.content.ContextWrapper.getApplicationContext()
public android.content.pm.ApplicationInfo android.content.ContextWrapper.getApplicationInfo()
public android.content.res.AssetManager android.content.ContextWrapper.getAssets()
public android.view.autofill.AutofillManager$AutofillClient android.content.ContextWrapper.getAutofillClient()
public android.content.Context android.content.ContextWrapper.getBaseContext()
public java.lang.String android.content.ContextWrapper.getBasePackageName()
public java.io.File android.content.ContextWrapper.getCacheDir()
public java.lang.ClassLoader android.content.ContextWrapper.getClassLoader()
public java.io.File android.content.ContextWrapper.getCodeCacheDir()
public android.content.ContentResolver android.content.ContextWrapper.getContentResolver()
public java.io.File android.content.ContextWrapper.getDataDir()
public java.io.File android.content.ContextWrapper.getDatabasePath(java.lang.String)
public java.io.File android.content.ContextWrapper.getDir(java.lang.String,int)
public android.view.Display android.content.ContextWrapper.getDisplay()
public android.view.DisplayAdjustments android.content.ContextWrapper.getDisplayAdjustments(int)
public java.io.File android.content.ContextWrapper.getExternalCacheDir()
public java.io.File[] android.content.ContextWrapper.getExternalCacheDirs()
public java.io.File android.content.ContextWrapper.getExternalFilesDir(java.lang.String)
public java.io.File[] android.content.ContextWrapper.getExternalFilesDirs(java.lang.String)
public java.io.File[] android.content.ContextWrapper.getExternalMediaDirs()
public java.io.File android.content.ContextWrapper.getFileStreamPath(java.lang.String)
public java.io.File android.content.ContextWrapper.getFilesDir()
public android.app.IApplicationThread android.content.ContextWrapper.getIApplicationThread()
public android.os.Looper android.content.ContextWrapper.getMainLooper()
public android.os.Handler android.content.ContextWrapper.getMainThreadHandler()
public int android.content.ContextWrapper.getNextAutofillId()
public java.io.File android.content.ContextWrapper.getNoBackupFilesDir()
public java.io.File android.content.ContextWrapper.getObbDir()
public java.io.File[] android.content.ContextWrapper.getObbDirs()
public java.lang.String android.content.ContextWrapper.getOpPackageName()
public java.lang.String android.content.ContextWrapper.getPackageCodePath()
public android.content.pm.PackageManager android.content.ContextWrapper.getPackageManager()
public java.lang.String android.content.ContextWrapper.getPackageName()
public java.lang.String android.content.ContextWrapper.getPackageResourcePath()
public java.io.File android.content.ContextWrapper.getPreloadsFileCache()
public android.content.res.Resources android.content.ContextWrapper.getResources()
public android.app.IServiceConnection android.content.ContextWrapper.getServiceDispatcher(android.content.ServiceConnection,android.os.Handler,int)
public android.content.SharedPreferences android.content.ContextWrapper.getSharedPreferences(java.io.File,int)
public android.content.SharedPreferences android.content.ContextWrapper.getSharedPreferences(java.lang.String,int)
public java.io.File android.content.ContextWrapper.getSharedPreferencesPath(java.lang.String)
public java.lang.Object android.content.ContextWrapper.getSystemService(java.lang.String)
public java.lang.String android.content.ContextWrapper.getSystemServiceName(java.lang.Class)
public android.content.res.Resources$Theme android.content.ContextWrapper.getTheme()
public int android.content.ContextWrapper.getThemeResId()
public int android.content.ContextWrapper.getUserId()
public android.graphics.drawable.Drawable android.content.ContextWrapper.getWallpaper()
public int android.content.ContextWrapper.getWallpaperDesiredMinimumHeight()
public int android.content.ContextWrapper.getWallpaperDesiredMinimumWidth()
public void android.content.ContextWrapper.grantUriPermission(java.lang.String,android.net.Uri,int)
public boolean android.content.ContextWrapper.isCredentialProtectedStorage()
public boolean android.content.ContextWrapper.isDeviceProtectedStorage()
public boolean android.content.ContextWrapper.isRestricted()
public boolean android.content.ContextWrapper.moveDatabaseFrom(android.content.Context,java.lang.String)
public boolean android.content.ContextWrapper.moveSharedPreferencesFrom(android.content.Context,java.lang.String)
public java.io.FileInputStream android.content.ContextWrapper.openFileInput(java.lang.String) throws java.io.FileNotFoundException
public java.io.FileOutputStream android.content.ContextWrapper.openFileOutput(java.lang.String,int) throws java.io.FileNotFoundException
public android.database.sqlite.SQLiteDatabase android.content.ContextWrapper.openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory)
public android.database.sqlite.SQLiteDatabase android.content.ContextWrapper.openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory,android.database.DatabaseErrorHandler)
public android.graphics.drawable.Drawable android.content.ContextWrapper.peekWallpaper()
public android.content.Intent android.content.ContextWrapper.registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)
public android.content.Intent android.content.ContextWrapper.registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,int)
public android.content.Intent android.content.ContextWrapper.registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)
public android.content.Intent android.content.ContextWrapper.registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
public android.content.Intent android.content.ContextWrapper.registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)
public void android.content.ContextWrapper.reloadSharedPreferences()
public void android.content.ContextWrapper.removeStickyBroadcast(android.content.Intent)
public void android.content.ContextWrapper.removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)
public void android.content.ContextWrapper.revokeUriPermission(android.net.Uri,int)
public void android.content.ContextWrapper.revokeUriPermission(java.lang.String,android.net.Uri,int)
public void android.content.ContextWrapper.sendBroadcast(android.content.Intent)
public void android.content.ContextWrapper.sendBroadcast(android.content.Intent,java.lang.String)
public void android.content.ContextWrapper.sendBroadcast(android.content.Intent,java.lang.String,int)
public void android.content.ContextWrapper.sendBroadcast(android.content.Intent,java.lang.String,android.os.Bundle)
public void android.content.ContextWrapper.sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)
public void android.content.ContextWrapper.sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)
public void android.content.ContextWrapper.sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int)
public void android.content.ContextWrapper.sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.os.Bundle)
public void android.content.ContextWrapper.sendBroadcastMultiplePermissions(android.content.Intent,java.lang.String[])
public void android.content.ContextWrapper.sendOrderedBroadcast(android.content.Intent,java.lang.String)
public void android.content.ContextWrapper.sendOrderedBroadcast(android.content.Intent,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)
public void android.content.ContextWrapper.sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)
public void android.content.ContextWrapper.sendOrderedBroadcast(android.content.Intent,java.lang.String,android.os.Bundle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)
public void android.content.ContextWrapper.sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)
public void android.content.ContextWrapper.sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int,android.os.Bundle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)
public void android.content.ContextWrapper.sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)
public void android.content.ContextWrapper.sendStickyBroadcast(android.content.Intent)
public void android.content.ContextWrapper.sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)
public void android.content.ContextWrapper.sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.os.Bundle)
public void android.content.ContextWrapper.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)
public void android.content.ContextWrapper.sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)
public void android.content.ContextWrapper.setAutofillClient(android.view.autofill.AutofillManager$AutofillClient)
public void android.content.ContextWrapper.setTheme(int)
public void android.content.ContextWrapper.setWallpaper(android.graphics.Bitmap) throws java.io.IOException
public void android.content.ContextWrapper.setWallpaper(java.io.InputStream) throws java.io.IOException
public void android.content.ContextWrapper.startActivities(android.content.Intent[])
public void android.content.ContextWrapper.startActivities(android.content.Intent[],android.os.Bundle)
public void android.content.ContextWrapper.startActivitiesAsUser(android.content.Intent[],android.os.Bundle,android.os.UserHandle)
public void android.content.ContextWrapper.startActivity(android.content.Intent)
public void android.content.ContextWrapper.startActivity(android.content.Intent,android.os.Bundle)
public void android.content.ContextWrapper.startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle)
public void android.content.ContextWrapper.startActivityAsUser(android.content.Intent,android.os.UserHandle)
public void android.content.ContextWrapper.startActivityForResult(java.lang.String,android.content.Intent,int,android.os.Bundle)
public android.content.ComponentName android.content.ContextWrapper.startForegroundService(android.content.Intent)
public android.content.ComponentName android.content.ContextWrapper.startForegroundServiceAsUser(android.content.Intent,android.os.UserHandle)
public boolean android.content.ContextWrapper.startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)
public void android.content.ContextWrapper.startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int) throws android.content.IntentSender$SendIntentException
public void android.content.ContextWrapper.startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle) throws android.content.IntentSender$SendIntentException
public android.content.ComponentName android.content.ContextWrapper.startService(android.content.Intent)
public android.content.ComponentName android.content.ContextWrapper.startServiceAsUser(android.content.Intent,android.os.UserHandle)
public boolean android.content.ContextWrapper.stopService(android.content.Intent)
public boolean android.content.ContextWrapper.stopServiceAsUser(android.content.Intent,android.os.UserHandle)
public void android.content.ContextWrapper.unbindService(android.content.ServiceConnection)
public void android.content.ContextWrapper.unregisterReceiver(android.content.BroadcastReceiver)
public void android.content.ContextWrapper.updateDisplay(int)
Tracing public android.content.ContextWrapper(android.content.Context)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.LayoutInflater$Factory[39;49;00m
[31;01mTracing Method : android.view.LayoutInflater$Factory.onCreateView [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract android.view.View android.view.LayoutInflater$Factory.onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.app.IUiModeManager$Stub$Proxy[39;49;00m
[31;01mTracing Method : android.app.IUiModeManager$Stub$Proxy.asBinder [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.IUiModeManager$Stub$Proxy.disableCarMode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.IUiModeManager$Stub$Proxy.enableCarMode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.IUiModeManager$Stub$Proxy.getCurrentModeType [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.IUiModeManager$Stub$Proxy.getInterfaceDescriptor [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.IUiModeManager$Stub$Proxy.getNightMode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.IUiModeManager$Stub$Proxy.isNightModeLocked [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.IUiModeManager$Stub$Proxy.isUiModeLocked [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.IUiModeManager$Stub$Proxy.setNightMode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.IUiModeManager$Stub$Proxy.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public android.os.IBinder android.app.IUiModeManager$Stub$Proxy.asBinder()
public void android.app.IUiModeManager$Stub$Proxy.disableCarMode(int) throws android.os.RemoteException
public void android.app.IUiModeManager$Stub$Proxy.enableCarMode(int) throws android.os.RemoteException
public int android.app.IUiModeManager$Stub$Proxy.getCurrentModeType() throws android.os.RemoteException
public java.lang.String android.app.IUiModeManager$Stub$Proxy.getInterfaceDescriptor()
public int android.app.IUiModeManager$Stub$Proxy.getNightMode() throws android.os.RemoteException
public boolean android.app.IUiModeManager$Stub$Proxy.isNightModeLocked() throws android.os.RemoteException
public boolean android.app.IUiModeManager$Stub$Proxy.isUiModeLocked() throws android.os.RemoteException
public void android.app.IUiModeManager$Stub$Proxy.setNightMode(int) throws android.os.RemoteException
Tracing android.app.IUiModeManager$Stub$Proxy(android.os.IBinder)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.app.ActivityThread$ProviderClientRecord[39;49;00m
[31;01mTracing Method : android.app.ActivityThread$ProviderClientRecord.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
Tracing android.app.ActivityThread$ProviderClientRecord(android.app.ActivityThread,java.lang.String[],android.content.IContentProvider,android.content.ContentProvider,android.app.ContentProviderHolder)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.InputQueue$FinishedInputEventCallback[39;49;00m
[31;01mTracing Method : android.view.InputQueue$FinishedInputEventCallback.onFinishedInputEvent [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void android.view.InputQueue$FinishedInputEventCallback.onFinishedInputEvent(java.lang.Object,boolean)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.database.AbstractWindowedCursor[39;49;00m
[31;01mTracing Method : android.database.AbstractWindowedCursor.checkPosition [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.AbstractWindowedCursor.clearOrCreateWindow [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.AbstractWindowedCursor.closeWindow [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.AbstractWindowedCursor.copyStringToBuffer [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.AbstractWindowedCursor.getBlob [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.AbstractWindowedCursor.getDouble [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.AbstractWindowedCursor.getFloat [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.AbstractWindowedCursor.getInt [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.AbstractWindowedCursor.getLong [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.AbstractWindowedCursor.getShort [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.AbstractWindowedCursor.getString [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.AbstractWindowedCursor.getType [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.AbstractWindowedCursor.getWindow [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.AbstractWindowedCursor.hasWindow [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.AbstractWindowedCursor.isBlob [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.AbstractWindowedCursor.isFloat [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.AbstractWindowedCursor.isLong [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.AbstractWindowedCursor.isNull [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.AbstractWindowedCursor.isString [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.AbstractWindowedCursor.onDeactivateOrClose [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.AbstractWindowedCursor.setWindow [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.AbstractWindowedCursor.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
protected void android.database.AbstractWindowedCursor.checkPosition()
protected void android.database.AbstractWindowedCursor.clearOrCreateWindow(java.lang.String)
protected void android.database.AbstractWindowedCursor.closeWindow()
public void android.database.AbstractWindowedCursor.copyStringToBuffer(int,android.database.CharArrayBuffer)
public byte[] android.database.AbstractWindowedCursor.getBlob(int)
public double android.database.AbstractWindowedCursor.getDouble(int)
public float android.database.AbstractWindowedCursor.getFloat(int)
public int android.database.AbstractWindowedCursor.getInt(int)
public long android.database.AbstractWindowedCursor.getLong(int)
public short android.database.AbstractWindowedCursor.getShort(int)
public java.lang.String android.database.AbstractWindowedCursor.getString(int)
public int android.database.AbstractWindowedCursor.getType(int)
public android.database.CursorWindow android.database.AbstractWindowedCursor.getWindow()
public boolean android.database.AbstractWindowedCursor.hasWindow()
public boolean android.database.AbstractWindowedCursor.isBlob(int)
public boolean android.database.AbstractWindowedCursor.isFloat(int)
public boolean android.database.AbstractWindowedCursor.isLong(int)
public boolean android.database.AbstractWindowedCursor.isNull(int)
public boolean android.database.AbstractWindowedCursor.isString(int)
protected void android.database.AbstractWindowedCursor.onDeactivateOrClose()
public void android.database.AbstractWindowedCursor.setWindow(android.database.CursorWindow)
Tracing public android.database.AbstractWindowedCursor()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.graphics.drawable.VectorDrawable$VFullPath$10[39;49;00m
[31;01mTracing Method : android.graphics.drawable.VectorDrawable$VFullPath$10.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
Tracing android.graphics.drawable.VectorDrawable$VFullPath$10()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.mtp.MtpStorage[39;49;00m
[31;01mTracing Method : android.mtp.MtpStorage.getDescription [1 overload(s)][39;49;00m
[31;01mTracing Method : android.mtp.MtpStorage.getMaxFileSize [1 overload(s)][39;49;00m
[31;01mTracing Method : android.mtp.MtpStorage.getPath [1 overload(s)][39;49;00m
[31;01mTracing Method : android.mtp.MtpStorage.getReserveSpace [1 overload(s)][39;49;00m
[31;01mTracing Method : android.mtp.MtpStorage.getStorageId [1 overload(s)][39;49;00m
[31;01mTracing Method : android.mtp.MtpStorage.isRemovable [1 overload(s)][39;49;00m
[31;01mTracing Method : android.mtp.MtpStorage.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public final java.lang.String android.mtp.MtpStorage.getDescription()
public long android.mtp.MtpStorage.getMaxFileSize()
public final java.lang.String android.mtp.MtpStorage.getPath()
public final long android.mtp.MtpStorage.getReserveSpace()
public final int android.mtp.MtpStorage.getStorageId()
public final boolean android.mtp.MtpStorage.isRemovable()
Tracing public android.mtp.MtpStorage(android.os.storage.StorageVolume,android.content.Context)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.text.DynamicLayout[39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.-wrap0 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.addBlockAtOffset [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.contentMayProtrudeFromLineTopOrBottom [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.createBlocks [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.getContentMayProtrudeFromTopOrBottom [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.reflow [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.updateAlwaysNeedsToBeRedrawn [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.getBlockEndLines [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.getBlockIndex [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.getBlockIndices [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.getBlocksAlwaysNeedToBeRedrawn [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.getBottomPadding [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.getEllipsisCount [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.getEllipsisStart [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.getEllipsizedWidth [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.getHyphen [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.getIndexFirstChangedBlock [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.getLineContainsTab [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.getLineCount [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.getLineDescent [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.getLineDirections [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.getLineStart [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.getLineTop [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.getNumberOfBlocks [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.getParagraphDirection [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.getTopPadding [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.setBlockIndex [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.setBlocksDataForTest [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.setIndexFirstChangedBlock [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.updateBlocks [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.DynamicLayout.$init [4 overload(s)][39;49;00m
[32;01m	Spec: => 
static void android.text.DynamicLayout.-wrap0(android.text.DynamicLayout,java.lang.CharSequence,int,int,int)
private void android.text.DynamicLayout.addBlockAtOffset(int)
private boolean android.text.DynamicLayout.contentMayProtrudeFromLineTopOrBottom(java.lang.CharSequence,int,int)
private void android.text.DynamicLayout.createBlocks()
private boolean android.text.DynamicLayout.getContentMayProtrudeFromTopOrBottom(int)
private void android.text.DynamicLayout.reflow(java.lang.CharSequence,int,int,int)
private void android.text.DynamicLayout.updateAlwaysNeedsToBeRedrawn(int)
public int[] android.text.DynamicLayout.getBlockEndLines()
public int android.text.DynamicLayout.getBlockIndex(int)
public int[] android.text.DynamicLayout.getBlockIndices()
public android.util.ArraySet android.text.DynamicLayout.getBlocksAlwaysNeedToBeRedrawn()
public int android.text.DynamicLayout.getBottomPadding()
public int android.text.DynamicLayout.getEllipsisCount(int)
public int android.text.DynamicLayout.getEllipsisStart(int)
public int android.text.DynamicLayout.getEllipsizedWidth()
public int android.text.DynamicLayout.getHyphen(int)
public int android.text.DynamicLayout.getIndexFirstChangedBlock()
public boolean android.text.DynamicLayout.getLineContainsTab(int)
public int android.text.DynamicLayout.getLineCount()
public int android.text.DynamicLayout.getLineDescent(int)
public final android.text.Layout$Directions android.text.DynamicLayout.getLineDirections(int)
public int android.text.DynamicLayout.getLineStart(int)
public int android.text.DynamicLayout.getLineTop(int)
public int android.text.DynamicLayout.getNumberOfBlocks()
public int android.text.DynamicLayout.getParagraphDirection(int)
public int android.text.DynamicLayout.getTopPadding()
public void android.text.DynamicLayout.setBlockIndex(int,int)
public void android.text.DynamicLayout.setBlocksDataForTest(int[],int[],int,int)
public void android.text.DynamicLayout.setIndexFirstChangedBlock(int)
public void android.text.DynamicLayout.updateBlocks(int,int,int)
Tracing public android.text.DynamicLayout(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)
Tracing public android.text.DynamicLayout(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)
Tracing public android.text.DynamicLayout(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,android.text.TextUtils$TruncateAt,int)
Tracing public android.text.DynamicLayout(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,int,int,int,android.text.TextUtils$TruncateAt,int)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => com.android.internal.view.IInputContext$Stub[39;49;00m
[31;01mTracing Method : com.android.internal.view.IInputContext$Stub.asInterface [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.view.IInputContext$Stub.asBinder [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.view.IInputContext$Stub.onTransact [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.view.IInputContext$Stub.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public static com.android.internal.view.IInputContext com.android.internal.view.IInputContext$Stub.asInterface(android.os.IBinder)
public android.os.IBinder com.android.internal.view.IInputContext$Stub.asBinder()
public boolean com.android.internal.view.IInputContext$Stub.onTransact(int,android.os.Parcel,android.os.Parcel,int) throws android.os.RemoteException
Tracing public com.android.internal.view.IInputContext$Stub()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.animation.Interpolator[39;49;00m
[32;01m	Spec: => 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.accessibility.AccessibilityManager$MyCallback[39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager$MyCallback.handleMessage [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager$MyCallback.$init [2 overload(s)][39;49;00m
[32;01m	Spec: => 
public boolean android.view.accessibility.AccessibilityManager$MyCallback.handleMessage(android.os.Message)
Tracing private android.view.accessibility.AccessibilityManager$MyCallback(android.view.accessibility.AccessibilityManager)
Tracing android.view.accessibility.AccessibilityManager$MyCallback(android.view.accessibility.AccessibilityManager,android.view.accessibility.AccessibilityManager$MyCallback)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.accessibility.AccessibilityNodeProvider[39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityNodeProvider.addExtraDataToAccessibilityNodeInfo [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityNodeProvider.createAccessibilityNodeInfo [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityNodeProvider.findAccessibilityNodeInfosByText [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityNodeProvider.findFocus [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityNodeProvider.performAction [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityNodeProvider.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public void android.view.accessibility.AccessibilityNodeProvider.addExtraDataToAccessibilityNodeInfo(int,android.view.accessibility.AccessibilityNodeInfo,java.lang.String,android.os.Bundle)
public android.view.accessibility.AccessibilityNodeInfo android.view.accessibility.AccessibilityNodeProvider.createAccessibilityNodeInfo(int)
public java.util.List android.view.accessibility.AccessibilityNodeProvider.findAccessibilityNodeInfosByText(java.lang.String,int)
public android.view.accessibility.AccessibilityNodeInfo android.view.accessibility.AccessibilityNodeProvider.findFocus(int)
public boolean android.view.accessibility.AccessibilityNodeProvider.performAction(int,int,android.os.Bundle)
Tracing public android.view.accessibility.AccessibilityNodeProvider()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.media.MediaDrmException[39;49;00m
[31;01mTracing Method : android.media.MediaDrmException.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
Tracing public android.media.MediaDrmException(java.lang.String)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.ViewRootImpl$4[39;49;00m
[31;01mTracing Method : android.view.ViewRootImpl$4.run [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.ViewRootImpl$4.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public void android.view.ViewRootImpl$4.run()
Tracing android.view.ViewRootImpl$4(android.view.ViewRootImpl)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.os.UserHandle$1[39;49;00m
[31;01mTracing Method : android.os.UserHandle$1.createFromParcel [2 overload(s)][39;49;00m
[31;01mTracing Method : android.os.UserHandle$1.newArray [2 overload(s)][39;49;00m
[31;01mTracing Method : android.os.UserHandle$1.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public android.os.UserHandle android.os.UserHandle$1.createFromParcel(android.os.Parcel)
public java.lang.Object android.os.UserHandle$1.createFromParcel(android.os.Parcel)
public android.os.UserHandle[] android.os.UserHandle$1.newArray(int)
public java.lang.Object[] android.os.UserHandle$1.newArray(int)
Tracing android.os.UserHandle$1()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.os.BatteryStats$Uid$Proc[39;49;00m
[31;01mTracing Method : android.os.BatteryStats$Uid$Proc.countExcessivePowers [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.BatteryStats$Uid$Proc.getExcessivePower [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.BatteryStats$Uid$Proc.getForegroundTime [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.BatteryStats$Uid$Proc.getNumAnrs [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.BatteryStats$Uid$Proc.getNumCrashes [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.BatteryStats$Uid$Proc.getStarts [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.BatteryStats$Uid$Proc.getSystemTime [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.BatteryStats$Uid$Proc.getUserTime [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.BatteryStats$Uid$Proc.isActive [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.BatteryStats$Uid$Proc.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract int android.os.BatteryStats$Uid$Proc.countExcessivePowers()
public abstract android.os.BatteryStats$Uid$Proc$ExcessivePower android.os.BatteryStats$Uid$Proc.getExcessivePower(int)
public abstract long android.os.BatteryStats$Uid$Proc.getForegroundTime(int)
public abstract int android.os.BatteryStats$Uid$Proc.getNumAnrs(int)
public abstract int android.os.BatteryStats$Uid$Proc.getNumCrashes(int)
public abstract int android.os.BatteryStats$Uid$Proc.getStarts(int)
public abstract long android.os.BatteryStats$Uid$Proc.getSystemTime(int)
public abstract long android.os.BatteryStats$Uid$Proc.getUserTime(int)
public abstract boolean android.os.BatteryStats$Uid$Proc.isActive()
Tracing public android.os.BatteryStats$Uid$Proc()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.content.pm.ProviderInfo$1[39;49;00m
[31;01mTracing Method : android.content.pm.ProviderInfo$1.createFromParcel [2 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ProviderInfo$1.newArray [2 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ProviderInfo$1.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public android.content.pm.ProviderInfo android.content.pm.ProviderInfo$1.createFromParcel(android.os.Parcel)
public java.lang.Object android.content.pm.ProviderInfo$1.createFromParcel(android.os.Parcel)
public android.content.pm.ProviderInfo[] android.content.pm.ProviderInfo$1.newArray(int)
public java.lang.Object[] android.content.pm.ProviderInfo$1.newArray(int)
Tracing android.content.pm.ProviderInfo$1()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => com.android.internal.policy.PhoneWindow$1[39;49;00m
[31;01mTracing Method : com.android.internal.policy.PhoneWindow$1.run [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.policy.PhoneWindow$1.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public void com.android.internal.policy.PhoneWindow$1.run()
Tracing com.android.internal.policy.PhoneWindow$1(com.android.internal.policy.PhoneWindow)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.widget.CompoundButton$OnCheckedChangeListener[39;49;00m
[31;01mTracing Method : android.widget.CompoundButton$OnCheckedChangeListener.onCheckedChanged [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void android.widget.CompoundButton$OnCheckedChangeListener.onCheckedChanged(android.widget.CompoundButton,boolean)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.os.RecoverySystem[39;49;00m
[31;01mTracing Method : android.os.RecoverySystem.bootCommand [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.RecoverySystem.cancelScheduledUpdate [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.RecoverySystem.clearBcb [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.RecoverySystem.getTrustedCerts [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.RecoverySystem.handleAftermath [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.RecoverySystem.installPackage [2 overload(s)][39;49;00m
[31;01mTracing Method : android.os.RecoverySystem.parseLastInstallLog [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.RecoverySystem.processPackage [2 overload(s)][39;49;00m
[31;01mTracing Method : android.os.RecoverySystem.readAndVerifyPackageCompatibilityEntry [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.RecoverySystem.rebootPromptAndWipeUserData [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.RecoverySystem.rebootRecoveryWithCommand [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.RecoverySystem.rebootWipeAb [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.RecoverySystem.rebootWipeCache [2 overload(s)][39;49;00m
[31;01mTracing Method : android.os.RecoverySystem.rebootWipeUserData [5 overload(s)][39;49;00m
[31;01mTracing Method : android.os.RecoverySystem.recursiveDelete [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.RecoverySystem.sanitizeArg [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.RecoverySystem.scheduleUpdateOnBoot [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.RecoverySystem.setupBcb [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.RecoverySystem.uncrypt [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.RecoverySystem.verifyPackage [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.RecoverySystem.verifyPackageCompatibility [2 overload(s)][39;49;00m
[31;01mTracing Method : android.os.RecoverySystem.wipeEuiccData [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.RecoverySystem.$init [2 overload(s)][39;49;00m
[32;01m	Spec: => 
private static void android.os.RecoverySystem.bootCommand(android.content.Context,java.lang.String[]) throws java.io.IOException
public static void android.os.RecoverySystem.cancelScheduledUpdate(android.content.Context) throws java.io.IOException
private boolean android.os.RecoverySystem.clearBcb()
private static java.util.HashSet android.os.RecoverySystem.getTrustedCerts(java.io.File) throws java.io.IOException,java.security.GeneralSecurityException
public static java.lang.String android.os.RecoverySystem.handleAftermath(android.content.Context)
public static void android.os.RecoverySystem.installPackage(android.content.Context,java.io.File) throws java.io.IOException
public static void android.os.RecoverySystem.installPackage(android.content.Context,java.io.File,boolean) throws java.io.IOException
private static void android.os.RecoverySystem.parseLastInstallLog(android.content.Context)
public static void android.os.RecoverySystem.processPackage(android.content.Context,java.io.File,android.os.RecoverySystem$ProgressListener) throws java.io.IOException
public static void android.os.RecoverySystem.processPackage(android.content.Context,java.io.File,android.os.RecoverySystem$ProgressListener,android.os.Handler) throws java.io.IOException
private static boolean android.os.RecoverySystem.readAndVerifyPackageCompatibilityEntry(java.io.File) throws java.io.IOException
public static void android.os.RecoverySystem.rebootPromptAndWipeUserData(android.content.Context,java.lang.String) throws java.io.IOException
private void android.os.RecoverySystem.rebootRecoveryWithCommand(java.lang.String)
public static void android.os.RecoverySystem.rebootWipeAb(android.content.Context,java.io.File,java.lang.String) throws java.io.IOException
public static void android.os.RecoverySystem.rebootWipeCache(android.content.Context) throws java.io.IOException
public static void android.os.RecoverySystem.rebootWipeCache(android.content.Context,java.lang.String) throws java.io.IOException
public static void android.os.RecoverySystem.rebootWipeUserData(android.content.Context) throws java.io.IOException
public static void android.os.RecoverySystem.rebootWipeUserData(android.content.Context,java.lang.String) throws java.io.IOException
public static void android.os.RecoverySystem.rebootWipeUserData(android.content.Context,boolean) throws java.io.IOException
public static void android.os.RecoverySystem.rebootWipeUserData(android.content.Context,boolean,java.lang.String,boolean) throws java.io.IOException
public static void android.os.RecoverySystem.rebootWipeUserData(android.content.Context,boolean,java.lang.String,boolean,boolean) throws java.io.IOException
private static void android.os.RecoverySystem.recursiveDelete(java.io.File)
private static java.lang.String android.os.RecoverySystem.sanitizeArg(java.lang.String)
public static void android.os.RecoverySystem.scheduleUpdateOnBoot(android.content.Context,java.io.File) throws java.io.IOException
private boolean android.os.RecoverySystem.setupBcb(java.lang.String)
private boolean android.os.RecoverySystem.uncrypt(java.lang.String,android.os.IRecoverySystemProgressListener)
public static void android.os.RecoverySystem.verifyPackage(java.io.File,android.os.RecoverySystem$ProgressListener,java.io.File) throws java.io.IOException,java.security.GeneralSecurityException
public static boolean android.os.RecoverySystem.verifyPackageCompatibility(java.io.File) throws java.io.IOException
private static boolean android.os.RecoverySystem.verifyPackageCompatibility(java.io.InputStream) throws java.io.IOException
private static void android.os.RecoverySystem.wipeEuiccData(android.content.Context,boolean)
Tracing public android.os.RecoverySystem()
Tracing public android.os.RecoverySystem(android.os.IRecoverySystem)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel$1[39;49;00m
[31;01mTracing Method : android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel$1.createFromParcel [2 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel$1.newArray [2 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel$1.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel$1.createFromParcel(android.os.Parcel)
public java.lang.Object android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel$1.createFromParcel(android.os.Parcel)
public android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel[] android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel$1.newArray(int)
public java.lang.Object[] android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel$1.newArray(int)
Tracing android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel$1()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.app.SystemServiceRegistry$CachedServiceFetcher[39;49;00m
[31;01mTracing Method : android.app.SystemServiceRegistry$CachedServiceFetcher.createService [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.SystemServiceRegistry$CachedServiceFetcher.getService [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.SystemServiceRegistry$CachedServiceFetcher.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract java.lang.Object android.app.SystemServiceRegistry$CachedServiceFetcher.createService(android.app.ContextImpl) throws android.os.ServiceManager$ServiceNotFoundException
public final java.lang.Object android.app.SystemServiceRegistry$CachedServiceFetcher.getService(android.app.ContextImpl)
Tracing public android.app.SystemServiceRegistry$CachedServiceFetcher()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.animation.DecelerateInterpolator[39;49;00m
[31;01mTracing Method : android.view.animation.DecelerateInterpolator.createNativeInterpolator [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.animation.DecelerateInterpolator.getInterpolation [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.animation.DecelerateInterpolator.$init [4 overload(s)][39;49;00m
[32;01m	Spec: => 
public long android.view.animation.DecelerateInterpolator.createNativeInterpolator()
public float android.view.animation.DecelerateInterpolator.getInterpolation(float)
Tracing public android.view.animation.DecelerateInterpolator()
Tracing public android.view.animation.DecelerateInterpolator(float)
Tracing public android.view.animation.DecelerateInterpolator(android.content.Context,android.util.AttributeSet)
Tracing public android.view.animation.DecelerateInterpolator(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.animation.PathKeyframes$FloatKeyframesBase[39;49;00m
[31;01mTracing Method : android.animation.PathKeyframes$FloatKeyframesBase.getType [1 overload(s)][39;49;00m
[31;01mTracing Method : android.animation.PathKeyframes$FloatKeyframesBase.getValue [1 overload(s)][39;49;00m
[31;01mTracing Method : android.animation.PathKeyframes$FloatKeyframesBase.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public java.lang.Class android.animation.PathKeyframes$FloatKeyframesBase.getType()
public java.lang.Object android.animation.PathKeyframes$FloatKeyframesBase.getValue(float)
Tracing android.animation.PathKeyframes$FloatKeyframesBase()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.accessibility.AccessibilityNodeInfo$1[39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityNodeInfo$1.createFromParcel [2 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityNodeInfo$1.newArray [2 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityNodeInfo$1.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public android.view.accessibility.AccessibilityNodeInfo android.view.accessibility.AccessibilityNodeInfo$1.createFromParcel(android.os.Parcel)
public java.lang.Object android.view.accessibility.AccessibilityNodeInfo$1.createFromParcel(android.os.Parcel)
public android.view.accessibility.AccessibilityNodeInfo[] android.view.accessibility.AccessibilityNodeInfo$1.newArray(int)
public java.lang.Object[] android.view.accessibility.AccessibilityNodeInfo$1.newArray(int)
Tracing android.view.accessibility.AccessibilityNodeInfo$1()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.app.LoadedApk$ServiceDispatcher$DeathMonitor[39;49;00m
[31;01mTracing Method : android.app.LoadedApk$ServiceDispatcher$DeathMonitor.binderDied [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.LoadedApk$ServiceDispatcher$DeathMonitor.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public void android.app.LoadedApk$ServiceDispatcher$DeathMonitor.binderDied()
Tracing android.app.LoadedApk$ServiceDispatcher$DeathMonitor(android.app.LoadedApk$ServiceDispatcher,android.content.ComponentName,android.os.IBinder)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.os.HwBlob[39;49;00m
[31;01mTracing Method : android.os.HwBlob.native_init [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.HwBlob.native_setup [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.HwBlob.wrapArray [7 overload(s)][39;49;00m
[31;01mTracing Method : android.os.HwBlob.getBool [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.HwBlob.getDouble [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.HwBlob.getFloat [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.HwBlob.getInt16 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.HwBlob.getInt32 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.HwBlob.getInt64 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.HwBlob.getInt8 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.HwBlob.getString [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.HwBlob.handle [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.HwBlob.putBlob [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.HwBlob.putBool [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.HwBlob.putDouble [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.HwBlob.putFloat [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.HwBlob.putInt16 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.HwBlob.putInt32 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.HwBlob.putInt64 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.HwBlob.putInt8 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.HwBlob.putString [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.HwBlob.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
private static final native long android.os.HwBlob.native_init()
private final native void android.os.HwBlob.native_setup(int)
public static java.lang.Boolean[] android.os.HwBlob.wrapArray(boolean[])
public static java.lang.Byte[] android.os.HwBlob.wrapArray(byte[])
public static java.lang.Double[] android.os.HwBlob.wrapArray(double[])
public static java.lang.Float[] android.os.HwBlob.wrapArray(float[])
public static java.lang.Integer[] android.os.HwBlob.wrapArray(int[])
public static java.lang.Long[] android.os.HwBlob.wrapArray(long[])
public static java.lang.Short[] android.os.HwBlob.wrapArray(short[])
public final native boolean android.os.HwBlob.getBool(long)
public final native double android.os.HwBlob.getDouble(long)
public final native float android.os.HwBlob.getFloat(long)
public final native short android.os.HwBlob.getInt16(long)
public final native int android.os.HwBlob.getInt32(long)
public final native long android.os.HwBlob.getInt64(long)
public final native byte android.os.HwBlob.getInt8(long)
public final native java.lang.String android.os.HwBlob.getString(long)
public final native long android.os.HwBlob.handle()
public final native void android.os.HwBlob.putBlob(long,android.os.HwBlob)
public final native void android.os.HwBlob.putBool(long,boolean)
public final native void android.os.HwBlob.putDouble(long,double)
public final native void android.os.HwBlob.putFloat(long,float)
public final native void android.os.HwBlob.putInt16(long,short)
public final native void android.os.HwBlob.putInt32(long,int)
public final native void android.os.HwBlob.putInt64(long,long)
public final native void android.os.HwBlob.putInt8(long,byte)
public final native void android.os.HwBlob.putString(long,java.lang.String)
Tracing public android.os.HwBlob(int)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.accounts.AccountManager$11[39;49;00m
[31;01mTracing Method : android.accounts.AccountManager$11.doWork [1 overload(s)][39;49;00m
[31;01mTracing Method : android.accounts.AccountManager$11.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public void android.accounts.AccountManager$11.doWork() throws android.os.RemoteException
Tracing android.accounts.AccountManager$11(android.accounts.AccountManager,android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.graphics.drawable.DrawableInflater[39;49;00m
[31;01mTracing Method : android.graphics.drawable.DrawableInflater.inflateFromClass [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.DrawableInflater.inflateFromTag [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.DrawableInflater.loadDrawable [2 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.DrawableInflater.inflateFromXml [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.DrawableInflater.inflateFromXmlForDensity [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.DrawableInflater.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
private android.graphics.drawable.Drawable android.graphics.drawable.DrawableInflater.inflateFromClass(java.lang.String)
private android.graphics.drawable.Drawable android.graphics.drawable.DrawableInflater.inflateFromTag(java.lang.String)
public static android.graphics.drawable.Drawable android.graphics.drawable.DrawableInflater.loadDrawable(android.content.Context,int)
public static android.graphics.drawable.Drawable android.graphics.drawable.DrawableInflater.loadDrawable(android.content.res.Resources,android.content.res.Resources$Theme,int)
public android.graphics.drawable.Drawable android.graphics.drawable.DrawableInflater.inflateFromXml(java.lang.String,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
android.graphics.drawable.Drawable android.graphics.drawable.DrawableInflater.inflateFromXmlForDensity(java.lang.String,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,int,android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
Tracing public android.graphics.drawable.DrawableInflater(android.content.res.Resources,java.lang.ClassLoader)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.hardware.input.InputManager$InputDeviceListener[39;49;00m
[31;01mTracing Method : android.hardware.input.InputManager$InputDeviceListener.onInputDeviceAdded [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.InputManager$InputDeviceListener.onInputDeviceChanged [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.input.InputManager$InputDeviceListener.onInputDeviceRemoved [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void android.hardware.input.InputManager$InputDeviceListener.onInputDeviceAdded(int)
public abstract void android.hardware.input.InputManager$InputDeviceListener.onInputDeviceChanged(int)
public abstract void android.hardware.input.InputManager$InputDeviceListener.onInputDeviceRemoved(int)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.widget.RemoteViews$OnClickHandler[39;49;00m
[31;01mTracing Method : android.widget.RemoteViews$OnClickHandler.onClickHandler [2 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.RemoteViews$OnClickHandler.setEnterAnimationId [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.RemoteViews$OnClickHandler.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public boolean android.widget.RemoteViews$OnClickHandler.onClickHandler(android.view.View,android.app.PendingIntent,android.content.Intent)
public boolean android.widget.RemoteViews$OnClickHandler.onClickHandler(android.view.View,android.app.PendingIntent,android.content.Intent,int)
public void android.widget.RemoteViews$OnClickHandler.setEnterAnimationId(int)
Tracing public android.widget.RemoteViews$OnClickHandler()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.location.LocationRequest$1[39;49;00m
[31;01mTracing Method : android.location.LocationRequest$1.createFromParcel [2 overload(s)][39;49;00m
[31;01mTracing Method : android.location.LocationRequest$1.newArray [2 overload(s)][39;49;00m
[31;01mTracing Method : android.location.LocationRequest$1.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public android.location.LocationRequest android.location.LocationRequest$1.createFromParcel(android.os.Parcel)
public java.lang.Object android.location.LocationRequest$1.createFromParcel(android.os.Parcel)
public android.location.LocationRequest[] android.location.LocationRequest$1.newArray(int)
public java.lang.Object[] android.location.LocationRequest$1.newArray(int)
Tracing android.location.LocationRequest$1()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => com.android.internal.appwidget.IAppWidgetService$Stub[39;49;00m
[31;01mTracing Method : com.android.internal.appwidget.IAppWidgetService$Stub.asInterface [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.appwidget.IAppWidgetService$Stub.asBinder [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.appwidget.IAppWidgetService$Stub.onTransact [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.appwidget.IAppWidgetService$Stub.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public static com.android.internal.appwidget.IAppWidgetService com.android.internal.appwidget.IAppWidgetService$Stub.asInterface(android.os.IBinder)
public android.os.IBinder com.android.internal.appwidget.IAppWidgetService$Stub.asBinder()
public boolean com.android.internal.appwidget.IAppWidgetService$Stub.onTransact(int,android.os.Parcel,android.os.Parcel,int) throws android.os.RemoteException
Tracing public com.android.internal.appwidget.IAppWidgetService$Stub()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.widget.TextView$Drawables[39;49;00m
[31;01mTracing Method : android.widget.TextView$Drawables.applyErrorDrawableIfNeeded [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.TextView$Drawables.hasMetadata [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.TextView$Drawables.resolveWithLayoutDirection [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.TextView$Drawables.setErrorDrawable [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.TextView$Drawables.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
private void android.widget.TextView$Drawables.applyErrorDrawableIfNeeded(int)
public boolean android.widget.TextView$Drawables.hasMetadata()
public boolean android.widget.TextView$Drawables.resolveWithLayoutDirection(int)
public void android.widget.TextView$Drawables.setErrorDrawable(android.graphics.drawable.Drawable,android.widget.TextView)
Tracing public android.widget.TextView$Drawables(android.content.Context)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.os.StatFs[39;49;00m
[31;01mTracing Method : android.os.StatFs.doStat [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.StatFs.getAvailableBlocks [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.StatFs.getAvailableBlocksLong [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.StatFs.getAvailableBytes [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.StatFs.getBlockCount [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.StatFs.getBlockCountLong [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.StatFs.getBlockSize [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.StatFs.getBlockSizeLong [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.StatFs.getFreeBlocks [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.StatFs.getFreeBlocksLong [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.StatFs.getFreeBytes [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.StatFs.getTotalBytes [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.StatFs.restat [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.StatFs.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
private static android.system.StructStatVfs android.os.StatFs.doStat(java.lang.String)
public int android.os.StatFs.getAvailableBlocks()
public long android.os.StatFs.getAvailableBlocksLong()
public long android.os.StatFs.getAvailableBytes()
public int android.os.StatFs.getBlockCount()
public long android.os.StatFs.getBlockCountLong()
public int android.os.StatFs.getBlockSize()
public long android.os.StatFs.getBlockSizeLong()
public int android.os.StatFs.getFreeBlocks()
public long android.os.StatFs.getFreeBlocksLong()
public long android.os.StatFs.getFreeBytes()
public long android.os.StatFs.getTotalBytes()
public void android.os.StatFs.restat(java.lang.String)
Tracing public android.os.StatFs(java.lang.String)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.LayoutInflater[39;49;00m
[31;01mTracing Method : android.view.LayoutInflater.consumeChildElements [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.LayoutInflater.createViewFromTag [2 overload(s)][39;49;00m
[31;01mTracing Method : android.view.LayoutInflater.failNotAllowed [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.LayoutInflater.from [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.LayoutInflater.parseInclude [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.LayoutInflater.parseViewTag [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.LayoutInflater.verifyClassLoader [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.LayoutInflater.cloneInContext [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.LayoutInflater.createView [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.LayoutInflater.getContext [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.LayoutInflater.getFactory [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.LayoutInflater.getFactory2 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.LayoutInflater.getFilter [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.LayoutInflater.inflate [4 overload(s)][39;49;00m
[31;01mTracing Method : android.view.LayoutInflater.onCreateView [2 overload(s)][39;49;00m
[31;01mTracing Method : android.view.LayoutInflater.rInflate [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.LayoutInflater.rInflateChildren [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.LayoutInflater.setFactory [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.LayoutInflater.setFactory2 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.LayoutInflater.setFilter [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.LayoutInflater.setPrivateFactory [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.LayoutInflater.$init [2 overload(s)][39;49;00m
[32;01m	Spec: => 
static final void android.view.LayoutInflater.consumeChildElements(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
private android.view.View android.view.LayoutInflater.createViewFromTag(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
private void android.view.LayoutInflater.failNotAllowed(java.lang.String,java.lang.String,android.util.AttributeSet)
public static android.view.LayoutInflater android.view.LayoutInflater.from(android.content.Context)
private void android.view.LayoutInflater.parseInclude(org.xmlpull.v1.XmlPullParser,android.content.Context,android.view.View,android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
private void android.view.LayoutInflater.parseViewTag(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
private final boolean android.view.LayoutInflater.verifyClassLoader(java.lang.reflect.Constructor)
public abstract android.view.LayoutInflater android.view.LayoutInflater.cloneInContext(android.content.Context)
public final android.view.View android.view.LayoutInflater.createView(java.lang.String,java.lang.String,android.util.AttributeSet) throws java.lang.ClassNotFoundException,android.view.InflateException
android.view.View android.view.LayoutInflater.createViewFromTag(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean)
public android.content.Context android.view.LayoutInflater.getContext()
public final android.view.LayoutInflater$Factory android.view.LayoutInflater.getFactory()
public final android.view.LayoutInflater$Factory2 android.view.LayoutInflater.getFactory2()
public android.view.LayoutInflater$Filter android.view.LayoutInflater.getFilter()
public android.view.View android.view.LayoutInflater.inflate(int,android.view.ViewGroup)
public android.view.View android.view.LayoutInflater.inflate(int,android.view.ViewGroup,boolean)
public android.view.View android.view.LayoutInflater.inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup)
public android.view.View android.view.LayoutInflater.inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean)
protected android.view.View android.view.LayoutInflater.onCreateView(android.view.View,java.lang.String,android.util.AttributeSet) throws java.lang.ClassNotFoundException
protected android.view.View android.view.LayoutInflater.onCreateView(java.lang.String,android.util.AttributeSet) throws java.lang.ClassNotFoundException
void android.view.LayoutInflater.rInflate(org.xmlpull.v1.XmlPullParser,android.view.View,android.content.Context,android.util.AttributeSet,boolean) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
final void android.view.LayoutInflater.rInflateChildren(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet,boolean) throws org.xmlpull.v1.XmlPullParserException,java.io.IOException
public void android.view.LayoutInflater.setFactory(android.view.LayoutInflater$Factory)
public void android.view.LayoutInflater.setFactory2(android.view.LayoutInflater$Factory2)
public void android.view.LayoutInflater.setFilter(android.view.LayoutInflater$Filter)
public void android.view.LayoutInflater.setPrivateFactory(android.view.LayoutInflater$Factory2)
Tracing protected android.view.LayoutInflater(android.content.Context)
Tracing protected android.view.LayoutInflater(android.view.LayoutInflater,android.content.Context)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.hardware.camera2.impl.CameraMetadataNative$10[39;49;00m
[31;01mTracing Method : android.hardware.camera2.impl.CameraMetadataNative$10.getValue [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.impl.CameraMetadataNative$10.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public java.lang.Object android.hardware.camera2.impl.CameraMetadataNative$10.getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)
Tracing android.hardware.camera2.impl.CameraMetadataNative$10()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.ViewTreeObserver$OnScrollChangedListener[39;49;00m
[31;01mTracing Method : android.view.ViewTreeObserver$OnScrollChangedListener.onScrollChanged [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void android.view.ViewTreeObserver$OnScrollChangedListener.onScrollChanged()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.View$AttachInfo[39;49;00m
[31;01mTracing Method : android.view.View$AttachInfo.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
Tracing android.view.View$AttachInfo(android.view.IWindowSession,android.view.IWindow,android.view.Display,android.view.ViewRootImpl,android.os.Handler,android.view.View$AttachInfo$Callbacks,android.content.Context)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.os.MessageQueue[39;49;00m
[31;01mTracing Method : android.os.MessageQueue.dispatchEvents [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.dispose [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.isPollingLocked [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.nativeDestroy [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.nativeInit [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.nativeIsPolling [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.nativePollOnce [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.nativeSetFileDescriptorEvents [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.nativeWake [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.postSyncBarrier [2 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.removeAllFutureMessagesLocked [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.removeAllMessagesLocked [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.updateOnFileDescriptorEventListenerLocked [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.addIdleHandler [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.addOnFileDescriptorEventListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.dump [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.enqueueMessage [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.finalize [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.hasMessages [3 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.isIdle [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.isPolling [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.next [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.quit [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.removeCallbacksAndMessages [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.removeIdleHandler [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.removeMessages [2 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.removeOnFileDescriptorEventListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.removeSyncBarrier [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.writeToProto [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.MessageQueue.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
private int android.os.MessageQueue.dispatchEvents(int,int)
private void android.os.MessageQueue.dispose()
private boolean android.os.MessageQueue.isPollingLocked()
private static native void android.os.MessageQueue.nativeDestroy(long)
private static native long android.os.MessageQueue.nativeInit()
private static native boolean android.os.MessageQueue.nativeIsPolling(long)
private native void android.os.MessageQueue.nativePollOnce(long,int)
private static native void android.os.MessageQueue.nativeSetFileDescriptorEvents(long,int,int)
private static native void android.os.MessageQueue.nativeWake(long)
private int android.os.MessageQueue.postSyncBarrier(long)
private void android.os.MessageQueue.removeAllFutureMessagesLocked()
private void android.os.MessageQueue.removeAllMessagesLocked()
private void android.os.MessageQueue.updateOnFileDescriptorEventListenerLocked(java.io.FileDescriptor,int,android.os.MessageQueue$OnFileDescriptorEventListener)
public void android.os.MessageQueue.addIdleHandler(android.os.MessageQueue$IdleHandler)
public void android.os.MessageQueue.addOnFileDescriptorEventListener(java.io.FileDescriptor,int,android.os.MessageQueue$OnFileDescriptorEventListener)
void android.os.MessageQueue.dump(android.util.Printer,java.lang.String,android.os.Handler)
boolean android.os.MessageQueue.enqueueMessage(android.os.Message,long)
protected void android.os.MessageQueue.finalize() throws java.lang.Throwable
boolean android.os.MessageQueue.hasMessages(android.os.Handler)
boolean android.os.MessageQueue.hasMessages(android.os.Handler,int,java.lang.Object)
boolean android.os.MessageQueue.hasMessages(android.os.Handler,java.lang.Runnable,java.lang.Object)
public boolean android.os.MessageQueue.isIdle()
public boolean android.os.MessageQueue.isPolling()
android.os.Message android.os.MessageQueue.next()
public int android.os.MessageQueue.postSyncBarrier()
void android.os.MessageQueue.quit(boolean)
void android.os.MessageQueue.removeCallbacksAndMessages(android.os.Handler,java.lang.Object)
public void android.os.MessageQueue.removeIdleHandler(android.os.MessageQueue$IdleHandler)
void android.os.MessageQueue.removeMessages(android.os.Handler,int,java.lang.Object)
void android.os.MessageQueue.removeMessages(android.os.Handler,java.lang.Runnable,java.lang.Object)
public void android.os.MessageQueue.removeOnFileDescriptorEventListener(java.io.FileDescriptor)
public void android.os.MessageQueue.removeSyncBarrier(int)
void android.os.MessageQueue.writeToProto(android.util.proto.ProtoOutputStream,long)
Tracing android.os.MessageQueue(boolean)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.util.TimingsTraceLog[39;49;00m
[31;01mTracing Method : android.util.TimingsTraceLog.logDuration [1 overload(s)][39;49;00m
[31;01mTracing Method : android.util.TimingsTraceLog.traceBegin [1 overload(s)][39;49;00m
[31;01mTracing Method : android.util.TimingsTraceLog.traceEnd [1 overload(s)][39;49;00m
[31;01mTracing Method : android.util.TimingsTraceLog.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public void android.util.TimingsTraceLog.logDuration(java.lang.String,long)
public void android.util.TimingsTraceLog.traceBegin(java.lang.String)
public void android.util.TimingsTraceLog.traceEnd()
Tracing public android.util.TimingsTraceLog(java.lang.String,long)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.PointerIcon$1[39;49;00m
[31;01mTracing Method : android.view.PointerIcon$1.createFromParcel [2 overload(s)][39;49;00m
[31;01mTracing Method : android.view.PointerIcon$1.newArray [2 overload(s)][39;49;00m
[31;01mTracing Method : android.view.PointerIcon$1.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public android.view.PointerIcon android.view.PointerIcon$1.createFromParcel(android.os.Parcel)
public java.lang.Object android.view.PointerIcon$1.createFromParcel(android.os.Parcel)
public android.view.PointerIcon[] android.view.PointerIcon$1.newArray(int)
public java.lang.Object[] android.view.PointerIcon$1.newArray(int)
Tracing android.view.PointerIcon$1()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.graphics.drawable.DrawableWrapper$DrawableWrapperState[39;49;00m
[31;01mTracing Method : android.graphics.drawable.DrawableWrapper$DrawableWrapperState.-get0 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.DrawableWrapper$DrawableWrapperState.-set0 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.DrawableWrapper$DrawableWrapperState.canApplyTheme [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.DrawableWrapper$DrawableWrapperState.canConstantState [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.DrawableWrapper$DrawableWrapperState.getChangingConfigurations [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.DrawableWrapper$DrawableWrapperState.newDrawable [2 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.DrawableWrapper$DrawableWrapperState.onDensityChanged [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.DrawableWrapper$DrawableWrapperState.setDensity [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.DrawableWrapper$DrawableWrapperState.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
static int[] android.graphics.drawable.DrawableWrapper$DrawableWrapperState.-get0(android.graphics.drawable.DrawableWrapper$DrawableWrapperState)
static int[] android.graphics.drawable.DrawableWrapper$DrawableWrapperState.-set0(android.graphics.drawable.DrawableWrapper$DrawableWrapperState,int[])
public boolean android.graphics.drawable.DrawableWrapper$DrawableWrapperState.canApplyTheme()
public boolean android.graphics.drawable.DrawableWrapper$DrawableWrapperState.canConstantState()
public int android.graphics.drawable.DrawableWrapper$DrawableWrapperState.getChangingConfigurations()
public android.graphics.drawable.Drawable android.graphics.drawable.DrawableWrapper$DrawableWrapperState.newDrawable()
public abstract android.graphics.drawable.Drawable android.graphics.drawable.DrawableWrapper$DrawableWrapperState.newDrawable(android.content.res.Resources)
void android.graphics.drawable.DrawableWrapper$DrawableWrapperState.onDensityChanged(int,int)
public final void android.graphics.drawable.DrawableWrapper$DrawableWrapperState.setDensity(int)
Tracing android.graphics.drawable.DrawableWrapper$DrawableWrapperState(android.graphics.drawable.DrawableWrapper$DrawableWrapperState,android.content.res.Resources)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.content.pm.ApplicationInfo[39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.getCategoryTitle [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.isPackageUnavailable [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.describeContents [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.disableCompatibilityMode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.dump [2 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.getApplicationInfo [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.getBaseCodePath [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.getBaseResourcePath [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.getCodePath [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.getResourcePath [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.getSplitCodePaths [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.getSplitResourcePaths [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.hasCode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.hasRtlSupport [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.initForUser [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.isDefaultToDeviceProtectedStorage [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.isDirectBootAware [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.isEncryptionAware [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.isExternalAsec [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.isForwardLocked [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.isInstantApp [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.isInternal [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.isPartiallyDirectBootAware [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.isPrivilegedApp [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.isRequiredForSystemUser [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.isStaticSharedLibrary [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.isSystemApp [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.isUpdatedSystemApp [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.isVirtualPreload [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.loadDefaultIcon [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.loadDescription [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.requestsIsolatedSplitLoading [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.setBaseCodePath [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.setBaseResourcePath [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.setCodePath [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.setResourcePath [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.setSplitCodePaths [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.setSplitResourcePaths [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.toString [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.usesCompatibilityMode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.writeToParcel [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.ApplicationInfo.$init [4 overload(s)][39;49;00m
[32;01m	Spec: => 
public static java.lang.CharSequence android.content.pm.ApplicationInfo.getCategoryTitle(android.content.Context,int)
private boolean android.content.pm.ApplicationInfo.isPackageUnavailable(android.content.pm.PackageManager)
public int android.content.pm.ApplicationInfo.describeContents()
public void android.content.pm.ApplicationInfo.disableCompatibilityMode()
public void android.content.pm.ApplicationInfo.dump(android.util.Printer,java.lang.String)
public void android.content.pm.ApplicationInfo.dump(android.util.Printer,java.lang.String,int)
protected android.content.pm.ApplicationInfo android.content.pm.ApplicationInfo.getApplicationInfo()
public java.lang.String android.content.pm.ApplicationInfo.getBaseCodePath()
public java.lang.String android.content.pm.ApplicationInfo.getBaseResourcePath()
public java.lang.String android.content.pm.ApplicationInfo.getCodePath()
public java.lang.String android.content.pm.ApplicationInfo.getResourcePath()
public java.lang.String[] android.content.pm.ApplicationInfo.getSplitCodePaths()
public java.lang.String[] android.content.pm.ApplicationInfo.getSplitResourcePaths()
public boolean android.content.pm.ApplicationInfo.hasCode()
public boolean android.content.pm.ApplicationInfo.hasRtlSupport()
public void android.content.pm.ApplicationInfo.initForUser(int)
public boolean android.content.pm.ApplicationInfo.isDefaultToDeviceProtectedStorage()
public boolean android.content.pm.ApplicationInfo.isDirectBootAware()
public boolean android.content.pm.ApplicationInfo.isEncryptionAware()
public boolean android.content.pm.ApplicationInfo.isExternalAsec()
public boolean android.content.pm.ApplicationInfo.isForwardLocked()
public boolean android.content.pm.ApplicationInfo.isInstantApp()
public boolean android.content.pm.ApplicationInfo.isInternal()
public boolean android.content.pm.ApplicationInfo.isPartiallyDirectBootAware()
public boolean android.content.pm.ApplicationInfo.isPrivilegedApp()
public boolean android.content.pm.ApplicationInfo.isRequiredForSystemUser()
public boolean android.content.pm.ApplicationInfo.isStaticSharedLibrary()
public boolean android.content.pm.ApplicationInfo.isSystemApp()
public boolean android.content.pm.ApplicationInfo.isUpdatedSystemApp()
public boolean android.content.pm.ApplicationInfo.isVirtualPreload()
public android.graphics.drawable.Drawable android.content.pm.ApplicationInfo.loadDefaultIcon(android.content.pm.PackageManager)
public java.lang.CharSequence android.content.pm.ApplicationInfo.loadDescription(android.content.pm.PackageManager)
public boolean android.content.pm.ApplicationInfo.requestsIsolatedSplitLoading()
public void android.content.pm.ApplicationInfo.setBaseCodePath(java.lang.String)
public void android.content.pm.ApplicationInfo.setBaseResourcePath(java.lang.String)
public void android.content.pm.ApplicationInfo.setCodePath(java.lang.String)
public void android.content.pm.ApplicationInfo.setResourcePath(java.lang.String)
public void android.content.pm.ApplicationInfo.setSplitCodePaths(java.lang.String[])
public void android.content.pm.ApplicationInfo.setSplitResourcePaths(java.lang.String[])
public java.lang.String android.content.pm.ApplicationInfo.toString()
public boolean android.content.pm.ApplicationInfo.usesCompatibilityMode()
public void android.content.pm.ApplicationInfo.writeToParcel(android.os.Parcel,int)
Tracing public android.content.pm.ApplicationInfo()
Tracing public android.content.pm.ApplicationInfo(android.content.pm.ApplicationInfo)
Tracing private android.content.pm.ApplicationInfo(android.os.Parcel)
Tracing android.content.pm.ApplicationInfo(android.os.Parcel,android.content.pm.ApplicationInfo)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.media.IAudioRoutesObserver$Stub[39;49;00m
[31;01mTracing Method : android.media.IAudioRoutesObserver$Stub.asInterface [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.IAudioRoutesObserver$Stub.asBinder [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.IAudioRoutesObserver$Stub.onTransact [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.IAudioRoutesObserver$Stub.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public static android.media.IAudioRoutesObserver android.media.IAudioRoutesObserver$Stub.asInterface(android.os.IBinder)
public android.os.IBinder android.media.IAudioRoutesObserver$Stub.asBinder()
public boolean android.media.IAudioRoutesObserver$Stub.onTransact(int,android.os.Parcel,android.os.Parcel,int) throws android.os.RemoteException
Tracing public android.media.IAudioRoutesObserver$Stub()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.hardware.camera2.impl.GetCommand[39;49;00m
[31;01mTracing Method : android.hardware.camera2.impl.GetCommand.getValue [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract java.lang.Object android.hardware.camera2.impl.GetCommand.getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.hardware.camera2.impl.CameraMetadataNative$11[39;49;00m
[31;01mTracing Method : android.hardware.camera2.impl.CameraMetadataNative$11.getValue [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.impl.CameraMetadataNative$11.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public java.lang.Object android.hardware.camera2.impl.CameraMetadataNative$11.getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)
Tracing android.hardware.camera2.impl.CameraMetadataNative$11()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.net.ConnectivityManager$NetworkCallback[39;49;00m
[31;01mTracing Method : android.net.ConnectivityManager$NetworkCallback.-get0 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.ConnectivityManager$NetworkCallback.-set0 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.ConnectivityManager$NetworkCallback.onAvailable [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.ConnectivityManager$NetworkCallback.onCapabilitiesChanged [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.ConnectivityManager$NetworkCallback.onLinkPropertiesChanged [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.ConnectivityManager$NetworkCallback.onLosing [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.ConnectivityManager$NetworkCallback.onLost [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.ConnectivityManager$NetworkCallback.onNetworkResumed [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.ConnectivityManager$NetworkCallback.onNetworkSuspended [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.ConnectivityManager$NetworkCallback.onPreCheck [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.ConnectivityManager$NetworkCallback.onUnavailable [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.ConnectivityManager$NetworkCallback.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
static android.net.NetworkRequest android.net.ConnectivityManager$NetworkCallback.-get0(android.net.ConnectivityManager$NetworkCallback)
static android.net.NetworkRequest android.net.ConnectivityManager$NetworkCallback.-set0(android.net.ConnectivityManager$NetworkCallback,android.net.NetworkRequest)
public void android.net.ConnectivityManager$NetworkCallback.onAvailable(android.net.Network)
public void android.net.ConnectivityManager$NetworkCallback.onCapabilitiesChanged(android.net.Network,android.net.NetworkCapabilities)
public void android.net.ConnectivityManager$NetworkCallback.onLinkPropertiesChanged(android.net.Network,android.net.LinkProperties)
public void android.net.ConnectivityManager$NetworkCallback.onLosing(android.net.Network,int)
public void android.net.ConnectivityManager$NetworkCallback.onLost(android.net.Network)
public void android.net.ConnectivityManager$NetworkCallback.onNetworkResumed(android.net.Network)
public void android.net.ConnectivityManager$NetworkCallback.onNetworkSuspended(android.net.Network)
public void android.net.ConnectivityManager$NetworkCallback.onPreCheck(android.net.Network)
public void android.net.ConnectivityManager$NetworkCallback.onUnavailable()
Tracing public android.net.ConnectivityManager$NetworkCallback()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.ViewOutlineProvider[39;49;00m
[31;01mTracing Method : android.view.ViewOutlineProvider.getOutline [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.ViewOutlineProvider.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void android.view.ViewOutlineProvider.getOutline(android.view.View,android.graphics.Outline)
Tracing public android.view.ViewOutlineProvider()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy[39;49;00m
[31;01mTracing Method : android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy.asBinder [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy.getInterfaceDescriptor [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy.setFindAccessibilityNodeInfoResult [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy.setFindAccessibilityNodeInfosResult [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy.setPerformAccessibilityActionResult [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public android.os.IBinder android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy.asBinder()
public java.lang.String android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy.getInterfaceDescriptor()
public void android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy.setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int) throws android.os.RemoteException
public void android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy.setFindAccessibilityNodeInfosResult(java.util.List,int) throws android.os.RemoteException
public void android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy.setPerformAccessibilityActionResult(boolean,int) throws android.os.RemoteException
Tracing android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy(android.os.IBinder)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.inputmethod.EditorInfo[39;49;00m
[31;01mTracing Method : android.view.inputmethod.EditorInfo.describeContents [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.inputmethod.EditorInfo.dump [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.inputmethod.EditorInfo.makeCompatible [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.inputmethod.EditorInfo.writeToParcel [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.inputmethod.EditorInfo.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public int android.view.inputmethod.EditorInfo.describeContents()
public void android.view.inputmethod.EditorInfo.dump(android.util.Printer,java.lang.String)
public final void android.view.inputmethod.EditorInfo.makeCompatible(int)
public void android.view.inputmethod.EditorInfo.writeToParcel(android.os.Parcel,int)
Tracing public android.view.inputmethod.EditorInfo()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.app.PendingIntent$OnMarshaledListener[39;49;00m
[31;01mTracing Method : android.app.PendingIntent$OnMarshaledListener.onMarshaled [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void android.app.PendingIntent$OnMarshaledListener.onMarshaled(android.app.PendingIntent,android.os.Parcel,int)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => com.android.internal.util.FastPrintWriter[39;49;00m
[31;01mTracing Method : com.android.internal.util.FastPrintWriter.appendLocked [3 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.FastPrintWriter.flushBytesLocked [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.FastPrintWriter.flushLocked [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.FastPrintWriter.initDefaultEncoder [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.FastPrintWriter.initEncoder [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.FastPrintWriter.append [3 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.FastPrintWriter.checkError [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.FastPrintWriter.clearError [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.FastPrintWriter.close [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.FastPrintWriter.flush [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.FastPrintWriter.print [5 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.FastPrintWriter.println [5 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.FastPrintWriter.setError [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.FastPrintWriter.write [4 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.FastPrintWriter.$init [8 overload(s)][39;49;00m
[32;01m	Spec: => 
private void com.android.internal.util.FastPrintWriter.appendLocked(char) throws java.io.IOException
private void com.android.internal.util.FastPrintWriter.appendLocked(java.lang.String,int,int) throws java.io.IOException
private void com.android.internal.util.FastPrintWriter.appendLocked(char[],int,int) throws java.io.IOException
private void com.android.internal.util.FastPrintWriter.flushBytesLocked() throws java.io.IOException
private void com.android.internal.util.FastPrintWriter.flushLocked() throws java.io.IOException
private final void com.android.internal.util.FastPrintWriter.initDefaultEncoder()
private final void com.android.internal.util.FastPrintWriter.initEncoder(java.lang.String) throws java.io.UnsupportedEncodingException
public java.io.PrintWriter com.android.internal.util.FastPrintWriter.append(java.lang.CharSequence,int,int)
public java.io.Writer com.android.internal.util.FastPrintWriter.append(java.lang.CharSequence,int,int) throws java.io.IOException
public java.lang.Appendable com.android.internal.util.FastPrintWriter.append(java.lang.CharSequence,int,int) throws java.io.IOException
public boolean com.android.internal.util.FastPrintWriter.checkError()
protected void com.android.internal.util.FastPrintWriter.clearError()
public void com.android.internal.util.FastPrintWriter.close()
public void com.android.internal.util.FastPrintWriter.flush()
public void com.android.internal.util.FastPrintWriter.print(char)
public void com.android.internal.util.FastPrintWriter.print(int)
public void com.android.internal.util.FastPrintWriter.print(long)
public void com.android.internal.util.FastPrintWriter.print(java.lang.String)
public void com.android.internal.util.FastPrintWriter.print(char[])
public void com.android.internal.util.FastPrintWriter.println()
public void com.android.internal.util.FastPrintWriter.println(char)
public void com.android.internal.util.FastPrintWriter.println(int)
public void com.android.internal.util.FastPrintWriter.println(long)
public void com.android.internal.util.FastPrintWriter.println(char[])
protected void com.android.internal.util.FastPrintWriter.setError()
public void com.android.internal.util.FastPrintWriter.write(int)
public void com.android.internal.util.FastPrintWriter.write(java.lang.String)
public void com.android.internal.util.FastPrintWriter.write(java.lang.String,int,int)
public void com.android.internal.util.FastPrintWriter.write(char[],int,int)
Tracing public com.android.internal.util.FastPrintWriter(android.util.Printer)
Tracing public com.android.internal.util.FastPrintWriter(android.util.Printer,int)
Tracing public com.android.internal.util.FastPrintWriter(java.io.OutputStream)
Tracing public com.android.internal.util.FastPrintWriter(java.io.OutputStream,boolean)
Tracing public com.android.internal.util.FastPrintWriter(java.io.OutputStream,boolean,int)
Tracing public com.android.internal.util.FastPrintWriter(java.io.Writer)
Tracing public com.android.internal.util.FastPrintWriter(java.io.Writer,boolean)
Tracing public com.android.internal.util.FastPrintWriter(java.io.Writer,boolean,int)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.accessibility.AccessibilityManager$TouchExplorationStateChangeListener[39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager$TouchExplorationStateChangeListener.onTouchExplorationStateChanged [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void android.view.accessibility.AccessibilityManager$TouchExplorationStateChangeListener.onTouchExplorationStateChanged(boolean)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.ddm.DdmRegister[39;49;00m
[31;01mTracing Method : android.ddm.DdmRegister.registerHandlers [1 overload(s)][39;49;00m
[31;01mTracing Method : android.ddm.DdmRegister.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public static void android.ddm.DdmRegister.registerHandlers()
Tracing private android.ddm.DdmRegister()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.accessibility.AccessibilityManager[39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.-get0 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.-get1 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.-wrap0 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.getInstance [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.getServiceLocked [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.isAccessibilityButtonSupported [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.lambda$-android_view_accessibility_AccessibilityManager_38284 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.lambda$-android_view_accessibility_AccessibilityManager_39243 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.lambda$-android_view_accessibility_AccessibilityManager_40206 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.notifyAccessibilityStateChanged [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.notifyHighTextContrastStateChanged [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.notifyTouchExplorationStateChanged [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.setStateLocked [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.tryConnectToServiceLocked [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.addAccessibilityInteractionConnection [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.addAccessibilityRequestPreparer [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.addAccessibilityServicesStateChangeListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.addAccessibilityStateChangeListener [2 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.addHighTextContrastStateChangeListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.addTouchExplorationStateChangeListener [2 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.getAccessibilityServiceList [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.getCallback [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.getClient [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.getEnabledAccessibilityServiceList [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.getInstalledAccessibilityServiceList [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.getInstalledServiceInfoWithComponentName [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.getRequestPreparersForAccessibilityId [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.interrupt [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.isAccessibilityVolumeStreamActive [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.isEnabled [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.isHighTextContrastEnabled [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.isTouchExplorationEnabled [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.notifyAccessibilityButtonClicked [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.notifyAccessibilityButtonVisibilityChanged [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.performAccessibilityShortcut [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.removeAccessibilityInteractionConnection [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.removeAccessibilityRequestPreparer [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.removeAccessibilityServicesStateChangeListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.removeAccessibilityStateChangeListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.removeHighTextContrastStateChangeListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.removeTouchExplorationStateChangeListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.sendAccessibilityEvent [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.sendFingerprintGesture [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.setPictureInPictureActionReplacingConnection [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.accessibility.AccessibilityManager.$init [2 overload(s)][39;49;00m
[32;01m	Spec: => 
static java.lang.Object android.view.accessibility.AccessibilityManager.-get0(android.view.accessibility.AccessibilityManager)
static android.util.ArrayMap android.view.accessibility.AccessibilityManager.-get1(android.view.accessibility.AccessibilityManager)
static void android.view.accessibility.AccessibilityManager.-wrap0(android.view.accessibility.AccessibilityManager,int)
public static android.view.accessibility.AccessibilityManager android.view.accessibility.AccessibilityManager.getInstance(android.content.Context)
private android.view.accessibility.IAccessibilityManager android.view.accessibility.AccessibilityManager.getServiceLocked()
public static boolean android.view.accessibility.AccessibilityManager.isAccessibilityButtonSupported()
static void android.view.accessibility.AccessibilityManager.lambda$-android_view_accessibility_AccessibilityManager_38284(android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener,boolean)
static void android.view.accessibility.AccessibilityManager.lambda$-android_view_accessibility_AccessibilityManager_39243(android.view.accessibility.AccessibilityManager$TouchExplorationStateChangeListener,boolean)
static void android.view.accessibility.AccessibilityManager.lambda$-android_view_accessibility_AccessibilityManager_40206(android.view.accessibility.AccessibilityManager$HighTextContrastChangeListener,boolean)
private void android.view.accessibility.AccessibilityManager.notifyAccessibilityStateChanged()
private void android.view.accessibility.AccessibilityManager.notifyHighTextContrastStateChanged()
private void android.view.accessibility.AccessibilityManager.notifyTouchExplorationStateChanged()
private void android.view.accessibility.AccessibilityManager.setStateLocked(int)
private void android.view.accessibility.AccessibilityManager.tryConnectToServiceLocked(android.view.accessibility.IAccessibilityManager)
public int android.view.accessibility.AccessibilityManager.addAccessibilityInteractionConnection(android.view.IWindow,java.lang.String,android.view.accessibility.IAccessibilityInteractionConnection)
public void android.view.accessibility.AccessibilityManager.addAccessibilityRequestPreparer(android.view.accessibility.AccessibilityRequestPreparer)
public void android.view.accessibility.AccessibilityManager.addAccessibilityServicesStateChangeListener(android.view.accessibility.AccessibilityManager$AccessibilityServicesStateChangeListener,android.os.Handler)
public void android.view.accessibility.AccessibilityManager.addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener,android.os.Handler)
public boolean android.view.accessibility.AccessibilityManager.addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener)
public void android.view.accessibility.AccessibilityManager.addHighTextContrastStateChangeListener(android.view.accessibility.AccessibilityManager$HighTextContrastChangeListener,android.os.Handler)
public void android.view.accessibility.AccessibilityManager.addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager$TouchExplorationStateChangeListener,android.os.Handler)
public boolean android.view.accessibility.AccessibilityManager.addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager$TouchExplorationStateChangeListener)
public java.util.List android.view.accessibility.AccessibilityManager.getAccessibilityServiceList()
public android.os.Handler$Callback android.view.accessibility.AccessibilityManager.getCallback()
public android.view.accessibility.IAccessibilityManagerClient android.view.accessibility.AccessibilityManager.getClient()
public java.util.List android.view.accessibility.AccessibilityManager.getEnabledAccessibilityServiceList(int)
public java.util.List android.view.accessibility.AccessibilityManager.getInstalledAccessibilityServiceList()
public android.accessibilityservice.AccessibilityServiceInfo android.view.accessibility.AccessibilityManager.getInstalledServiceInfoWithComponentName(android.content.ComponentName)
public java.util.List android.view.accessibility.AccessibilityManager.getRequestPreparersForAccessibilityId(int)
public void android.view.accessibility.AccessibilityManager.interrupt()
public boolean android.view.accessibility.AccessibilityManager.isAccessibilityVolumeStreamActive()
public boolean android.view.accessibility.AccessibilityManager.isEnabled()
public boolean android.view.accessibility.AccessibilityManager.isHighTextContrastEnabled()
public boolean android.view.accessibility.AccessibilityManager.isTouchExplorationEnabled()
public void android.view.accessibility.AccessibilityManager.notifyAccessibilityButtonClicked()
public void android.view.accessibility.AccessibilityManager.notifyAccessibilityButtonVisibilityChanged(boolean)
public void android.view.accessibility.AccessibilityManager.performAccessibilityShortcut()
public void android.view.accessibility.AccessibilityManager.removeAccessibilityInteractionConnection(android.view.IWindow)
public void android.view.accessibility.AccessibilityManager.removeAccessibilityRequestPreparer(android.view.accessibility.AccessibilityRequestPreparer)
public void android.view.accessibility.AccessibilityManager.removeAccessibilityServicesStateChangeListener(android.view.accessibility.AccessibilityManager$AccessibilityServicesStateChangeListener)
public boolean android.view.accessibility.AccessibilityManager.removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener)
public void android.view.accessibility.AccessibilityManager.removeHighTextContrastStateChangeListener(android.view.accessibility.AccessibilityManager$HighTextContrastChangeListener)
public boolean android.view.accessibility.AccessibilityManager.removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager$TouchExplorationStateChangeListener)
public void android.view.accessibility.AccessibilityManager.sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
public boolean android.view.accessibility.AccessibilityManager.sendFingerprintGesture(int)
public void android.view.accessibility.AccessibilityManager.setPictureInPictureActionReplacingConnection(android.view.accessibility.IAccessibilityInteractionConnection)
Tracing public android.view.accessibility.AccessibilityManager(android.content.Context,android.view.accessibility.IAccessibilityManager,int)
Tracing public android.view.accessibility.AccessibilityManager(android.os.Handler,android.view.accessibility.IAccessibilityManager,int)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.app.ActivityOptions[39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.abort [2 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.fromBundle [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.makeAspectScaledThumbnailAnimation [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.makeBasic [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.makeClipRevealAnimation [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.makeCustomAnimation [2 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.makeCustomInPlaceAnimation [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.makeMultiThumbFutureAspectScaleAnimation [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.makeScaleUpAnimation [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.makeSceneTransitionAnimation [4 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.makeTaskLaunchBehind [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.makeThumbnailAnimation [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.makeThumbnailAspectScaleDownAnimation [2 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.makeThumbnailScaleUpAnimation [2 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.setOnAnimationFinishedListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.setOnAnimationStartedListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.startSharedElementAnimation [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.stopSharedElementAnimation [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.canTaskOverlayResume [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.disallowEnterPictureInPictureWhileLaunching [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.forTargetActivity [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getAnimSpecs [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getAnimationFinishedListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getAnimationType [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getCustomEnterResId [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getCustomExitResId [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getCustomInPlaceResId [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getDockCreateMode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getExitCoordinatorKey [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getHeight [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getLaunchBounds [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getLaunchDisplayId [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getLaunchStackId [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getLaunchTaskBehind [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getLaunchTaskId [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getOnAnimationStartListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getPackageName [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getResultCode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getResultData [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getResultReceiver [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getRotationAnimationHint [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getSharedElementNames [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getSpecsFuture [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getStartX [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getStartY [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getTaskOverlay [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getThumbnail [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getUsageTimeReport [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.getWidth [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.isCrossTask [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.isReturning [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.popAppVerificationBundle [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.requestUsageTimeReport [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.setAppVerificationBundle [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.setDisallowEnterPictureInPictureWhileLaunching [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.setDockCreateMode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.setLaunchBounds [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.setLaunchDisplayId [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.setLaunchStackId [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.setLaunchTaskId [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.setRotationAnimationHint [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.setTaskOverlay [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.toBundle [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.toString [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.update [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.ActivityOptions.$init [2 overload(s)][39;49;00m
[32;01m	Spec: => 
public static void android.app.ActivityOptions.abort(android.app.ActivityOptions)
public static android.app.ActivityOptions android.app.ActivityOptions.fromBundle(android.os.Bundle)
private static android.app.ActivityOptions android.app.ActivityOptions.makeAspectScaledThumbnailAnimation(android.view.View,android.graphics.Bitmap,int,int,int,int,android.os.Handler,android.app.ActivityOptions$OnAnimationStartedListener,boolean)
public static android.app.ActivityOptions android.app.ActivityOptions.makeBasic()
public static android.app.ActivityOptions android.app.ActivityOptions.makeClipRevealAnimation(android.view.View,int,int,int,int)
public static android.app.ActivityOptions android.app.ActivityOptions.makeCustomAnimation(android.content.Context,int,int)
public static android.app.ActivityOptions android.app.ActivityOptions.makeCustomAnimation(android.content.Context,int,int,android.os.Handler,android.app.ActivityOptions$OnAnimationStartedListener)
public static android.app.ActivityOptions android.app.ActivityOptions.makeCustomInPlaceAnimation(android.content.Context,int)
public static android.app.ActivityOptions android.app.ActivityOptions.makeMultiThumbFutureAspectScaleAnimation(android.content.Context,android.os.Handler,android.view.IAppTransitionAnimationSpecsFuture,android.app.ActivityOptions$OnAnimationStartedListener,boolean)
public static android.app.ActivityOptions android.app.ActivityOptions.makeScaleUpAnimation(android.view.View,int,int,int,int)
static android.app.ActivityOptions android.app.ActivityOptions.makeSceneTransitionAnimation(android.app.Activity,android.app.ExitTransitionCoordinator,java.util.ArrayList,int,android.content.Intent)
public static android.app.ActivityOptions android.app.ActivityOptions.makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String)
public static android.app.ActivityOptions android.app.ActivityOptions.makeSceneTransitionAnimation(android.app.Activity,android.util.Pair[])
static android.app.ExitTransitionCoordinator android.app.ActivityOptions.makeSceneTransitionAnimation(android.app.Activity,android.view.Window,android.app.ActivityOptions,android.app.SharedElementCallback,android.util.Pair[])
public static android.app.ActivityOptions android.app.ActivityOptions.makeTaskLaunchBehind()
private static android.app.ActivityOptions android.app.ActivityOptions.makeThumbnailAnimation(android.view.View,android.graphics.Bitmap,int,int,android.app.ActivityOptions$OnAnimationStartedListener,boolean)
public static android.app.ActivityOptions android.app.ActivityOptions.makeThumbnailAspectScaleDownAnimation(android.view.View,android.graphics.Bitmap,int,int,int,int,android.os.Handler,android.app.ActivityOptions$OnAnimationStartedListener)
public static android.app.ActivityOptions android.app.ActivityOptions.makeThumbnailAspectScaleDownAnimation(android.view.View,android.view.AppTransitionAnimationSpec[],android.os.Handler,android.app.ActivityOptions$OnAnimationStartedListener,android.app.ActivityOptions$OnAnimationFinishedListener)
public static android.app.ActivityOptions android.app.ActivityOptions.makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int)
private static android.app.ActivityOptions android.app.ActivityOptions.makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int,android.app.ActivityOptions$OnAnimationStartedListener)
private void android.app.ActivityOptions.setOnAnimationFinishedListener(android.os.Handler,android.app.ActivityOptions$OnAnimationFinishedListener)
private void android.app.ActivityOptions.setOnAnimationStartedListener(android.os.Handler,android.app.ActivityOptions$OnAnimationStartedListener)
public static android.app.ActivityOptions android.app.ActivityOptions.startSharedElementAnimation(android.view.Window,android.util.Pair[])
public static void android.app.ActivityOptions.stopSharedElementAnimation(android.view.Window)
public void android.app.ActivityOptions.abort()
public boolean android.app.ActivityOptions.canTaskOverlayResume()
public boolean android.app.ActivityOptions.disallowEnterPictureInPictureWhileLaunching()
public android.app.ActivityOptions android.app.ActivityOptions.forTargetActivity()
public android.view.AppTransitionAnimationSpec[] android.app.ActivityOptions.getAnimSpecs()
public android.os.IRemoteCallback android.app.ActivityOptions.getAnimationFinishedListener()
public int android.app.ActivityOptions.getAnimationType()
public int android.app.ActivityOptions.getCustomEnterResId()
public int android.app.ActivityOptions.getCustomExitResId()
public int android.app.ActivityOptions.getCustomInPlaceResId()
public int android.app.ActivityOptions.getDockCreateMode()
public int android.app.ActivityOptions.getExitCoordinatorKey()
public int android.app.ActivityOptions.getHeight()
public android.graphics.Rect android.app.ActivityOptions.getLaunchBounds()
public int android.app.ActivityOptions.getLaunchDisplayId()
public int android.app.ActivityOptions.getLaunchStackId()
public boolean android.app.ActivityOptions.getLaunchTaskBehind()
public int android.app.ActivityOptions.getLaunchTaskId()
public android.os.IRemoteCallback android.app.ActivityOptions.getOnAnimationStartListener()
public java.lang.String android.app.ActivityOptions.getPackageName()
public int android.app.ActivityOptions.getResultCode()
public android.content.Intent android.app.ActivityOptions.getResultData()
public android.os.ResultReceiver android.app.ActivityOptions.getResultReceiver()
public int android.app.ActivityOptions.getRotationAnimationHint()
public java.util.ArrayList android.app.ActivityOptions.getSharedElementNames()
public android.view.IAppTransitionAnimationSpecsFuture android.app.ActivityOptions.getSpecsFuture()
public int android.app.ActivityOptions.getStartX()
public int android.app.ActivityOptions.getStartY()
public boolean android.app.ActivityOptions.getTaskOverlay()
public android.graphics.GraphicBuffer android.app.ActivityOptions.getThumbnail()
public android.app.PendingIntent android.app.ActivityOptions.getUsageTimeReport()
public int android.app.ActivityOptions.getWidth()
boolean android.app.ActivityOptions.isCrossTask()
public boolean android.app.ActivityOptions.isReturning()
public android.os.Bundle android.app.ActivityOptions.popAppVerificationBundle()
public void android.app.ActivityOptions.requestUsageTimeReport(android.app.PendingIntent)
public android.app.ActivityOptions android.app.ActivityOptions.setAppVerificationBundle(android.os.Bundle)
public void android.app.ActivityOptions.setDisallowEnterPictureInPictureWhileLaunching(boolean)
public void android.app.ActivityOptions.setDockCreateMode(int)
public android.app.ActivityOptions android.app.ActivityOptions.setLaunchBounds(android.graphics.Rect)
public android.app.ActivityOptions android.app.ActivityOptions.setLaunchDisplayId(int)
public void android.app.ActivityOptions.setLaunchStackId(int)
public void android.app.ActivityOptions.setLaunchTaskId(int)
public void android.app.ActivityOptions.setRotationAnimationHint(int)
public void android.app.ActivityOptions.setTaskOverlay(boolean,boolean)
public android.os.Bundle android.app.ActivityOptions.toBundle()
public java.lang.String android.app.ActivityOptions.toString()
public void android.app.ActivityOptions.update(android.app.ActivityOptions)
Tracing private android.app.ActivityOptions()
Tracing public android.app.ActivityOptions(android.os.Bundle)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.graphics.Interpolator[39;49;00m
[31;01mTracing Method : android.graphics.Interpolator.nativeConstructor [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.Interpolator.nativeDestructor [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.Interpolator.nativeReset [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.Interpolator.nativeSetKeyFrame [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.Interpolator.nativeSetRepeatMirror [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.Interpolator.nativeTimeToValues [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.Interpolator.finalize [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.Interpolator.getKeyFrameCount [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.Interpolator.getValueCount [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.Interpolator.reset [2 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.Interpolator.setKeyFrame [2 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.Interpolator.setRepeatMirror [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.Interpolator.timeToValues [2 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.Interpolator.$init [2 overload(s)][39;49;00m
[32;01m	Spec: => 
private static native long android.graphics.Interpolator.nativeConstructor(int,int)
private static native void android.graphics.Interpolator.nativeDestructor(long)
private static native void android.graphics.Interpolator.nativeReset(long,int,int)
private static native void android.graphics.Interpolator.nativeSetKeyFrame(long,int,int,float[],float[])
private static native void android.graphics.Interpolator.nativeSetRepeatMirror(long,float,boolean)
private static native int android.graphics.Interpolator.nativeTimeToValues(long,int,float[])
protected void android.graphics.Interpolator.finalize() throws java.lang.Throwable
public final int android.graphics.Interpolator.getKeyFrameCount()
public final int android.graphics.Interpolator.getValueCount()
public void android.graphics.Interpolator.reset(int)
public void android.graphics.Interpolator.reset(int,int)
public void android.graphics.Interpolator.setKeyFrame(int,int,float[])
public void android.graphics.Interpolator.setKeyFrame(int,int,float[],float[])
public void android.graphics.Interpolator.setRepeatMirror(float,boolean)
public android.graphics.Interpolator$Result android.graphics.Interpolator.timeToValues(int,float[])
public android.graphics.Interpolator$Result android.graphics.Interpolator.timeToValues(float[])
Tracing public android.graphics.Interpolator(int)
Tracing public android.graphics.Interpolator(int,int)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.graphics.drawable.shapes.Shape[39;49;00m
[31;01mTracing Method : android.graphics.drawable.shapes.Shape.clone [2 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.shapes.Shape.draw [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.shapes.Shape.getHeight [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.shapes.Shape.getOutline [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.shapes.Shape.getWidth [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.shapes.Shape.hasAlpha [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.shapes.Shape.onResize [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.shapes.Shape.resize [1 overload(s)][39;49;00m
[31;01mTracing Method : android.graphics.drawable.shapes.Shape.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public android.graphics.drawable.shapes.Shape android.graphics.drawable.shapes.Shape.clone() throws java.lang.CloneNotSupportedException
public java.lang.Object android.graphics.drawable.shapes.Shape.clone() throws java.lang.CloneNotSupportedException
public abstract void android.graphics.drawable.shapes.Shape.draw(android.graphics.Canvas,android.graphics.Paint)
public final float android.graphics.drawable.shapes.Shape.getHeight()
public void android.graphics.drawable.shapes.Shape.getOutline(android.graphics.Outline)
public final float android.graphics.drawable.shapes.Shape.getWidth()
public boolean android.graphics.drawable.shapes.Shape.hasAlpha()
protected void android.graphics.drawable.shapes.Shape.onResize(float,float)
public final void android.graphics.drawable.shapes.Shape.resize(float,float)
Tracing public android.graphics.drawable.shapes.Shape()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.media.MediaPlayer[39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-get0 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-get1 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-get10 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-get11 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-get12 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-get13 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-get14 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-get15 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-get16 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-get17 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-get18 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-get19 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-get2 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-get20 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-get21 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-get3 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-get4 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-get5 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-get6 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-get7 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-get8 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-get9 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-set0 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-set1 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-set2 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-wrap0 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-wrap1 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-wrap2 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-wrap3 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.-wrap4 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.HandleProvisioninig [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer._getAudioStreamType [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer._pause [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer._prepare [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer._prepareDrm [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer._release [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer._releaseDrm [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer._reset [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer._seekTo [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer._setAudioStreamType [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer._setAuxEffectSendLevel [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer._setDataSource [2 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer._setVideoSurface [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer._setVolume [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer._start [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer._stop [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.attemptDataSource [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.availableMimeTypeForExternalSource [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.cleanDrmObj [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.create [5 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.getAudioStreamType [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.getByteArrayFromUUID [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.getInbandTrackInfo [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.isVideoScalingModeSupported [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.nativeSetDataSource [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.native_applyVolumeShaper [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.native_finalize [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.native_getMetadata [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.native_getMetrics [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.native_getVolumeShaperState [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.native_init [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.native_invoke [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.native_pullBatteryData [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.native_setMetadataFilter [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.native_setRetransmitEndpoint [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.native_setup [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.populateInbandTracks [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.postEventFromNative [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.prepareDrm_createDrmStep [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.prepareDrm_openSessionStep [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.resetDrmState [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.resumePrepareDrm [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.scanInternalSubtitleTracks [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.selectOrDeselectInbandTrack [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.selectOrDeselectTrack [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setDataSource [11 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setParameter [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setSubtitleAnchor [2 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.startImpl [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.stayAwake [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.updateSurfaceScreenOn [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.addSubtitleSource [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.addTimedTextSource [4 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.attachAuxEffect [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.createVolumeShaper [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.deselectTrack [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.easyPlaybackParams [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.finalize [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.getAudioSessionId [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.getBufferingParams [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.getCurrentPosition [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.getDefaultBufferingParams [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.getDrmInfo [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.getDrmPropertyString [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.getDuration [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.getKeyRequest [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.getMediaTimeProvider [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.getMetadata [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.getMetrics [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.getPlaybackParams [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.getSelectedTrack [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.getSyncParams [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.getTimestamp [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.getTrackInfo [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.getVideoHeight [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.getVideoWidth [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.invoke [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.isLooping [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.isPlaying [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.newRequest [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.onSubtitleTrackSelected [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.pause [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.playerApplyVolumeShaper [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.playerGetVolumeShaperState [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.playerPause [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.playerSetAuxEffectSendLevel [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.playerSetVolume [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.playerStart [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.playerStop [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.prepare [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.prepareAsync [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.prepareDrm [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.provideKeyResponse [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.release [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.releaseDrm [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.reset [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.restoreKeys [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.seekTo [2 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.selectTrack [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setAudioAttributes [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setAudioSessionId [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setAudioStreamType [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setAuxEffectSendLevel [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setBufferingParams [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setDisplay [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setDrmPropertyString [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setLooping [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setMetadataFilter [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setNextMediaPlayer [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setOnBufferingUpdateListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setOnCompletionListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setOnDrmConfigHelper [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setOnDrmInfoListener [2 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setOnDrmPreparedListener [2 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setOnErrorListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setOnInfoListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setOnPreparedListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setOnSeekCompleteListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setOnSubtitleDataListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setOnTimedMetaDataAvailableListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setOnTimedTextListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setOnVideoSizeChangedListener [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setPlaybackParams [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setRetransmitEndpoint [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setScreenOnWhilePlaying [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setSurface [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setSyncParams [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setVideoScalingMode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setVolume [2 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.setWakeMode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.start [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.stop [1 overload(s)][39;49;00m
[31;01mTracing Method : android.media.MediaPlayer.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
static android.media.MediaPlayer$DrmInfo android.media.MediaPlayer.-get0(android.media.MediaPlayer)
static java.lang.Object android.media.MediaPlayer.-get1(android.media.MediaPlayer)
static android.media.MediaPlayer$OnDrmPreparedHandlerDelegate android.media.MediaPlayer.-get10(android.media.MediaPlayer)
static android.media.MediaPlayer$OnErrorListener android.media.MediaPlayer.-get11(android.media.MediaPlayer)
static android.media.MediaPlayer$OnInfoListener android.media.MediaPlayer.-get12(android.media.MediaPlayer)
static android.media.MediaPlayer$OnPreparedListener android.media.MediaPlayer.-get13(android.media.MediaPlayer)
static android.media.MediaPlayer$OnSeekCompleteListener android.media.MediaPlayer.-get14(android.media.MediaPlayer)
static android.media.MediaPlayer$OnSubtitleDataListener android.media.MediaPlayer.-get15(android.media.MediaPlayer)
static android.media.MediaPlayer$OnTimedMetaDataAvailableListener android.media.MediaPlayer.-get16(android.media.MediaPlayer)
static android.media.MediaPlayer$OnTimedTextListener android.media.MediaPlayer.-get17(android.media.MediaPlayer)
static android.media.MediaPlayer$OnVideoSizeChangedListener android.media.MediaPlayer.-get18(android.media.MediaPlayer)
static java.util.Vector android.media.MediaPlayer.-get19(android.media.MediaPlayer)
static android.media.MediaDrm android.media.MediaPlayer.-get2(android.media.MediaPlayer)
static android.media.SubtitleController android.media.MediaPlayer.-get20(android.media.MediaPlayer)
static android.media.MediaPlayer$TimeProvider android.media.MediaPlayer.-get21(android.media.MediaPlayer)
static android.media.MediaPlayer$EventHandler android.media.MediaPlayer.-get3(android.media.MediaPlayer)
static java.util.Vector android.media.MediaPlayer.-get4(android.media.MediaPlayer)
static long android.media.MediaPlayer.-get5(android.media.MediaPlayer)
static android.media.MediaPlayer$OnBufferingUpdateListener android.media.MediaPlayer.-get6(android.media.MediaPlayer)
static android.media.MediaPlayer$OnCompletionListener android.media.MediaPlayer.-get7(android.media.MediaPlayer)
static android.media.MediaPlayer$OnCompletionListener android.media.MediaPlayer.-get8(android.media.MediaPlayer)
static android.media.MediaPlayer$OnDrmInfoHandlerDelegate android.media.MediaPlayer.-get9(android.media.MediaPlayer)
static boolean android.media.MediaPlayer.-set0(android.media.MediaPlayer,boolean)
static boolean android.media.MediaPlayer.-set1(android.media.MediaPlayer,boolean)
static android.media.SubtitleController android.media.MediaPlayer.-set2(android.media.MediaPlayer,android.media.SubtitleController)
static boolean android.media.MediaPlayer.-wrap0(android.media.MediaPlayer,java.util.UUID)
static void android.media.MediaPlayer.-wrap1(android.media.MediaPlayer)
static void android.media.MediaPlayer.-wrap2(android.media.MediaPlayer)
static void android.media.MediaPlayer.-wrap3(android.media.MediaPlayer)
static void android.media.MediaPlayer.-wrap4(android.media.MediaPlayer,boolean)
private int android.media.MediaPlayer.HandleProvisioninig(java.util.UUID)
private native int android.media.MediaPlayer._getAudioStreamType() throws java.lang.IllegalStateException
private native void android.media.MediaPlayer._pause() throws java.lang.IllegalStateException
private native void android.media.MediaPlayer._prepare() throws java.io.IOException,java.lang.IllegalStateException
private native void android.media.MediaPlayer._prepareDrm(byte[],byte[])
private native void android.media.MediaPlayer._release()
private native void android.media.MediaPlayer._releaseDrm()
private native void android.media.MediaPlayer._reset()
private final native void android.media.MediaPlayer._seekTo(long,int)
private native void android.media.MediaPlayer._setAudioStreamType(int)
private native void android.media.MediaPlayer._setAuxEffectSendLevel(float)
private native void android.media.MediaPlayer._setDataSource(android.media.MediaDataSource) throws java.lang.IllegalArgumentException,java.lang.IllegalStateException
private native void android.media.MediaPlayer._setDataSource(java.io.FileDescriptor,long,long) throws java.io.IOException,java.lang.IllegalArgumentException,java.lang.IllegalStateException
private native void android.media.MediaPlayer._setVideoSurface(android.view.Surface)
private native void android.media.MediaPlayer._setVolume(float,float)
private native void android.media.MediaPlayer._start() throws java.lang.IllegalStateException
private native void android.media.MediaPlayer._stop() throws java.lang.IllegalStateException
private boolean android.media.MediaPlayer.attemptDataSource(android.content.ContentResolver,android.net.Uri)
private static boolean android.media.MediaPlayer.availableMimeTypeForExternalSource(java.lang.String)
private void android.media.MediaPlayer.cleanDrmObj()
public static android.media.MediaPlayer android.media.MediaPlayer.create(android.content.Context,int)
public static android.media.MediaPlayer android.media.MediaPlayer.create(android.content.Context,int,android.media.AudioAttributes,int)
public static android.media.MediaPlayer android.media.MediaPlayer.create(android.content.Context,android.net.Uri)
public static android.media.MediaPlayer android.media.MediaPlayer.create(android.content.Context,android.net.Uri,android.view.SurfaceHolder)
public static android.media.MediaPlayer android.media.MediaPlayer.create(android.content.Context,android.net.Uri,android.view.SurfaceHolder,android.media.AudioAttributes,int)
private int android.media.MediaPlayer.getAudioStreamType()
private static final byte[] android.media.MediaPlayer.getByteArrayFromUUID(java.util.UUID)
private android.media.MediaPlayer$TrackInfo[] android.media.MediaPlayer.getInbandTrackInfo() throws java.lang.IllegalStateException
private boolean android.media.MediaPlayer.isVideoScalingModeSupported(int)
private native void android.media.MediaPlayer.nativeSetDataSource(android.os.IBinder,java.lang.String,java.lang.String[],java.lang.String[]) throws java.io.IOException,java.lang.IllegalArgumentException,java.lang.SecurityException,java.lang.IllegalStateException
private native int android.media.MediaPlayer.native_applyVolumeShaper(android.media.VolumeShaper$Configuration,android.media.VolumeShaper$Operation)
private final native void android.media.MediaPlayer.native_finalize()
private final native boolean android.media.MediaPlayer.native_getMetadata(boolean,boolean,android.os.Parcel)
private native android.os.PersistableBundle android.media.MediaPlayer.native_getMetrics()
private native android.media.VolumeShaper$State android.media.MediaPlayer.native_getVolumeShaperState(int)
private static final native void android.media.MediaPlayer.native_init()
private final native int android.media.MediaPlayer.native_invoke(android.os.Parcel,android.os.Parcel)
public static native int android.media.MediaPlayer.native_pullBatteryData(android.os.Parcel)
private final native int android.media.MediaPlayer.native_setMetadataFilter(android.os.Parcel)
private final native int android.media.MediaPlayer.native_setRetransmitEndpoint(java.lang.String,int)
private final native void android.media.MediaPlayer.native_setup(java.lang.Object)
private void android.media.MediaPlayer.populateInbandTracks()
private static void android.media.MediaPlayer.postEventFromNative(java.lang.Object,int,int,int,java.lang.Object)
private void android.media.MediaPlayer.prepareDrm_createDrmStep(java.util.UUID) throws android.media.UnsupportedSchemeException
private void android.media.MediaPlayer.prepareDrm_openSessionStep(java.util.UUID) throws android.media.NotProvisionedException,android.media.ResourceBusyException
private void android.media.MediaPlayer.resetDrmState()
private boolean android.media.MediaPlayer.resumePrepareDrm(java.util.UUID)
private void android.media.MediaPlayer.scanInternalSubtitleTracks()
private void android.media.MediaPlayer.selectOrDeselectInbandTrack(int,boolean) throws java.lang.IllegalStateException
private void android.media.MediaPlayer.selectOrDeselectTrack(int,boolean) throws java.lang.IllegalStateException
private void android.media.MediaPlayer.setDataSource(java.lang.String,java.util.Map,java.util.List) throws java.io.IOException,java.lang.IllegalArgumentException,java.lang.SecurityException,java.lang.IllegalStateException
private void android.media.MediaPlayer.setDataSource(java.lang.String,java.lang.String[],java.lang.String[],java.util.List) throws java.io.IOException,java.lang.IllegalArgumentException,java.lang.SecurityException,java.lang.IllegalStateException
private native boolean android.media.MediaPlayer.setParameter(int,android.os.Parcel)
private synchronized void android.media.MediaPlayer.setSubtitleAnchor()
private void android.media.MediaPlayer.startImpl()
private void android.media.MediaPlayer.stayAwake(boolean)
private void android.media.MediaPlayer.updateSurfaceScreenOn()
public void android.media.MediaPlayer.addSubtitleSource(java.io.InputStream,android.media.MediaFormat) throws java.lang.IllegalStateException
public void android.media.MediaPlayer.addTimedTextSource(android.content.Context,android.net.Uri,java.lang.String) throws java.io.IOException,java.lang.IllegalArgumentException,java.lang.IllegalStateException
public void android.media.MediaPlayer.addTimedTextSource(java.io.FileDescriptor,long,long,java.lang.String) throws java.lang.IllegalArgumentException,java.lang.IllegalStateException
public void android.media.MediaPlayer.addTimedTextSource(java.io.FileDescriptor,java.lang.String) throws java.lang.IllegalArgumentException,java.lang.IllegalStateException
public void android.media.MediaPlayer.addTimedTextSource(java.lang.String,java.lang.String) throws java.io.IOException,java.lang.IllegalArgumentException,java.lang.IllegalStateException
public native void android.media.MediaPlayer.attachAuxEffect(int)
public android.media.VolumeShaper android.media.MediaPlayer.createVolumeShaper(android.media.VolumeShaper$Configuration)
public void android.media.MediaPlayer.deselectTrack(int) throws java.lang.IllegalStateException
public android.media.PlaybackParams android.media.MediaPlayer.easyPlaybackParams(float,int)
protected void android.media.MediaPlayer.finalize()
public native int android.media.MediaPlayer.getAudioSessionId()
public native android.media.BufferingParams android.media.MediaPlayer.getBufferingParams()
public native int android.media.MediaPlayer.getCurrentPosition()
public native android.media.BufferingParams android.media.MediaPlayer.getDefaultBufferingParams()
public android.media.MediaPlayer$DrmInfo android.media.MediaPlayer.getDrmInfo()
public java.lang.String android.media.MediaPlayer.getDrmPropertyString(java.lang.String) throws android.media.MediaPlayer$NoDrmSchemeException
public native int android.media.MediaPlayer.getDuration()
public android.media.MediaDrm$KeyRequest android.media.MediaPlayer.getKeyRequest(byte[],byte[],java.lang.String,int,java.util.Map) throws android.media.MediaPlayer$NoDrmSchemeException
public android.media.MediaTimeProvider android.media.MediaPlayer.getMediaTimeProvider()
public android.media.Metadata android.media.MediaPlayer.getMetadata(boolean,boolean)
public android.os.PersistableBundle android.media.MediaPlayer.getMetrics()
public native android.media.PlaybackParams android.media.MediaPlayer.getPlaybackParams()
public int android.media.MediaPlayer.getSelectedTrack(int) throws java.lang.IllegalStateException
public native android.media.SyncParams android.media.MediaPlayer.getSyncParams()
public android.media.MediaTimestamp android.media.MediaPlayer.getTimestamp()
public android.media.MediaPlayer$TrackInfo[] android.media.MediaPlayer.getTrackInfo() throws java.lang.IllegalStateException
public native int android.media.MediaPlayer.getVideoHeight()
public native int android.media.MediaPlayer.getVideoWidth()
public void android.media.MediaPlayer.invoke(android.os.Parcel,android.os.Parcel)
public native boolean android.media.MediaPlayer.isLooping()
public native boolean android.media.MediaPlayer.isPlaying()
public android.os.Parcel android.media.MediaPlayer.newRequest()
public void android.media.MediaPlayer.onSubtitleTrackSelected(android.media.SubtitleTrack)
public void android.media.MediaPlayer.pause() throws java.lang.IllegalStateException
int android.media.MediaPlayer.playerApplyVolumeShaper(android.media.VolumeShaper$Configuration,android.media.VolumeShaper$Operation)
android.media.VolumeShaper$State android.media.MediaPlayer.playerGetVolumeShaperState(int)
void android.media.MediaPlayer.playerPause()
int android.media.MediaPlayer.playerSetAuxEffectSendLevel(boolean,float)
void android.media.MediaPlayer.playerSetVolume(boolean,float,float)
void android.media.MediaPlayer.playerStart()
void android.media.MediaPlayer.playerStop()
public void android.media.MediaPlayer.prepare() throws java.io.IOException,java.lang.IllegalStateException
public native void android.media.MediaPlayer.prepareAsync() throws java.lang.IllegalStateException
public void android.media.MediaPlayer.prepareDrm(java.util.UUID) throws android.media.UnsupportedSchemeException,android.media.ResourceBusyException,android.media.MediaPlayer$ProvisioningNetworkErrorException,android.media.MediaPlayer$ProvisioningServerErrorException
public byte[] android.media.MediaPlayer.provideKeyResponse(byte[],byte[]) throws android.media.MediaPlayer$NoDrmSchemeException,android.media.DeniedByServerException
public void android.media.MediaPlayer.release()
public void android.media.MediaPlayer.releaseDrm() throws android.media.MediaPlayer$NoDrmSchemeException
public void android.media.MediaPlayer.reset()
public void android.media.MediaPlayer.restoreKeys(byte[]) throws android.media.MediaPlayer$NoDrmSchemeException
public void android.media.MediaPlayer.seekTo(int) throws java.lang.IllegalStateException
public void android.media.MediaPlayer.seekTo(long,int)
public void android.media.MediaPlayer.selectTrack(int) throws java.lang.IllegalStateException
public void android.media.MediaPlayer.setAudioAttributes(android.media.AudioAttributes) throws java.lang.IllegalArgumentException
public native void android.media.MediaPlayer.setAudioSessionId(int) throws java.lang.IllegalArgumentException,java.lang.IllegalStateException
public void android.media.MediaPlayer.setAudioStreamType(int)
public void android.media.MediaPlayer.setAuxEffectSendLevel(float)
public native void android.media.MediaPlayer.setBufferingParams(android.media.BufferingParams)
public void android.media.MediaPlayer.setDataSource(android.content.Context,android.net.Uri) throws java.io.IOException,java.lang.IllegalArgumentException,java.lang.SecurityException,java.lang.IllegalStateException
public void android.media.MediaPlayer.setDataSource(android.content.Context,android.net.Uri,java.util.Map) throws java.io.IOException,java.lang.IllegalArgumentException,java.lang.SecurityException,java.lang.IllegalStateException
public void android.media.MediaPlayer.setDataSource(android.content.Context,android.net.Uri,java.util.Map,java.util.List) throws java.io.IOException
public void android.media.MediaPlayer.setDataSource(android.content.res.AssetFileDescriptor) throws java.io.IOException,java.lang.IllegalArgumentException,java.lang.IllegalStateException
public void android.media.MediaPlayer.setDataSource(android.media.MediaDataSource) throws java.lang.IllegalArgumentException,java.lang.IllegalStateException
public void android.media.MediaPlayer.setDataSource(java.io.FileDescriptor) throws java.io.IOException,java.lang.IllegalArgumentException,java.lang.IllegalStateException
public void android.media.MediaPlayer.setDataSource(java.io.FileDescriptor,long,long) throws java.io.IOException,java.lang.IllegalArgumentException,java.lang.IllegalStateException
public void android.media.MediaPlayer.setDataSource(java.lang.String) throws java.io.IOException,java.lang.IllegalArgumentException,java.lang.SecurityException,java.lang.IllegalStateException
public void android.media.MediaPlayer.setDataSource(java.lang.String,java.util.Map) throws java.io.IOException,java.lang.IllegalArgumentException,java.lang.SecurityException,java.lang.IllegalStateException
public void android.media.MediaPlayer.setDisplay(android.view.SurfaceHolder)
public void android.media.MediaPlayer.setDrmPropertyString(java.lang.String,java.lang.String) throws android.media.MediaPlayer$NoDrmSchemeException
public native void android.media.MediaPlayer.setLooping(boolean)
public int android.media.MediaPlayer.setMetadataFilter(java.util.Set,java.util.Set)
public native void android.media.MediaPlayer.setNextMediaPlayer(android.media.MediaPlayer)
public void android.media.MediaPlayer.setOnBufferingUpdateListener(android.media.MediaPlayer$OnBufferingUpdateListener)
public void android.media.MediaPlayer.setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)
public void android.media.MediaPlayer.setOnDrmConfigHelper(android.media.MediaPlayer$OnDrmConfigHelper)
public void android.media.MediaPlayer.setOnDrmInfoListener(android.media.MediaPlayer$OnDrmInfoListener)
public void android.media.MediaPlayer.setOnDrmInfoListener(android.media.MediaPlayer$OnDrmInfoListener,android.os.Handler)
public void android.media.MediaPlayer.setOnDrmPreparedListener(android.media.MediaPlayer$OnDrmPreparedListener)
public void android.media.MediaPlayer.setOnDrmPreparedListener(android.media.MediaPlayer$OnDrmPreparedListener,android.os.Handler)
public void android.media.MediaPlayer.setOnErrorListener(android.media.MediaPlayer$OnErrorListener)
public void android.media.MediaPlayer.setOnInfoListener(android.media.MediaPlayer$OnInfoListener)
public void android.media.MediaPlayer.setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)
public void android.media.MediaPlayer.setOnSeekCompleteListener(android.media.MediaPlayer$OnSeekCompleteListener)
public void android.media.MediaPlayer.setOnSubtitleDataListener(android.media.MediaPlayer$OnSubtitleDataListener)
public void android.media.MediaPlayer.setOnTimedMetaDataAvailableListener(android.media.MediaPlayer$OnTimedMetaDataAvailableListener)
public void android.media.MediaPlayer.setOnTimedTextListener(android.media.MediaPlayer$OnTimedTextListener)
public void android.media.MediaPlayer.setOnVideoSizeChangedListener(android.media.MediaPlayer$OnVideoSizeChangedListener)
public native void android.media.MediaPlayer.setPlaybackParams(android.media.PlaybackParams)
public void android.media.MediaPlayer.setRetransmitEndpoint(java.net.InetSocketAddress) throws java.lang.IllegalStateException,java.lang.IllegalArgumentException
public void android.media.MediaPlayer.setScreenOnWhilePlaying(boolean)
public void android.media.MediaPlayer.setSubtitleAnchor(android.media.SubtitleController,android.media.SubtitleController$Anchor)
public void android.media.MediaPlayer.setSurface(android.view.Surface)
public native void android.media.MediaPlayer.setSyncParams(android.media.SyncParams)
public void android.media.MediaPlayer.setVideoScalingMode(int)
public void android.media.MediaPlayer.setVolume(float)
public void android.media.MediaPlayer.setVolume(float,float)
public void android.media.MediaPlayer.setWakeMode(android.content.Context,int)
public void android.media.MediaPlayer.start() throws java.lang.IllegalStateException
public void android.media.MediaPlayer.stop() throws java.lang.IllegalStateException
Tracing public android.media.MediaPlayer()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.widget.Checkable[39;49;00m
[31;01mTracing Method : android.widget.Checkable.isChecked [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Checkable.setChecked [1 overload(s)][39;49;00m
[31;01mTracing Method : android.widget.Checkable.toggle [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract boolean android.widget.Checkable.isChecked()
public abstract void android.widget.Checkable.setChecked(boolean)
public abstract void android.widget.Checkable.toggle()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.app.assist.AssistStructure$ViewNodeText[39;49;00m
[31;01mTracing Method : android.app.assist.AssistStructure$ViewNodeText.isSimple [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.assist.AssistStructure$ViewNodeText.writeToParcel [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.assist.AssistStructure$ViewNodeText.$init [2 overload(s)][39;49;00m
[32;01m	Spec: => 
boolean android.app.assist.AssistStructure$ViewNodeText.isSimple()
void android.app.assist.AssistStructure$ViewNodeText.writeToParcel(android.os.Parcel,boolean,boolean)
Tracing android.app.assist.AssistStructure$ViewNodeText()
Tracing android.app.assist.AssistStructure$ViewNodeText(android.os.Parcel,boolean)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.os.ICancellationSignal$Stub[39;49;00m
[31;01mTracing Method : android.os.ICancellationSignal$Stub.asInterface [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ICancellationSignal$Stub.asBinder [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ICancellationSignal$Stub.onTransact [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ICancellationSignal$Stub.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public static android.os.ICancellationSignal android.os.ICancellationSignal$Stub.asInterface(android.os.IBinder)
public android.os.IBinder android.os.ICancellationSignal$Stub.asBinder()
public boolean android.os.ICancellationSignal$Stub.onTransact(int,android.os.Parcel,android.os.Parcel,int) throws android.os.RemoteException
Tracing public android.os.ICancellationSignal$Stub()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.hardware.camera2.impl.CameraMetadataNative$12[39;49;00m
[31;01mTracing Method : android.hardware.camera2.impl.CameraMetadataNative$12.getValue [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.impl.CameraMetadataNative$12.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public java.lang.Object android.hardware.camera2.impl.CameraMetadataNative$12.getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)
Tracing android.hardware.camera2.impl.CameraMetadataNative$12()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.text.method.TransformationMethod[39;49;00m
[31;01mTracing Method : android.text.method.TransformationMethod.getTransformation [1 overload(s)][39;49;00m
[31;01mTracing Method : android.text.method.TransformationMethod.onFocusChanged [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract java.lang.CharSequence android.text.method.TransformationMethod.getTransformation(java.lang.CharSequence,android.view.View)
public abstract void android.text.method.TransformationMethod.onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.Window$OnWindowDismissedCallback[39;49;00m
[31;01mTracing Method : android.view.Window$OnWindowDismissedCallback.onWindowDismissed [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void android.view.Window$OnWindowDismissedCallback.onWindowDismissed(boolean,boolean)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.net.Network[39;49;00m
[31;01mTracing Method : android.net.Network.maybeInitHttpClient [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.Network.bindSocket [3 overload(s)][39;49;00m
[31;01mTracing Method : android.net.Network.describeContents [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.Network.equals [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.Network.getAllByName [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.Network.getByName [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.Network.getNetworkHandle [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.Network.getSocketFactory [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.Network.hashCode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.Network.openConnection [2 overload(s)][39;49;00m
[31;01mTracing Method : android.net.Network.toString [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.Network.writeToParcel [1 overload(s)][39;49;00m
[31;01mTracing Method : android.net.Network.$init [2 overload(s)][39;49;00m
[32;01m	Spec: => 
private void android.net.Network.maybeInitHttpClient()
public void android.net.Network.bindSocket(java.io.FileDescriptor) throws java.io.IOException
public void android.net.Network.bindSocket(java.net.DatagramSocket) throws java.io.IOException
public void android.net.Network.bindSocket(java.net.Socket) throws java.io.IOException
public int android.net.Network.describeContents()
public boolean android.net.Network.equals(java.lang.Object)
public java.net.InetAddress[] android.net.Network.getAllByName(java.lang.String) throws java.net.UnknownHostException
public java.net.InetAddress android.net.Network.getByName(java.lang.String) throws java.net.UnknownHostException
public long android.net.Network.getNetworkHandle()
public javax.net.SocketFactory android.net.Network.getSocketFactory()
public int android.net.Network.hashCode()
public java.net.URLConnection android.net.Network.openConnection(java.net.URL) throws java.io.IOException
public java.net.URLConnection android.net.Network.openConnection(java.net.URL,java.net.Proxy) throws java.io.IOException
public java.lang.String android.net.Network.toString()
public void android.net.Network.writeToParcel(android.os.Parcel,int)
Tracing public android.net.Network(int)
Tracing public android.net.Network(android.net.Network)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.os.Message$1[39;49;00m
[31;01mTracing Method : android.os.Message$1.createFromParcel [2 overload(s)][39;49;00m
[31;01mTracing Method : android.os.Message$1.newArray [2 overload(s)][39;49;00m
[31;01mTracing Method : android.os.Message$1.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public android.os.Message android.os.Message$1.createFromParcel(android.os.Parcel)
public java.lang.Object android.os.Message$1.createFromParcel(android.os.Parcel)
public android.os.Message[] android.os.Message$1.newArray(int)
public java.lang.Object[] android.os.Message$1.newArray(int)
Tracing android.os.Message$1()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.content.pm.InstrumentationInfo$1[39;49;00m
[31;01mTracing Method : android.content.pm.InstrumentationInfo$1.createFromParcel [2 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.InstrumentationInfo$1.newArray [2 overload(s)][39;49;00m
[31;01mTracing Method : android.content.pm.InstrumentationInfo$1.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public android.content.pm.InstrumentationInfo android.content.pm.InstrumentationInfo$1.createFromParcel(android.os.Parcel)
public java.lang.Object android.content.pm.InstrumentationInfo$1.createFromParcel(android.os.Parcel)
public android.content.pm.InstrumentationInfo[] android.content.pm.InstrumentationInfo$1.newArray(int)
public java.lang.Object[] android.content.pm.InstrumentationInfo$1.newArray(int)
Tracing android.content.pm.InstrumentationInfo$1()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.view.WindowAnimationFrameStats[39;49;00m
[31;01mTracing Method : android.view.WindowAnimationFrameStats.describeContents [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.WindowAnimationFrameStats.init [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.WindowAnimationFrameStats.toString [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.WindowAnimationFrameStats.writeToParcel [1 overload(s)][39;49;00m
[31;01mTracing Method : android.view.WindowAnimationFrameStats.$init [3 overload(s)][39;49;00m
[32;01m	Spec: => 
public int android.view.WindowAnimationFrameStats.describeContents()
public void android.view.WindowAnimationFrameStats.init(long,long[])
public java.lang.String android.view.WindowAnimationFrameStats.toString()
public void android.view.WindowAnimationFrameStats.writeToParcel(android.os.Parcel,int)
Tracing public android.view.WindowAnimationFrameStats()
Tracing private android.view.WindowAnimationFrameStats(android.os.Parcel)
Tracing android.view.WindowAnimationFrameStats(android.os.Parcel,android.view.WindowAnimationFrameStats)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.service.vr.IVrStateCallbacks[39;49;00m
[31;01mTracing Method : android.service.vr.IVrStateCallbacks.onVrStateChanged [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract void android.service.vr.IVrStateCallbacks.onVrStateChanged(boolean) throws android.os.RemoteException
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => com.android.internal.util.StateMachine[39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.-get0 [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.-get1 [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.-set0 [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.-set1 [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.initStateMachine [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.addLogRec [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.addState [2 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.copyLogRecs [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.deferMessage [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.dump [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.getCurrentMessage [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.getCurrentState [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.getHandler [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.getLogRec [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.getLogRecCount [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.getLogRecMaxSize [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.getLogRecSize [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.getLogRecString [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.getName [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.getWhatToString [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.haltedProcessMessage [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.hasDeferredMessages [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.hasMessages [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.isDbg [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.isQuit [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.log [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.logAndAddLogRec [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.logd [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.loge [2 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.logi [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.logv [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.logw [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.obtainMessage [6 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.onHalting [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.onPostHandleMessage [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.onPreHandleMessage [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.onQuitting [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.quit [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.quitNow [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.recordLogRec [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.removeDeferredMessages [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.removeMessages [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.removeState [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.sendMessage [6 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.sendMessageAtFrontOfQueue [6 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.sendMessageDelayed [6 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.setDbg [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.setInitialState [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.setLogOnlyTransitions [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.setLogRecSize [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.start [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.toString [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.transitionTo [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.transitionToHaltingState [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.unhandledMessage [1 overload(s)][39;49;00m
[31;01mTracing Method : com.android.internal.util.StateMachine.$init [3 overload(s)][39;49;00m
[32;01m	Spec: => 
static java.lang.String com.android.internal.util.StateMachine.-get0(com.android.internal.util.StateMachine)
static android.os.HandlerThread com.android.internal.util.StateMachine.-get1(com.android.internal.util.StateMachine)
static com.android.internal.util.StateMachine$SmHandler com.android.internal.util.StateMachine.-set0(com.android.internal.util.StateMachine,com.android.internal.util.StateMachine$SmHandler)
static android.os.HandlerThread com.android.internal.util.StateMachine.-set1(com.android.internal.util.StateMachine,android.os.HandlerThread)
private void com.android.internal.util.StateMachine.initStateMachine(java.lang.String,android.os.Looper)
public void com.android.internal.util.StateMachine.addLogRec(java.lang.String)
public final void com.android.internal.util.StateMachine.addState(com.android.internal.util.State)
public final void com.android.internal.util.StateMachine.addState(com.android.internal.util.State,com.android.internal.util.State)
public final java.util.Collection com.android.internal.util.StateMachine.copyLogRecs()
public final void com.android.internal.util.StateMachine.deferMessage(android.os.Message)
public void com.android.internal.util.StateMachine.dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
public final android.os.Message com.android.internal.util.StateMachine.getCurrentMessage()
public final com.android.internal.util.IState com.android.internal.util.StateMachine.getCurrentState()
public final android.os.Handler com.android.internal.util.StateMachine.getHandler()
public final com.android.internal.util.StateMachine$LogRec com.android.internal.util.StateMachine.getLogRec(int)
public final int com.android.internal.util.StateMachine.getLogRecCount()
public final int com.android.internal.util.StateMachine.getLogRecMaxSize()
public final int com.android.internal.util.StateMachine.getLogRecSize()
protected java.lang.String com.android.internal.util.StateMachine.getLogRecString(android.os.Message)
public final java.lang.String com.android.internal.util.StateMachine.getName()
protected java.lang.String com.android.internal.util.StateMachine.getWhatToString(int)
protected void com.android.internal.util.StateMachine.haltedProcessMessage(android.os.Message)
protected final boolean com.android.internal.util.StateMachine.hasDeferredMessages(int)
protected final boolean com.android.internal.util.StateMachine.hasMessages(int)
public boolean com.android.internal.util.StateMachine.isDbg()
protected final boolean com.android.internal.util.StateMachine.isQuit(android.os.Message)
protected void com.android.internal.util.StateMachine.log(java.lang.String)
protected void com.android.internal.util.StateMachine.logAndAddLogRec(java.lang.String)
protected void com.android.internal.util.StateMachine.logd(java.lang.String)
protected void com.android.internal.util.StateMachine.loge(java.lang.String)
protected void com.android.internal.util.StateMachine.loge(java.lang.String,java.lang.Throwable)
protected void com.android.internal.util.StateMachine.logi(java.lang.String)
protected void com.android.internal.util.StateMachine.logv(java.lang.String)
protected void com.android.internal.util.StateMachine.logw(java.lang.String)
public final android.os.Message com.android.internal.util.StateMachine.obtainMessage()
public final android.os.Message com.android.internal.util.StateMachine.obtainMessage(int)
public final android.os.Message com.android.internal.util.StateMachine.obtainMessage(int,int)
public final android.os.Message com.android.internal.util.StateMachine.obtainMessage(int,int,int)
public final android.os.Message com.android.internal.util.StateMachine.obtainMessage(int,int,int,java.lang.Object)
public final android.os.Message com.android.internal.util.StateMachine.obtainMessage(int,java.lang.Object)
protected void com.android.internal.util.StateMachine.onHalting()
protected void com.android.internal.util.StateMachine.onPostHandleMessage(android.os.Message)
protected void com.android.internal.util.StateMachine.onPreHandleMessage(android.os.Message)
protected void com.android.internal.util.StateMachine.onQuitting()
public final void com.android.internal.util.StateMachine.quit()
public final void com.android.internal.util.StateMachine.quitNow()
protected boolean com.android.internal.util.StateMachine.recordLogRec(android.os.Message)
protected final void com.android.internal.util.StateMachine.removeDeferredMessages(int)
protected final void com.android.internal.util.StateMachine.removeMessages(int)
public final void com.android.internal.util.StateMachine.removeState(com.android.internal.util.State)
public void com.android.internal.util.StateMachine.sendMessage(int)
public void com.android.internal.util.StateMachine.sendMessage(int,int)
public void com.android.internal.util.StateMachine.sendMessage(int,int,int)
public void com.android.internal.util.StateMachine.sendMessage(int,int,int,java.lang.Object)
public void com.android.internal.util.StateMachine.sendMessage(int,java.lang.Object)
public void com.android.internal.util.StateMachine.sendMessage(android.os.Message)
protected final void com.android.internal.util.StateMachine.sendMessageAtFrontOfQueue(int)
protected final void com.android.internal.util.StateMachine.sendMessageAtFrontOfQueue(int,int)
protected final void com.android.internal.util.StateMachine.sendMessageAtFrontOfQueue(int,int,int)
protected final void com.android.internal.util.StateMachine.sendMessageAtFrontOfQueue(int,int,int,java.lang.Object)
protected final void com.android.internal.util.StateMachine.sendMessageAtFrontOfQueue(int,java.lang.Object)
protected final void com.android.internal.util.StateMachine.sendMessageAtFrontOfQueue(android.os.Message)
public void com.android.internal.util.StateMachine.sendMessageDelayed(int,int,int,long)
public void com.android.internal.util.StateMachine.sendMessageDelayed(int,int,int,java.lang.Object,long)
public void com.android.internal.util.StateMachine.sendMessageDelayed(int,int,long)
public void com.android.internal.util.StateMachine.sendMessageDelayed(int,long)
public void com.android.internal.util.StateMachine.sendMessageDelayed(int,java.lang.Object,long)
public void com.android.internal.util.StateMachine.sendMessageDelayed(android.os.Message,long)
public void com.android.internal.util.StateMachine.setDbg(boolean)
public final void com.android.internal.util.StateMachine.setInitialState(com.android.internal.util.State)
public final void com.android.internal.util.StateMachine.setLogOnlyTransitions(boolean)
public final void com.android.internal.util.StateMachine.setLogRecSize(int)
public void com.android.internal.util.StateMachine.start()
public java.lang.String com.android.internal.util.StateMachine.toString()
public final void com.android.internal.util.StateMachine.transitionTo(com.android.internal.util.IState)
public final void com.android.internal.util.StateMachine.transitionToHaltingState()
protected void com.android.internal.util.StateMachine.unhandledMessage(android.os.Message)
Tracing protected com.android.internal.util.StateMachine(java.lang.String)
Tracing protected com.android.internal.util.StateMachine(java.lang.String,android.os.Handler)
Tracing protected com.android.internal.util.StateMachine(java.lang.String,android.os.Looper)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.database.ContentObserver$NotificationRunnable[39;49;00m
[31;01mTracing Method : android.database.ContentObserver$NotificationRunnable.run [1 overload(s)][39;49;00m
[31;01mTracing Method : android.database.ContentObserver$NotificationRunnable.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public void android.database.ContentObserver$NotificationRunnable.run()
Tracing public android.database.ContentObserver$NotificationRunnable(android.database.ContentObserver,boolean,android.net.Uri,int)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.os.ParcelFileDescriptor[39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.-wrap0 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.adoptFd [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.closeWithStatus [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.createCommSocketPair [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.createPipe [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.createReliablePipe [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.createReliableSocketPair [2 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.createSocketPair [2 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.dup [2 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.fromData [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.fromDatagramSocket [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.fromFd [2 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.fromSocket [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.getFile [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.getOrCreateStatusBuffer [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.open [2 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.openInternal [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.parseMode [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.readCommStatus [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.writeCommStatusAndClose [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.canDetectErrors [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.checkError [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.close [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.closeWithError [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.describeContents [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.detachFd [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.finalize [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.getFd [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.getFileDescriptor [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.getStatSize [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.releaseResources [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.seekTo [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.toString [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.writeToParcel [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.ParcelFileDescriptor.$init [3 overload(s)][39;49;00m
[32;01m	Spec: => 
static android.os.ParcelFileDescriptor$Status android.os.ParcelFileDescriptor.-wrap0(java.io.FileDescriptor,byte[])
public static android.os.ParcelFileDescriptor android.os.ParcelFileDescriptor.adoptFd(int)
private void android.os.ParcelFileDescriptor.closeWithStatus(int,java.lang.String)
private static java.io.FileDescriptor[] android.os.ParcelFileDescriptor.createCommSocketPair() throws java.io.IOException
public static android.os.ParcelFileDescriptor[] android.os.ParcelFileDescriptor.createPipe() throws java.io.IOException
public static android.os.ParcelFileDescriptor[] android.os.ParcelFileDescriptor.createReliablePipe() throws java.io.IOException
public static android.os.ParcelFileDescriptor[] android.os.ParcelFileDescriptor.createReliableSocketPair() throws java.io.IOException
public static android.os.ParcelFileDescriptor[] android.os.ParcelFileDescriptor.createReliableSocketPair(int) throws java.io.IOException
public static android.os.ParcelFileDescriptor[] android.os.ParcelFileDescriptor.createSocketPair() throws java.io.IOException
public static android.os.ParcelFileDescriptor[] android.os.ParcelFileDescriptor.createSocketPair(int) throws java.io.IOException
public static android.os.ParcelFileDescriptor android.os.ParcelFileDescriptor.dup(java.io.FileDescriptor) throws java.io.IOException
public static android.os.ParcelFileDescriptor android.os.ParcelFileDescriptor.fromData(byte[],java.lang.String) throws java.io.IOException
public static android.os.ParcelFileDescriptor android.os.ParcelFileDescriptor.fromDatagramSocket(java.net.DatagramSocket)
public static android.os.ParcelFileDescriptor android.os.ParcelFileDescriptor.fromFd(int) throws java.io.IOException
public static android.os.ParcelFileDescriptor android.os.ParcelFileDescriptor.fromFd(java.io.FileDescriptor,android.os.Handler,android.os.ParcelFileDescriptor$OnCloseListener) throws java.io.IOException
public static android.os.ParcelFileDescriptor android.os.ParcelFileDescriptor.fromSocket(java.net.Socket)
public static java.io.File android.os.ParcelFileDescriptor.getFile(java.io.FileDescriptor) throws java.io.IOException
private byte[] android.os.ParcelFileDescriptor.getOrCreateStatusBuffer()
public static android.os.ParcelFileDescriptor android.os.ParcelFileDescriptor.open(java.io.File,int) throws java.io.FileNotFoundException
public static android.os.ParcelFileDescriptor android.os.ParcelFileDescriptor.open(java.io.File,int,android.os.Handler,android.os.ParcelFileDescriptor$OnCloseListener) throws java.io.IOException
private static java.io.FileDescriptor android.os.ParcelFileDescriptor.openInternal(java.io.File,int) throws java.io.FileNotFoundException
public static int android.os.ParcelFileDescriptor.parseMode(java.lang.String)
private static android.os.ParcelFileDescriptor$Status android.os.ParcelFileDescriptor.readCommStatus(java.io.FileDescriptor,byte[])
private void android.os.ParcelFileDescriptor.writeCommStatusAndClose(int,java.lang.String)
public boolean android.os.ParcelFileDescriptor.canDetectErrors()
public void android.os.ParcelFileDescriptor.checkError() throws java.io.IOException
public void android.os.ParcelFileDescriptor.close() throws java.io.IOException
public void android.os.ParcelFileDescriptor.closeWithError(java.lang.String) throws java.io.IOException
public int android.os.ParcelFileDescriptor.describeContents()
public int android.os.ParcelFileDescriptor.detachFd()
public android.os.ParcelFileDescriptor android.os.ParcelFileDescriptor.dup() throws java.io.IOException
protected void android.os.ParcelFileDescriptor.finalize() throws java.lang.Throwable
public int android.os.ParcelFileDescriptor.getFd()
public java.io.FileDescriptor android.os.ParcelFileDescriptor.getFileDescriptor()
public long android.os.ParcelFileDescriptor.getStatSize()
public void android.os.ParcelFileDescriptor.releaseResources()
public long android.os.ParcelFileDescriptor.seekTo(long) throws java.io.IOException
public java.lang.String android.os.ParcelFileDescriptor.toString()
public void android.os.ParcelFileDescriptor.writeToParcel(android.os.Parcel,int)
Tracing public android.os.ParcelFileDescriptor(android.os.ParcelFileDescriptor)
Tracing public android.os.ParcelFileDescriptor(java.io.FileDescriptor)
Tracing public android.os.ParcelFileDescriptor(java.io.FileDescriptor,java.io.FileDescriptor)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.hardware.camera2.impl.CameraMetadataNative$13[39;49;00m
[31;01mTracing Method : android.hardware.camera2.impl.CameraMetadataNative$13.getValue [1 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.camera2.impl.CameraMetadataNative$13.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public java.lang.Object android.hardware.camera2.impl.CameraMetadataNative$13.getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative$Key)
Tracing android.hardware.camera2.impl.CameraMetadataNative$13()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.util.AtomicFile[39;49;00m
[31;01mTracing Method : android.util.AtomicFile.delete [1 overload(s)][39;49;00m
[31;01mTracing Method : android.util.AtomicFile.exists [1 overload(s)][39;49;00m
[31;01mTracing Method : android.util.AtomicFile.failWrite [1 overload(s)][39;49;00m
[31;01mTracing Method : android.util.AtomicFile.finishWrite [1 overload(s)][39;49;00m
[31;01mTracing Method : android.util.AtomicFile.getBaseFile [1 overload(s)][39;49;00m
[31;01mTracing Method : android.util.AtomicFile.getLastModifiedTime [1 overload(s)][39;49;00m
[31;01mTracing Method : android.util.AtomicFile.openAppend [1 overload(s)][39;49;00m
[31;01mTracing Method : android.util.AtomicFile.openRead [1 overload(s)][39;49;00m
[31;01mTracing Method : android.util.AtomicFile.readFully [1 overload(s)][39;49;00m
[31;01mTracing Method : android.util.AtomicFile.startWrite [1 overload(s)][39;49;00m
[31;01mTracing Method : android.util.AtomicFile.truncate [1 overload(s)][39;49;00m
[31;01mTracing Method : android.util.AtomicFile.write [1 overload(s)][39;49;00m
[31;01mTracing Method : android.util.AtomicFile.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public void android.util.AtomicFile.delete()
public boolean android.util.AtomicFile.exists()
public void android.util.AtomicFile.failWrite(java.io.FileOutputStream)
public void android.util.AtomicFile.finishWrite(java.io.FileOutputStream)
public java.io.File android.util.AtomicFile.getBaseFile()
public long android.util.AtomicFile.getLastModifiedTime()
public java.io.FileOutputStream android.util.AtomicFile.openAppend() throws java.io.IOException
public java.io.FileInputStream android.util.AtomicFile.openRead() throws java.io.FileNotFoundException
public byte[] android.util.AtomicFile.readFully() throws java.io.IOException
public java.io.FileOutputStream android.util.AtomicFile.startWrite() throws java.io.IOException
public void android.util.AtomicFile.truncate() throws java.io.IOException
public void android.util.AtomicFile.write(java.util.function.Consumer)
Tracing public android.util.AtomicFile(java.io.File)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.app.StatusBarManager[39;49;00m
[31;01mTracing Method : android.app.StatusBarManager.getService [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.StatusBarManager.windowStateToString [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.StatusBarManager.collapsePanels [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.StatusBarManager.disable [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.StatusBarManager.disable2 [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.StatusBarManager.expandNotificationsPanel [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.StatusBarManager.expandSettingsPanel [2 overload(s)][39;49;00m
[31;01mTracing Method : android.app.StatusBarManager.removeIcon [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.StatusBarManager.setIcon [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.StatusBarManager.setIconVisibility [1 overload(s)][39;49;00m
[31;01mTracing Method : android.app.StatusBarManager.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
private synchronized com.android.internal.statusbar.IStatusBarService android.app.StatusBarManager.getService()
public static java.lang.String android.app.StatusBarManager.windowStateToString(int)
public void android.app.StatusBarManager.collapsePanels()
public void android.app.StatusBarManager.disable(int)
public void android.app.StatusBarManager.disable2(int)
public void android.app.StatusBarManager.expandNotificationsPanel()
public void android.app.StatusBarManager.expandSettingsPanel()
public void android.app.StatusBarManager.expandSettingsPanel(java.lang.String)
public void android.app.StatusBarManager.removeIcon(java.lang.String)
public void android.app.StatusBarManager.setIcon(java.lang.String,int,int,java.lang.String)
public void android.app.StatusBarManager.setIconVisibility(java.lang.String,boolean)
Tracing android.app.StatusBarManager(android.content.Context)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.animation.Keyframes$FloatKeyframes[39;49;00m
[31;01mTracing Method : android.animation.Keyframes$FloatKeyframes.getFloatValue [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public abstract float android.animation.Keyframes$FloatKeyframes.getFloatValue(float)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.hardware.display.WifiDisplay$1[39;49;00m
[31;01mTracing Method : android.hardware.display.WifiDisplay$1.createFromParcel [2 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.display.WifiDisplay$1.newArray [2 overload(s)][39;49;00m
[31;01mTracing Method : android.hardware.display.WifiDisplay$1.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public android.hardware.display.WifiDisplay android.hardware.display.WifiDisplay$1.createFromParcel(android.os.Parcel)
public java.lang.Object android.hardware.display.WifiDisplay$1.createFromParcel(android.os.Parcel)
public android.hardware.display.WifiDisplay[] android.hardware.display.WifiDisplay$1.newArray(int)
public java.lang.Object[] android.hardware.display.WifiDisplay$1.newArray(int)
Tracing android.hardware.display.WifiDisplay$1()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.os.IDeviceIdleController$Stub[39;49;00m
[31;01mTracing Method : android.os.IDeviceIdleController$Stub.asInterface [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.IDeviceIdleController$Stub.asBinder [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.IDeviceIdleController$Stub.onTransact [1 overload(s)][39;49;00m
[31;01mTracing Method : android.os.IDeviceIdleController$Stub.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public static android.os.IDeviceIdleController android.os.IDeviceIdleController$Stub.asInterface(android.os.IBinder)
public android.os.IBinder android.os.IDeviceIdleController$Stub.asBinder()
public boolean android.os.IDeviceIdleController$Stub.onTransact(int,android.os.Parcel,android.os.Parcel,int) throws android.os.RemoteException
Tracing public android.os.IDeviceIdleController$Stub()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.content.res.DrawableCache[39;49;00m
[31;01mTracing Method : android.content.res.DrawableCache.getInstance [1 overload(s)][39;49;00m
[31;01mTracing Method : android.content.res.DrawableCache.shouldInvalidateEntry [2 overload(s)][39;49;00m
[31;01mTracing Method : android.content.res.DrawableCache.$init [1 overload(s)][39;49;00m
[32;01m	Spec: => 
public android.graphics.drawable.Drawable android.content.res.DrawableCache.getInstance(long,android.content.res.Resources,android.content.res.Resources$Theme)
public boolean android.content.res.DrawableCache.shouldInvalidateEntry(android.graphics.drawable.Drawable$ConstantState,int)
public boolean android.content.res.DrawableCache.shouldInvalidateEntry(java.lang.Object,int)
Tracing android.content.res.DrawableCache()
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[39;49;00m
[30;01mFound Class => android.app.-$Lambda$c44uHH2WE4sJvw5tZZB6gRzEaHI[39;49;00m
TypeError: cannot read property 'overloads' of undefined
    at traceMethod (/frida/repl-2.js:96)
    at <anonymous> (/frida/repl-2.js:189)
    at forEach (native)
    at traceClass (/frida/repl-2.js:190)
    at onMatch (/frida/repl-2.js:228)
    at <anonymous> (frida/node_modules/frida-java-bridge/index.js:125)
    at forEach (native)
    at _enumerateLoadedClassesArt (frida/node_modules/frida-java-bridge/index.js:126)
    at enumerateLoadedClasses (frida/node_modules/frida-java-bridge/index.js:67)
    at hook (/frida/repl-2.js:233)
    at <anonymous> (/frida/repl-2.js:258)
    at <anonymous> (frida/node_modules/frida-java-bridge/lib/vm.js:12)
    at _performPendingVmOps (frida/node_modules/frida-java-bridge/index.js:250)
    at <anonymous> (frida/node_modules/frida-java-bridge/index.js:242)
    at apply (native)
    at ne (frida/node_modules/frida-java-bridge/lib/class-factory.js:620)
    at <anonymous> (frida/node_modules/frida-java-bridge/lib/class-factory.js:598)
